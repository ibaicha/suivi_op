part of 'ece_id_produit_id_type_charge_id_exploitation_bloc.dart';

enum EceIdProduitIdTypeChargeIdExploitationStatus {
  initial,
  success,
  error,
  loading,
  selected
}

extension EceIdProduitIdTypeChargeIdExploitationX
    on EceIdProduitIdTypeChargeIdExploitationStatus {
  bool get isInitial =>
      this == EceIdProduitIdTypeChargeIdExploitationStatus.initial;
  bool get isSuccess =>
      this == EceIdProduitIdTypeChargeIdExploitationStatus.success;
  bool get isError =>
      this == EceIdProduitIdTypeChargeIdExploitationStatus.error;
  bool get isLoading =>
      this == EceIdProduitIdTypeChargeIdExploitationStatus.loading;
  bool get isSelected =>
      this == EceIdProduitIdTypeChargeIdExploitationStatus.selected;
}

class EceIdProduitIdTypeChargeIdExploitationState extends Equatable {
  const EceIdProduitIdTypeChargeIdExploitationState({
    this.status = EceIdProduitIdTypeChargeIdExploitationStatus.initial,
    List<MxExploitationChargeExploitationObject>? exploitationChargeExploitations,
    int idProduit = 0,
    int idTypeChargeExploitation = 0,
    int idExploitation = 0,
  })  : exploitationChargeExploitations =
            exploitationChargeExploitations ?? const [],
        idProduit = idProduit,
        idTypeChargeExploitation = idTypeChargeExploitation,
        idExploitation = idExploitation;

  final EceIdProduitIdTypeChargeIdExploitationStatus status;
  final List<MxExploitationChargeExploitationObject>
      exploitationChargeExploitations;
  final int idProduit;
  final int idTypeChargeExploitation;
  final int idExploitation;

  @override
  List<Object?> get props => [status, idProduit];

  EceIdProduitIdTypeChargeIdExploitationState copyWith({
    List<MxExploitationChargeExploitationObject>? exploitationChargeExploitations,
    EceIdProduitIdTypeChargeIdExploitationStatus? status,
    int idProduit = 0,
    int idTypeChargeExploitation = 0,
    int idExploitation = 0,
  }) {
    return EceIdProduitIdTypeChargeIdExploitationState(
        exploitationChargeExploitations: exploitationChargeExploitations ??
            this.exploitationChargeExploitations,
        status: status ?? this.status,
        idProduit: idProduit,
        idTypeChargeExploitation: idTypeChargeExploitation,
        idExploitation: idExploitation);
  }
}
