 

import '../../../../../core/data/model/ObjectBox/objectBoxModels.dart';
import '../../../../../core/data/service/ObjectBoxHelper.dart';
import '../../../../../objectbox.g.dart';

class TypeChargeExploitationService {
  Future<List<AnneeObject>> getAllAnnees() async {
    final anneeBox = ObjectBox.anneesBox;
    List<AnneeObject> mesAnnees = [];

    Query<AnneeObject> query = anneeBox!.query().build();
    mesAnnees = query.find();
    query.close();
    return mesAnnees;
  }

  Future<List<TypeChargeExploitationObject>>
      generateTypeChargeExploitationsIdProduit(int ProduitId) async {
    final chargeExploitationsBox = ObjectBox.chargeExploitationsBox;
    final query = chargeExploitationsBox!
        .query((ChargeExploitationObject_.produitid.equals(ProduitId)))
        .build();
    print('-----------SERVICE PRODUIT ID ----$ProduitId--------------');

    final mesChargeExploitationsBox = query.find();
    query.close();

    List<TypeChargeExploitationObject> listTypeChargeExploitationObject = [];

    for (var element in mesChargeExploitationsBox) {
      listTypeChargeExploitationObject
          .removeWhere((e) => element.typechargeexploitationid == e.id);

      listTypeChargeExploitationObject.add(TypeChargeExploitationObject(
          id: element.typechargeexploitationid,
          name: element.typechargeexploitationname));
    }
    return listTypeChargeExploitationObject;
  }
}
