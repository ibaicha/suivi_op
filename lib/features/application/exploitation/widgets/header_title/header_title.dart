import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';

import '../../../../../core/res/constants.dart';
import '../../../../auth/presentation/widgets/fade_in.dart';
import '../../../../auth/presentation/widgets/theme.dart';
import '../../../../auth/presentation/widgets/transition_route_observer.dart';
import '../../../../auth/presentation/widgets/widgets.dart';

class HeaderTitle extends StatefulWidget {
  const HeaderTitle({super.key});

  @override
  State<HeaderTitle> createState() => _HeaderTitleState();
}

class _HeaderTitleState extends State<HeaderTitle>
    with SingleTickerProviderStateMixin
    implements TransitionRouteAware {
  Future<bool> _goToLogin(BuildContext context) {
    return Navigator.of(context)
        .pushReplacementNamed('/dashboard')
        // we dont want to pop the screen, just replace it completely
        .then((_) => false);
  }

  final routeObserver = TransitionRouteObserver<PageRoute?>();
  static const headerAniInterval = Interval(.1, .3, curve: Curves.easeOut);
  late Animation<double> _headerScaleAnimation;
  AnimationController? _loadingController;

  @override
  void initState() {
    super.initState();

    _loadingController = AnimationController(
      vsync: this,
      duration: const Duration(milliseconds: 1250),
    );

    _headerScaleAnimation = Tween<double>(begin: .6, end: 1).animate(
      CurvedAnimation(
        parent: _loadingController!,
        curve: headerAniInterval,
      ),
    );
  }

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    routeObserver.subscribe(
      this,
      ModalRoute.of(context) as PageRoute<dynamic>?,
    );
  }

  @override
  void dispose() {
    routeObserver.unsubscribe(this);
    _loadingController!.dispose();
    super.dispose();
  }

  @override
  void didPushAfterTransition() => _loadingController!.forward();

  AppBar _buildAppBar(ThemeData theme) {
    final menuBtn = IconButton(
      color: theme.colorScheme.secondary,
      icon: const Icon(FontAwesomeIcons.bars),
      onPressed: () {},
    );
    final signOutBtn = IconButton(
      icon: const Icon(FontAwesomeIcons.rightFromBracket),
      color: theme.colorScheme.secondary,
      onPressed: () => _goToLogin(context),
    );
    final title = Center(
      child: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Padding(
            padding: const EdgeInsets.symmetric(vertical: 8.0),
            child: Hero(
              tag: Constants.logoTag,
              child: Image.asset(
                'assets/images/ecorp.png',
                filterQuality: FilterQuality.high,
                height: 30,
              ),
            ),
          ),
          HeroText(
            Constants.appName,
            tag: Constants.titleTag,
            viewState: ViewState.shrunk,
            style: LoginThemeHelper.loginTextStyle,
          ),
          const SizedBox(width: 20),
        ],
      ),
    );

    return AppBar(
      leading: FadeIn(
        controller: _loadingController,
        offset: .3,
        curve: headerAniInterval,
        child: menuBtn,
      ),

      actions: <Widget>[
        FadeIn(
          controller: _loadingController,
          offset: .3,
          curve: headerAniInterval,
          fadeDirection: FadeDirection.endToStart,
          child: signOutBtn,
        ),
      ],
      title: title,
      backgroundColor: theme.primaryColor.withOpacity(.1),
      elevation: 0,
      // toolbarTextStyle: TextStle(),
      // textTheme: theme.accentTextTheme,
      // iconTheme: theme.accentIconTheme,
    );
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);

    return WillPopScope(
      onWillPop: () => _goToLogin(context),
      child: SafeArea(
        child: Scaffold(
          appBar: _buildAppBar(theme),
          body: Container(),
        ),
      ),
    );
  }

  @override
  void didPop() {
    // TODO: implement didPop
  }

  @override
  void didPopNext() {
    // TODO: implement didPopNext
  }

  @override
  void didPush() {
    // TODO: implement didPush
  }

  @override
  void didPushNext() {
    // TODO: implement didPushNext
  }
}

/*
      child: SafeArea(
        child: Scaffold(
            appBar: _buildAppBar(theme),
            body: Container(),
            ),
      ),
*/

/*
import 'package:curved_navigation_bar/curved_navigation_bar.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';

import '../../../../../core/res/constants.dart';

class HeaderTitle extends StatelessWidget {
  HeaderTitle({Key? key}) : super(key: key);
  final GlobalKey<CurvedNavigationBarState> _bottomNavigationKey = GlobalKey();
  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.spaceAround,
      children: [
        Container(
          height: 100,
          decoration: BoxDecoration(
            borderRadius: const BorderRadius.only(
              bottomRight: Radius.circular(50),
            ),
            color: const Color(0xFF363f93),
            boxShadow: [
              BoxShadow(
                  color: const Color(0xFF363f93).withOpacity(0.3),
                  offset: const Offset(-10.0, 10.0),
                  blurRadius: 20.0,
                  spreadRadius: 4.0),
              //BoxShadow
            ],
          ),
          child: Stack(
            children: [
              Positioned(
                  top: 20,
                  left: 0,
                  child: Container(
                    height: 60,
                    width: 320,
                    decoration: const BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.only(
                        topRight: Radius.circular(50),
                        bottomRight: Radius.circular(50),
                      ),
                    ),
                  )),
              Positioned(
                top: 25,
                left: 20,
                child: Row(children: [
                  const Text(
                    "COMPTES EXPLOITATION",
                    style: TextStyle(fontSize: 20, color: Color(0xFF363f93)),
                  ),
                  //BackButton(),
                  BackButton(
                    onPressed: () => Navigator.of(context)
                        .pushReplacementNamed('/dashboard')
                        // we dont want to pop the screen, just replace it completely
                        .then((_) => false),
                  ),
                ]),
              ),
              Positioned(
                top: 25,
                left: 350,
                child: Row(children: [
                  //BackButton(),
                  SizedBox.fromSize(
                    size: const Size(56, 56),
                    child: ClipOval(
                      child: Material(
                        color: Colors.amberAccent,
                        child: InkWell(
                          splashColor: Colors.green,
                          onTap: () {
                            Constants.exploitationObject.id = 0;
                            Constants.exploitationObject.compte = 'VIDE';
                            Constants.exploitationObject.unite = '';
                            Constants.exploitationObject.surface_prevision = 0;
                            Constants.exploitationObject.production_prevision =
                                0;
                            Constants.exploitationObject.pu_prevision = 0;

                            Get.toNamed('/editExploitationPage', arguments: {
                              "AddOrUpdate": "ADD",
                              "title": "Nouveau Exploitation",
                              "utilisateur": Constants.utilisateur,
                              "exploitationObject": Constants.exploitationObject
                            });
                          },
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: const <Widget>[
                              Icon(Icons.shopping_cart), // <-- Icon
                              Text("New"), // <-- Text
                            ],
                          ),
                        ),
                      ),
                    ),
                  )
                ]),
              )
            ],
          ),
        ),
      ],
    );
  }
}
*/
