import 'package:dropdown_pro/dropdown.dart';
import 'package:dropdown_pro/dropdown_item.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

import '../../../../../core/data/model/ObjectBox/objectBoxModels.dart';
import '../../../../../core/res/constants.dart';
import '../../../annee/widgets/all_annees_widget/bloc/all_annees_bloc.dart';
import '../exploitations_widget/bloc/exploitation_bloc.dart';

class AnneeMultiFilter extends StatelessWidget {
  const AnneeMultiFilter({super.key});

  @override
  Widget build(BuildContext context) {
    List<DropdownItem> itemAnneesList = [];
    String singleSelectedAnneeId = "";
    final List<String> mutiSelectedAnneesIds = [];

    _onLoginButtonPressed() {
      BlocProvider.of<ExploitationBloc>(context).add(
        LoadExploitationEvent(
            compte: Constants.compte,
            listStringVarieteId: Constants.listStringVarieteId,
            listStringAnneeId: Constants.listStringAnneeId,
            listStringSaisonId: Constants.listStringSaisonId,
            opId: Constants.utilisateurObject['op_id'] ?? 0,
            listStringProducteurId: Constants.listStringProducteurId),
      );
    }

    return BlocConsumer<AllAnneesBloc, AllAnneesState>(
        listener: (context, state) {},
        builder: (context, state) {
          List<DropdownItem> list = [];

          if (state is AllAnneesInitialState) {
            context.read<AllAnneesBloc>().add(const LoadAllAnneesEvent());
            return const CircularProgressIndicator();
          } else if (state is AllAnneesLoadingState) {
            return const Center(child: CircularProgressIndicator());
          } else if (state is AllAnneesLoadedState) {
            var mesAnnees = state.apiResult;
            for (var element in mesAnnees) {
              print(element.name);
              list.add(DropdownItem(
                  id: element.id.toString(),
                  value: element.name.toString(),
                  data: MxAnneeObject(
                    id: element.id,
                    valeur: element.valeur,
                    name: element.name,
                  )));
            }

            itemAnneesList = list;
            return Column(
              children: [
                Dropdown.multiSelection(
                    title: "CHOISIR ANNEES",
                    labelText: "MULTI-ANNEES",
                    hintText: "Selection annees",
                    list: itemAnneesList,
                    selectedIds: mutiSelectedAnneesIds,
                    isAllSelection: true,
                    onMultipleItemListener: (selectedItemList) {
                      for (DropdownItem selectedItem in selectedItemList) {
                        String itemId = selectedItem.id;
                        String itemName = selectedItem.value;
                        AnneeObject anneeObject =
                            selectedItem.data as AnneeObject;
                        print("Item Id: $itemId -- Item Name: $itemName }");
                      }

                      Constants.listStringAnneeId = mutiSelectedAnneesIds;
                      _onLoginButtonPressed();

                      for (int i = 0; i < mutiSelectedAnneesIds.length; i++) {
                        print(
                            '-----${mutiSelectedAnneesIds[i].toString()} ----');
                      }
                    }),
              ],
            );
          } else if (state is AllAnneesErrorState) {
            return const Center(
              child: Text("Uh oh! ðŸ˜­ Something went wrong!"),
            );
          }
          return const Text("Error");
        });
  }
}
