// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_sync_flutter_libs/objectbox_sync_flutter_libs.dart';

import 'core/data/model/ObjectBox/objectBoxModels.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 473459550270934643),
      name: 'AnneeObject',
      lastPropertyId: const obx_int.IdUid(3, 358519292944974726),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2299530521864549072),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3906830031280558757),
            name: 'value',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 358519292944974726),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 3219075686030398680),
      name: 'ChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(12, 7719906829699188485),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 820735503369724339),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7450901922768152533),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2981594601539236306),
            name: 'unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6447512599677283970),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3696716795099646107),
            name: 'quantite_unite_superficie',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2242249024136041884),
            name: 'produitid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5934627651409716825),
            name: 'produitname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4051318245654205982),
            name: 'famillechargeexploitationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 3110396513579239728),
            name: 'famillechargeexploitationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 1241222806495102536),
            name: 'typechargeexploitationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5355974840996302850),
            name: 'typechargeexploitationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 7719906829699188485),
            name: 'is_achat',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 2858213743925432302),
      name: 'EmballageObject',
      lastPropertyId: const obx_int.IdUid(13, 4778162773993987438),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7603412441782232465),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6263695004918230514),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2011739775024278696),
            name: 'conditionnement',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5644941703943366469),
            name: 'is_actif',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3495976018777508411),
            name: 'quantite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5764169169576913655),
            name: 'produitid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6776721760251637676),
            name: 'produitname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4756004228821372439),
            name: 'typeemballageid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 3241898449398507603),
            name: 'typeemballagename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 7597586299666707777),
            name: 'unitegrandeurid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 3604757106258793186),
            name: 'typeunitegrandeurname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 3181899319603480702),
            name: 'valeur',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 4778162773993987438),
            name: 'is_default',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 3829661122337097110),
      name: 'EtapeObject',
      lastPropertyId: const obx_int.IdUid(6, 3837517890760967060),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1794325440525091363),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5898719839458903107),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2792848655725378527),
            name: 'typetransformationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1832975633746838757),
            name: 'typetransformationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3976146596591847523),
            name: 'produitopid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3837517890760967060),
            name: 'produitname',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 7175764257976341098),
      name: 'ExploitationChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(15, 7214791948404077758),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2735169423534251120),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2620753269083649181),
            name: 'exploitationchargeexploitationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4769642524070681351),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4559880917466283397),
            name: 'unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8681915604900064774),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2455595557520262367),
            name: 'quantite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7393156460803336010),
            name: 'valeur',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 1340042943190154133),
            name: 'observation',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1520546217336724534),
            name: 'chargeexploitationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 3526333088537984912),
            name: 'chargeexploitationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 2639294438633867159),
            name: 'typechargeexploitationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 1213945105903618126),
            name: 'typechargeexploitationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 1893918460169462655),
            name: 'famillechargeexploitationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 4855384529571636296),
            name: 'famillechargeexploitationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 7214791948404077758),
            name: 'exploitationid',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 6757738162253886112),
      name: 'ExploitationObject',
      lastPropertyId: const obx_int.IdUid(40, 5041507586057177592),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5883507002796990509),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8278481599770217279),
            name: 'exploitation_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2145545567083473376),
            name: 'compte',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6165476480171969400),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6570403324578488197),
            name: 'unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1624299329809954803),
            name: 'production_prevision',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6990072519966033645),
            name: 'surface_prevision',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8842280207284286559),
            name: 'pu_prevision',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 7506596839533846736),
            name: 'varieteprevisionid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 426625014101462901),
            name: 'varieteprevisionname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 4121419045330469868),
            name: 'production',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 2149558699718743878),
            name: 'surface',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 6269950350713617763),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 6789256474480898555),
            name: 'varieteid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 5277996427634596866),
            name: 'varietename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 2154761801758499742),
            name: 'produitid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 2060265620729376833),
            name: 'produitname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 4902705642552880982),
            name: 'filiereid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 2286683847205213942),
            name: 'filierename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 903396730191512446),
            name: 'anneeid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 3348234219444068074),
            name: 'anneename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 5779005045155847093),
            name: 'saisonid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(23, 6348896697444045190),
            name: 'saisonname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(24, 1073738080955889258),
            name: 'varietepu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(25, 6759908263366148298),
            name: 'emballageid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(26, 2199093745941723055),
            name: 'emballagename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(27, 8106756866456985073),
            name: 'emballagequantite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(28, 3227288158925836833),
            name: 'emballagepu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(29, 747040340061964795),
            name: 'emballagetypeemballageid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(30, 9221109059761457752),
            name: 'emballagetypeemballagename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(31, 7846683248031909344),
            name: 'emballageunitegrandeurid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(32, 2242998460689487981),
            name: 'emballageunitegrandeurname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(33, 5595695385208850304),
            name: 'emballageunitevaleurreference',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(34, 752194118351457805),
            name: 'producteurid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(35, 1210993348309343107),
            name: 'prenom',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(36, 398002545825697334),
            name: 'nom',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(37, 7493761631532758381),
            name: 'opid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(38, 1937579149840137983),
            name: 'opname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(39, 6912230503083373296),
            name: 'typeopid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(40, 5041507586057177592),
            name: 'typeopname',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 4648598241742223510),
      name: 'FamilleChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(2, 584039499452790206),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5972421335925921403),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 584039499452790206),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(8, 2229062886223383273),
      name: 'FiliereObject',
      lastPropertyId: const obx_int.IdUid(2, 6390772965609160432),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7733145979797775965),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6390772965609160432),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(9, 3560848002644362182),
      name: 'GroupObject',
      lastPropertyId: const obx_int.IdUid(2, 3001567779301485297),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1510098737245772378),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3001567779301485297),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(10, 1579080044041382181),
      name: 'MxAnneeObject',
      lastPropertyId: const obx_int.IdUid(3, 1213888630055951371),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3505287917028774553),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6750835335302845970),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1213888630055951371),
            name: 'valeur',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 6015349988455778900),
            name: 'mxExploitationObjects',
            targetId: const obx_int.IdUid(20, 4012257694892929189)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(2, 4421602543893633726),
            name: 'mxmouvementstocksObjects',
            targetId: const obx_int.IdUid(26, 3977324743470361255))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(11, 4852843641868222583),
      name: 'MxCampagneObject',
      lastPropertyId: const obx_int.IdUid(3, 6202771917826300066),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6878620790473248175),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3289179738367332999),
            name: 'mxanneeObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 4268379705754699990),
            relationTarget: 'MxAnneeObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6202771917826300066),
            name: 'mxsaisonObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(2, 2299163241147925118),
            relationTarget: 'MxSaisonObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(12, 5516754033358350447),
      name: 'MxChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(12, 1842568194553175170),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1783251140336109654),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 805947622805440522),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7870134036491017536),
            name: 'unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2646604924069564355),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4896420929379983059),
            name: 'quantite_unite_superficie',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1903981197604885668),
            name: 'isAchat',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7910989468683252468),
            name: 'mxtypeChargeExploitationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(4, 4710449264864404585),
            relationTarget: 'MxTypeChargeExploitationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1381189520307525843),
            name: 'mxfamilleChargeExploitationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(5, 6811941217219899066),
            relationTarget: 'MxFamilleChargeExploitationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 3599213148424697552),
            name: 'isProduit',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 8770096550065139525),
            name: 'isIntrant',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 1842568194553175170),
            name: 'mxunitegrandeurObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(82, 569533484954865522),
            relationTarget: 'MxUniteGrandeurObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(3, 3949430464776862119),
            name: 'mxexploitationChargeExploitationObjects',
            targetId: const obx_int.IdUid(19, 6811541759618183314)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(63, 7905822581833318638),
            name: 'mxProduitChargeExploitationObjects',
            targetId: const obx_int.IdUid(88, 6451315864854618793))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(13, 3097423400068156102),
      name: 'MxCommentObject',
      lastPropertyId: const obx_int.IdUid(3, 968594259582656869),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2270928391522425668),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5885759945814002316),
            name: 'content',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 968594259582656869),
            name: 'mxpostObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(6, 8942663173773178159),
            relationTarget: 'MxPostObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(14, 6354587040050461924),
      name: 'MxCreditObject',
      lastPropertyId: const obx_int.IdUid(9, 8686893942670028873),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3802755037773002667),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3591335192614164895),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5823284990260631544),
            name: 'capital',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6973656755510520314),
            name: 'interet',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2045177094315814798),
            name: 'moratoire',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 191033893271573682),
            name: 'autres_engagements',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 620044576646615993),
            name: 'mxExploitationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(7, 6908227744852613788),
            relationTarget: 'MxExploitationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 8686893942670028873),
            name: 'mxagenceObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(66, 3978609842588151792),
            relationTarget: 'MxAgenceObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(15, 1145332579941201354),
      name: 'MxEmballageObject',
      lastPropertyId: const obx_int.IdUid(11, 5908031312499547163),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8465712745904286461),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5191299710712464489),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1535741833415374055),
            name: 'conditionnement',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5390102185394281213),
            name: 'quantite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 550409800584675741),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1887320263586629615),
            name: 'valeur',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 757964008182304975),
            name: 'isActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 9070616533993652691),
            name: 'isDefault',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5369479996874275996),
            name: 'mxProduitObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(9, 2699712852211947592),
            relationTarget: 'MxProduitObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 5913028001433812527),
            name: 'mxUniteGrandeurObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(10, 3461193505969889747),
            relationTarget: 'MxUniteGrandeurObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5908031312499547163),
            name: 'mxTypeEmballageObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(11, 463109252730795370),
            relationTarget: 'MxTypeEmballageObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(4, 6697824021600062191),
            name: 'mxExploitationObjects',
            targetId: const obx_int.IdUid(20, 4012257694892929189)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(5, 2243741363310639128),
            name: 'mxEmballageObjects',
            targetId: const obx_int.IdUid(15, 1145332579941201354))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(16, 1618024388113077320),
      name: 'MxEmplacementObject',
      lastPropertyId: const obx_int.IdUid(6, 2759769865669506927),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 953291960096479430),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2133449181854097412),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4076545756055726748),
            name: 'capacite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2829306533869471),
            name: 'mxentrepotObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(12, 8623646851875786309),
            relationTarget: 'MxEntrepotObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7263146886162195742),
            name: 'mxfamilleemplacementObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(13, 1024884111915636644),
            relationTarget: 'MxFamilleEmplacementObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2759769865669506927),
            name: 'code',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(6, 1644809241247128125),
            name: 'mxmouvementstockObjects',
            targetId: const obx_int.IdUid(26, 3977324743470361255))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(17, 8729634275723811816),
      name: 'MxEntrepotObject',
      lastPropertyId: const obx_int.IdUid(5, 579746916767564092),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3722067510669443474),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8732242777668464186),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8675129562419609215),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 579746916767564092),
            name: 'mxpointObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(81, 3878875134326112711),
            relationTarget: 'MxPointObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(59, 3039749454735306626),
            name: 'mxemplacementObjects',
            targetId: const obx_int.IdUid(16, 1618024388113077320))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(19, 6811541759618183314),
      name: 'MxExploitationChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(11, 7582946419260454777),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2683991704770934500),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7922878471460956106),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7111222667115206580),
            name: 'quantite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8418986471180866199),
            name: 'valeur',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5518704103969578085),
            name: 'unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4948574420221364682),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2187586514093009666),
            name: 'observation',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 5872941352534068410),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 7710764809823396007),
            name: 'updatedAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 6195773682676368548),
            name: 'mxexploitationId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(16, 8545156275232849382),
            relationTarget: 'MxExploitationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7582946419260454777),
            name: 'mxchargeexploitationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(17, 2758114246402952909),
            relationTarget: 'MxChargeExploitationObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(20, 4012257694892929189),
      name: 'MxExploitationObject',
      lastPropertyId: const obx_int.IdUid(14, 4130727944445130708),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6806619762408954235),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6192263217372388358),
            name: 'compte',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5277952328027594647),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2593818667984528513),
            name: 'unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6727524312540068875),
            name: 'surface',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7272184047522691435),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4539701993162414894),
            name: 'updatedAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7204937418115753667),
            name: 'mxvarieteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(18, 5833733948182973563),
            relationTarget: 'MxVarieteObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1396948953500452494),
            name: 'mxanneeObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(19, 7292298731328120481),
            relationTarget: 'MxAnneeObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 5150008918327288428),
            name: 'mxsaisonObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(20, 2653670363190906929),
            relationTarget: 'MxSaisonObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 3984045023401925550),
            name: 'mxproducteurObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(21, 299988914798394182),
            relationTarget: 'MxProducteurObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 8596699807364632928),
            name: 'mxopObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(22, 8183575108643638918),
            relationTarget: 'MxOpObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 4130727944445130708),
            name: 'mxagenceObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(86, 8497284247882385224),
            relationTarget: 'MxAgenceObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(9, 5761856461770716240),
            name: 'mxexploitationChargeExploitationObjects',
            targetId: const obx_int.IdUid(19, 6811541759618183314)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(10, 7315522807995613691),
            name: 'mxrecoltesObjects',
            targetId: const obx_int.IdUid(33, 1722399352989086874)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(11, 4284624781477752411),
            name: 'mxcreditsObjects',
            targetId: const obx_int.IdUid(14, 6354587040050461924))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(21, 3723781203504993911),
      name: 'MxFamilleChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(2, 745005816729359479),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3167493330473995050),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 745005816729359479),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(12, 673904121027498058),
            name: 'mxchargeExploitationObjects',
            targetId: const obx_int.IdUid(12, 5516754033358350447))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(22, 3800410778256515793),
      name: 'MxFamilleEmplacementObject',
      lastPropertyId: const obx_int.IdUid(2, 7526869524450044266),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7421909759562058310),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7526869524450044266),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(13, 8422386654509012384),
            name: 'mxProduitObjects',
            targetId: const obx_int.IdUid(32, 35947003227267520))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(23, 7291769680427923372),
      name: 'MxFiliereObject',
      lastPropertyId: const obx_int.IdUid(2, 8598012454860224109),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5077817772662906258),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8598012454860224109),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(14, 6163018357699799834),
            name: 'mxProduitObjects',
            targetId: const obx_int.IdUid(32, 35947003227267520))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(24, 533325405226326368),
      name: 'MxLocaliteObject',
      lastPropertyId: const obx_int.IdUid(3, 4633938743977820590),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6680654684191465104),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3280159067069862781),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4633938743977820590),
            name: 'mxSousZoneObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(23, 8394904351311416684),
            relationTarget: 'MxSousZoneObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(16, 6572344375311973311),
            name: 'mxVillagesObjects',
            targetId: const obx_int.IdUid(52, 7518417938258126442)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(17, 1594821326358750155),
            name: 'mxOpsObjects',
            targetId: const obx_int.IdUid(27, 8627937195853548046)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(52, 419687726328111921),
            name: 'mxPointObjects',
            targetId: const obx_int.IdUid(80, 8337269662821047219))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(25, 6872610249205488880),
      name: 'MxModeEntreeSortieStockObject',
      lastPropertyId: const obx_int.IdUid(4, 1096952782678302105),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1232801637296453869),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1227082746540615064),
            name: 'code',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8845581130072562070),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1096952782678302105),
            name: 'mxtypemouvementstockObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(24, 97893213659964494),
            relationTarget: 'MxTypeMouvementStockObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(18, 1865137212097435779),
            name: 'mxmouvementstocksObjects',
            targetId: const obx_int.IdUid(26, 3977324743470361255))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(26, 3977324743470361255),
      name: 'MxMouvementStockObject',
      lastPropertyId: const obx_int.IdUid(18, 4040009989040223230),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2245152870815589942),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2877857213553770218),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 723003481401258430),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4332518210658093801),
            name: 'quantiteEntreeEmballage',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7079728019294293243),
            name: 'quantiteSortieEmballage',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4459925603306084146),
            name: 'nombreUnite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5915228495055077739),
            name: 'valeur',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4181587101204101821),
            name: 'mxanneeObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(25, 865351431546472280),
            relationTarget: 'MxAnneeObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1319310661261771303),
            name: 'mxsaisonObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(26, 2018094191484766280),
            relationTarget: 'MxSaisonObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4880579076658770966),
            name: 'mxemballageObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(27, 6499361291820739116),
            relationTarget: 'MxEmballageObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 6341009668240052729),
            name: 'mxopObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(28, 1127080476915222708),
            relationTarget: 'MxOpObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 502990018769818645),
            name: 'mxunitetransformationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(29, 4868294514481493775),
            relationTarget: 'MxUniteTransformationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 1167885283096944318),
            name: 'mxvarieteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(30, 5772941792719482835),
            relationTarget: 'MxVarieteObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 7953323821822144032),
            name: 'mxmodeentreesortiestockObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(31, 3116028113507728224),
            relationTarget: 'MxModeEntreeSortieStockObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 7726696680041393039),
            name: 'mxemplacementObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(32, 4928048389403393945),
            relationTarget: 'MxEmplacementObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 6523507635435880155),
            name: 'lot',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 3443232757452679261),
            name: 'isSended',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 4040009989040223230),
            name: 'dateSended',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(27, 8627937195853548046),
      name: 'MxOpObject',
      lastPropertyId: const obx_int.IdUid(15, 7928515602688502253),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2384252743757728757),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1968275687961001516),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7646296330807543882),
            name: 'mxTypeOpObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(33, 6390291673993047400),
            relationTarget: 'MxTypeOpObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 823009393222843047),
            name: 'mxLocaliteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(34, 449129371186906240),
            relationTarget: 'MxLocaliteObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1175075708232301127),
            name: 'mxVillageObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(36, 7453160253762105805),
            relationTarget: 'MxVillageObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 530011196175272637),
            name: 'mxPointObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(61, 8083026119730042333),
            relationTarget: 'MxPointObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8564499384121079402),
            name: 'sigle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 4054321151103317094),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4575847203415486999),
            name: 'telephone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7767778919713212792),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 530461023725657608),
            name: 'prenom_contact',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 7185485718712817945),
            name: 'nom_contact',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 6519600345032966083),
            name: 'email_contact',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 7928515602688502253),
            name: 'telephone_contact',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(19, 1031567755827603981),
            name: 'mxProducteursObjects',
            targetId: const obx_int.IdUid(31, 3910017060050678110)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(20, 6256783956182418432),
            name: 'mxUserOpsObjects',
            targetId: const obx_int.IdUid(48, 147737950674548287)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(21, 506316003956544137),
            name: 'mxExploitationObjects',
            targetId: const obx_int.IdUid(20, 4012257694892929189)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(22, 6182820103078114199),
            name: 'mxmouvementstocksObjects',
            targetId: const obx_int.IdUid(26, 3977324743470361255))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(28, 442975652713990618),
      name: 'MxPaysObject',
      lastPropertyId: const obx_int.IdUid(3, 8542034300949908389),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 507922790193088337),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8911995400813687270),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8542034300949908389),
            name: 'sigle',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(23, 6486983841329365071),
            name: 'mxZonesObjects',
            targetId: const obx_int.IdUid(53, 7266979898345681103))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(30, 6065630754068839404),
      name: 'MxPostObject',
      lastPropertyId: const obx_int.IdUid(3, 5110337387125111364),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 766691301177686901),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 231062643006232567),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5110337387125111364),
            name: 'body',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(25, 3710677333580074332),
            name: 'mxcommentsObjects',
            targetId: const obx_int.IdUid(13, 3097423400068156102))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(31, 3910017060050678110),
      name: 'MxProducteurObject',
      lastPropertyId: const obx_int.IdUid(10, 3626536596371230408),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5279869284844745519),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4665384256848175687),
            name: 'compte',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4937487357781494240),
            name: 'prenom',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2279560913738046657),
            name: 'nom',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7096976744875118202),
            name: 'cni',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8676245271181035344),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5494040183286871076),
            name: 'telephone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 1153880030764695014),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 2608823847523863729),
            name: 'isActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 3626536596371230408),
            name: 'mxOpObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(38, 7814409350087642845),
            relationTarget: 'MxOpObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(26, 8019267101019769435),
            name: 'mxExploitationObjects',
            targetId: const obx_int.IdUid(20, 4012257694892929189))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(32, 35947003227267520),
      name: 'MxProduitObject',
      lastPropertyId: const obx_int.IdUid(7, 8717189638101233955),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5593750423500548945),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1509028663498732436),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4084160472960101326),
            name: 'isDerive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5235959554957448863),
            name: 'isEnsachage',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8819370598212846999),
            name: 'isActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7254277316860371862),
            name: 'mxFiliereObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(39, 3353967258023300470),
            relationTarget: 'MxFiliereObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8717189638101233955),
            name: 'mxFamilleEmplacementObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(40, 8408259398039395914),
            relationTarget: 'MxFamilleEmplacementObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(27, 818057611736197709),
            name: 'mxChargeExploitationObjects',
            targetId: const obx_int.IdUid(12, 5516754033358350447)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(28, 5904315060739692338),
            name: 'mxVarieteObjects',
            targetId: const obx_int.IdUid(51, 4119816120276204108)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(29, 4717193463226250520),
            name: 'mxEmballageObjects',
            targetId: const obx_int.IdUid(15, 1145332579941201354)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(64, 1441648572408477336),
            name: 'mxProduitChargeExploitationObjects',
            targetId: const obx_int.IdUid(88, 6451315864854618793))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(33, 1722399352989086874),
      name: 'MxRecolteObject',
      lastPropertyId: const obx_int.IdUid(9, 1640710879310515804),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8396595070304082434),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3589085588476692546),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3105219489393806948),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8931429209395976259),
            name: 'nombre_unite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7779074210925339927),
            name: 'nombre_emballage',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 898691663776511178),
            name: 'valeur',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6271811939338950568),
            name: 'mxvarieteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(41, 1837816042707821548),
            relationTarget: 'MxVarieteObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 6486378608196825622),
            name: 'mxExploitationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(42, 7124562248444919931),
            relationTarget: 'MxExploitationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1640710879310515804),
            name: 'mxemballageObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(43, 2560451928875504412),
            relationTarget: 'MxEmballageObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(34, 3583606068699735933),
      name: 'MxRemboursementObject',
      lastPropertyId: const obx_int.IdUid(11, 5641384257063101781),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7251848613206749340),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2319913678525832284),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9113275085726965310),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5615535071513203766),
            name: 'nombre_unite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1496497891850077006),
            name: 'nombre_emballage',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4979200931213836342),
            name: 'valeur',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4016013597399672722),
            name: 'mxTypeRemboursementObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(44, 6543129622857546453),
            relationTarget: 'MxTypeRemboursementObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 9012005768978509253),
            name: 'mxVarieteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(45, 2855551386542057890),
            relationTarget: 'MxVarieteObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 2517109099123301324),
            name: 'mxExploitationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(46, 5395006065625860492),
            relationTarget: 'MxExploitationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 8750816059681091038),
            name: 'mxEmballageObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(47, 1755863011186184943),
            relationTarget: 'MxEmballageObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5641384257063101781),
            name: 'mxPointObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(80, 6162453443732431333),
            relationTarget: 'MxPointObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(35, 3310903259322313827),
      name: 'MxRoleObject',
      lastPropertyId: const obx_int.IdUid(2, 3885625964229728433),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3271424707782110217),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3885625964229728433),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(30, 7404570605552229636),
            name: 'mxuserObjects',
            targetId: const obx_int.IdUid(47, 281132519229493746))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(36, 3118320058302153897),
      name: 'MxSaisonObject',
      lastPropertyId: const obx_int.IdUid(3, 995144417002075611),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3432597853646221115),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 9147122977054822138),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 995144417002075611),
            name: 'description',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(31, 8671286581518073966),
            name: 'mxExploitationObjects',
            targetId: const obx_int.IdUid(20, 4012257694892929189)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(32, 3794703215773907985),
            name: 'mxmouvementstocksObjects',
            targetId: const obx_int.IdUid(26, 3977324743470361255))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(37, 6700927225766915327),
      name: 'MxSousZoneObject',
      lastPropertyId: const obx_int.IdUid(3, 8683983834580357484),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 969184098927703422),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2615858402166718892),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8683983834580357484),
            name: 'mxZoneObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(48, 8174752773866009500),
            relationTarget: 'MxZoneObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(33, 4436845939858782818),
            name: 'mxLocalitesObjects',
            targetId: const obx_int.IdUid(24, 533325405226326368))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(38, 7235188299269240616),
      name: 'MxTypeChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(2, 7402711516171733972),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2383081931533718090),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7402711516171733972),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(34, 7253214625415645936),
            name: 'mxchargeExploitationObjects',
            targetId: const obx_int.IdUid(12, 5516754033358350447))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(39, 7535427355034053566),
      name: 'MxTypeEmballageObject',
      lastPropertyId: const obx_int.IdUid(2, 7972857856778818106),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3203302027647654468),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7972857856778818106),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(35, 4796167199898471956),
            name: 'mxEmballageObjects',
            targetId: const obx_int.IdUid(15, 1145332579941201354))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(41, 3808918868668559345),
      name: 'MxTypeMouvementStockObject',
      lastPropertyId: const obx_int.IdUid(2, 5923746093187727332),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7751704261633302585),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5923746093187727332),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(37, 4605198621064595999),
            name: 'mxmodeentreesortiestockObjects',
            targetId: const obx_int.IdUid(25, 6872610249205488880))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(42, 7620730375971167144),
      name: 'MxTypeOpObject',
      lastPropertyId: const obx_int.IdUid(2, 4944922496584694936),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3359527990911102777),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4944922496584694936),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(38, 8548942534830468600),
            name: 'mxOpObjects',
            targetId: const obx_int.IdUid(27, 8627937195853548046))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(43, 9169723094465759387),
      name: 'MxTypeRemboursementObject',
      lastPropertyId: const obx_int.IdUid(2, 2884614550497710448),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2949590656867006956),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2884614550497710448),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(39, 4475013497196801669),
            name: 'mxremboursementObjects',
            targetId: const obx_int.IdUid(34, 3583606068699735933))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(44, 5091362782399430820),
      name: 'MxTypeUniteGrandeurObject',
      lastPropertyId: const obx_int.IdUid(2, 6047873487607934796),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5072626586655034474),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6047873487607934796),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(40, 4303143810994647573),
            name: 'mxUniteGrandeurObjects',
            targetId: const obx_int.IdUid(45, 1808555444165970566))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(45, 1808555444165970566),
      name: 'MxUniteGrandeurObject',
      lastPropertyId: const obx_int.IdUid(3, 7220850062271027753),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3591545478728236377),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 434593512569091214),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7220850062271027753),
            name: 'mxTypeUniteGrandeurObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(49, 5053625568430011948),
            relationTarget: 'MxTypeUniteGrandeurObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(41, 7600982900822129773),
            name: 'mxEmballageObjects',
            targetId: const obx_int.IdUid(15, 1145332579941201354))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(46, 30108667797209297),
      name: 'MxUniteTransformationObject',
      lastPropertyId: const obx_int.IdUid(5, 8273906551895876865),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2238834915026149504),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6329907274494684253),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6202607741297550367),
            name: 'sigle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8220781090341237432),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8273906551895876865),
            name: 'telephone',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(42, 8372897092151321781),
            name: 'mxmouvementstockObjects',
            targetId: const obx_int.IdUid(26, 3977324743470361255))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(47, 281132519229493746),
      name: 'MxUserObject',
      lastPropertyId: const obx_int.IdUid(12, 3957123478008110397),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7231933102169313243),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2934156857698262821),
            name: 'token',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6904586462767806797),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3144133913453934362),
            name: 'username',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4226367100304260765),
            name: 'password',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4068897886802938181),
            name: 'firstname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5661296787915365216),
            name: 'lastname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 5037316205485762080),
            name: 'phone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1125509232186097697),
            name: 'address',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 6778675988628639206),
            name: 'roleId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 1621160010165765736),
            name: 'roleName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 3957123478008110397),
            name: 'mxroleObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(50, 9118146301307787864),
            relationTarget: 'MxRoleObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(43, 8689804605648569981),
            name: 'mxuserPermissionObjects',
            targetId: const obx_int.IdUid(49, 6491783810888183932)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(44, 2712710128026818905),
            name: 'mxUserOpsObjects',
            targetId: const obx_int.IdUid(48, 147737950674548287))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(48, 147737950674548287),
      name: 'MxUserOpObject',
      lastPropertyId: const obx_int.IdUid(4, 1330231701200543006),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2142402508494667825),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7793565797227963555),
            name: 'userId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9143486031517106539),
            name: 'mxUserObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(51, 623335751615487142),
            relationTarget: 'MxUserOpObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1330231701200543006),
            name: 'mxOpObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(52, 682645532161810333),
            relationTarget: 'MxOpObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(49, 6491783810888183932),
      name: 'MxUserPermissionObject',
      lastPropertyId: const obx_int.IdUid(3, 7295645763741488704),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2885061826047620939),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3180084818734309265),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7295645763741488704),
            name: 'mxuserObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(53, 5963851561566616536),
            relationTarget: 'MxUserObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(51, 4119816120276204108),
      name: 'MxVarieteObject',
      lastPropertyId: const obx_int.IdUid(8, 8752114709517386665),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8588311513833366423),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7141118603612082157),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1826377171945531832),
            name: 'surface_unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2773775652119705705),
            name: 'quantite_unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1557039636681189097),
            name: 'pu_unite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4994539226833827141),
            name: 'rendement_unite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2176297964878889986),
            name: 'isActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8752114709517386665),
            name: 'mxProduitObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(56, 2362842448475098755),
            relationTarget: 'MxProduitObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(45, 8326600604731768121),
            name: 'mxExploitationObjects',
            targetId: const obx_int.IdUid(20, 4012257694892929189)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(46, 3136908020019307119),
            name: 'mxmouvementstocksObjects',
            targetId: const obx_int.IdUid(26, 3977324743470361255))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(52, 7518417938258126442),
      name: 'MxVillageObject',
      lastPropertyId: const obx_int.IdUid(3, 4530356949060284594),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7432493062080721569),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1455548532186502229),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4530356949060284594),
            name: 'mxLocaliteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(57, 3785806504226160232),
            relationTarget: 'MxLocaliteObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(47, 579454305627782069),
            name: 'mxOpsObjects',
            targetId: const obx_int.IdUid(27, 8627937195853548046))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(53, 7266979898345681103),
      name: 'MxZoneObject',
      lastPropertyId: const obx_int.IdUid(3, 6350662454930254481),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1131722638985885929),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3480618456508818905),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6350662454930254481),
            name: 'mxPaysObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(58, 6636485596472899417),
            relationTarget: 'MxPaysObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(48, 8920114749654752297),
            name: 'mxSousZonesObjects',
            targetId: const obx_int.IdUid(37, 6700927225766915327))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(54, 6028060195484356035),
      name: 'OpObject',
      lastPropertyId: const obx_int.IdUid(20, 8866740947045494830),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1674198305160398867),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2585449662476213023),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3307961551697375693),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5386231870284347857),
            name: 'telephone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 741642475204387041),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3795906645322382360),
            name: 'is_actif',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2414718935761511120),
            name: 'type_op_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8365729710417610574),
            name: 'type_op_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 3566275278790938711),
            name: 'localite_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 3576987218981180665),
            name: 'localite_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5446755859384065914),
            name: 'sous_zone_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 1207705223032265213),
            name: 'sous_zone_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 5989215985740115221),
            name: 'zone_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 5290029914808153879),
            name: 'zone_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 7850546097603957121),
            name: 'departement_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 2277038941585913623),
            name: 'departement_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 224061295327469464),
            name: 'region_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 4362094452450132975),
            name: 'region_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 8843797050167163611),
            name: 'pays_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 8866740947045494830),
            name: 'pays_name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(55, 3582177759082710872),
      name: 'PersonEntity',
      lastPropertyId: const obx_int.IdUid(3, 4163721432064346443),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 967124798867950575),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7034339822588614100),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4163721432064346443),
            name: 'age',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(57, 2449347681116543985),
      name: 'ProducteurObject',
      lastPropertyId: const obx_int.IdUid(12, 4342684995815589017),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8521732235598423188),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5613976516232500593),
            name: 'prenom',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6888651263886433522),
            name: 'nom',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5297424608134183169),
            name: 'cni',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3209826110204845637),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 981492328956149842),
            name: 'telephone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2890478668992642174),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 2120423687210244484),
            name: 'opid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 6608177007356914244),
            name: 'opname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 8500777433768929144),
            name: 'typeopid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 1027742875902380054),
            name: 'typeopname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 4342684995815589017),
            name: 'is_actif',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(58, 8260327722636102230),
      name: 'ProduitEntreeObject',
      lastPropertyId: const obx_int.IdUid(5, 8775033558367504323),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5228596548435769530),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7408485068803462439),
            name: 'produitopid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9069109886915792175),
            name: 'produitname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 9032434120052493478),
            name: 'etapeid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8775033558367504323),
            name: 'etapename',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(59, 1320848909048078129),
      name: 'ProduitSortieObject',
      lastPropertyId: const obx_int.IdUid(5, 6342385417530213075),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6830024670654387165),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2144462151828645012),
            name: 'produitopid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1633697771911720280),
            name: 'produitname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3364574599801665476),
            name: 'etapeid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6342385417530213075),
            name: 'etapename',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(60, 3724235421532489958),
      name: 'SaisonObject',
      lastPropertyId: const obx_int.IdUid(3, 8091760281740484643),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5457122521651473387),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7305755460003889492),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8091760281740484643),
            name: 'description',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(61, 7580637667202307648),
      name: 'StructureObject',
      lastPropertyId: const obx_int.IdUid(11, 2491324981934421666),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 187520840624165411),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 9006458902169517085),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6684695335241111742),
            name: 'sigle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4485577232431281944),
            name: 'telephone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7526947489991806189),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4902079933624365083),
            name: 'souszoneid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 619478197842734818),
            name: 'souszonename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 6692215123934528702),
            name: 'zoneid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 6881738984219325353),
            name: 'zonename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 2022478653384675016),
            name: 'paysid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 2491324981934421666),
            name: 'paysname',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(62, 1967011897807592493),
      name: 'TypeChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(2, 8739286652658802522),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2355029956936191404),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8739286652658802522),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(63, 2185769219728265378),
      name: 'TypeChargeObject',
      lastPropertyId: const obx_int.IdUid(2, 4255121431628257705),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2090255904788643064),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4255121431628257705),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(64, 3508995436408069940),
      name: 'TypeOpObject',
      lastPropertyId: const obx_int.IdUid(2, 6289347018285134351),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3349689894055013157),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6289347018285134351),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(65, 5401796922717495288),
      name: 'TypeTransformationObject',
      lastPropertyId: const obx_int.IdUid(6, 2653254719114042620),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6094954591342963049),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 138038272726810725),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1556368648313582251),
            name: 'produitopid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2792082669242047370),
            name: 'produitname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4878386750468271289),
            name: 'filiereid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2653254719114042620),
            name: 'filierename',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(66, 7018788926072260531),
      name: 'UniteTransformationEtapeObject',
      lastPropertyId: const obx_int.IdUid(7, 6573413408749063494),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5366371621243608630),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2760512275508163152),
            name: 'unitetransformationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5838728603714736161),
            name: 'unitetransformationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2209272097609282339),
            name: 'etapeid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 468942297690268564),
            name: 'etapename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8141988363259724372),
            name: 'etapenumero',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6573413408749063494),
            name: 'is_actif',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(67, 1046871221648893981),
      name: 'UniteTransformationObject',
      lastPropertyId: const obx_int.IdUid(7, 6050303097823000540),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1997973023551604246),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 885841658209415384),
            name: 'typetransformationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6371758126546858254),
            name: 'typetransformationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8305970870423786439),
            name: 'societeid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6050303097823000540),
            name: 'societename',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(68, 7696294899193544545),
      name: 'UserObject',
      lastPropertyId: const obx_int.IdUid(18, 4951206539372650100),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8834238898512526307),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6420847713916712170),
            name: 'token',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2608366289199668270),
            name: 'refresh',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8974837453659315735),
            name: 'access',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2983883869835262718),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2506426790911857965),
            name: 'password',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4094231655887372978),
            name: 'firstname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7749276113965673917),
            name: 'lastname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 4740032207589103723),
            name: 'op_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 662716957446418660),
            name: 'op_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7463639484334644787),
            name: 'sous_zone_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 2833201028628590411),
            name: 'sous_zone_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 8321326608958852171),
            name: 'zone_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 7406979479381027557),
            name: 'zone_name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 1563569353366260945),
            name: 'point_id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 4951206539372650100),
            name: 'point_name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(69, 7392637043603763407),
      name: 'UserOpObject',
      lastPropertyId: const obx_int.IdUid(6, 5624778300308864448),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8227138791825818479),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2450813734114503523),
            name: 'userid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8662299494778614523),
            name: 'typeopid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1775156750643159995),
            name: 'typeopname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7270298917611188287),
            name: 'opid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5624778300308864448),
            name: 'opname',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(71, 7075972569250141320),
      name: 'UserUniteTransformationObject',
      lastPropertyId: const obx_int.IdUid(10, 8755465283360569591),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3053303908389346092),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2011984975095396412),
            name: 'userid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5079687392647678253),
            name: 'typeunitetransformationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8696727684560614701),
            name: 'typeunitetransformationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4779887576402545205),
            name: 'unitetransformationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 127222712377620651),
            name: 'unitetransformationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 7683796430609794922),
            name: 'societeid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 8755465283360569591),
            name: 'societename',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(72, 2608000908579546638),
      name: 'UsinageObject',
      lastPropertyId: const obx_int.IdUid(11, 1772540948620897170),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7403925424380036943),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1638538495047453894),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1800004353713589445),
            name: 'heure_debut',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4138581422392851687),
            name: 'heure_fin',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2953386532222706676),
            name: 'nombre_personne',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7519295203451672303),
            name: 'taux',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6809328730687632441),
            name: 'unitetransformationid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4677153242814296155),
            name: 'unitetransformationname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 8699429470369945087),
            name: 'varieteid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 3724926813842525549),
            name: 'varietename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 1772540948620897170),
            name: 'observation',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(73, 589577077134713132),
      name: 'UsinageProduitEntreeObject',
      lastPropertyId: const obx_int.IdUid(5, 8769613051463586253),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 696136697723278733),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1078271679351631144),
            name: 'quantite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 727244011699759249),
            name: 'usinageid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2507991208409261391),
            name: 'produitentreeid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8769613051463586253),
            name: 'produitentreename',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(74, 6685600581072965316),
      name: 'UsinageProduitSortieObject',
      lastPropertyId: const obx_int.IdUid(5, 2460117808447925592),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4438724742294007943),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1545494778632731493),
            name: 'quantite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8274915112817650749),
            name: 'usinageid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6975888883900873917),
            name: 'produitsortieid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2460117808447925592),
            name: 'produitsortiename',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(75, 2108176861499260840),
      name: 'VarieteObject',
      lastPropertyId: const obx_int.IdUid(11, 3024933774916342743),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1777412680720916274),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4261926684805003120),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6254336034345926004),
            name: 'surface_unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2271889867964728622),
            name: 'quantite_unite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4089561363544476538),
            name: 'rendement_unite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8410319567160532763),
            name: 'produitid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5351695663753734519),
            name: 'produitname',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 2892133857465801829),
            name: 'filiereid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 7557717560763445725),
            name: 'filierename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 3222986291836170449),
            name: 'familleemplacementid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 3024933774916342743),
            name: 'familleemplacementname',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(77, 615934005475178549),
      name: 'MxFournisseurObject',
      lastPropertyId: const obx_int.IdUid(12, 7690906059219799724),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 9179897480829437675),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 366339390301557232),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4367642799613981545),
            name: 'sigle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6763580439826139412),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6616527973168152911),
            name: 'telephone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3395956239441494499),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8449682457432322387),
            name: 'prenom_contact',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 1731596407762760959),
            name: 'nom_contact',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1025573097061235695),
            name: 'email_contact',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 896667332439967271),
            name: 'telephone_contact',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 7690906059219799724),
            name: 'mxSocieteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(67, 2517136371686862454),
            relationTarget: 'MxSocieteObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(78, 2471927745349539542),
      name: 'MxAgenceObject',
      lastPropertyId: const obx_int.IdUid(4, 6871426353928475930),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7574030099094422410),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4191680696997050479),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7472082025084387250),
            name: 'sigle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6871426353928475930),
            name: 'mxtypeRemboursementObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(60, 4261938640410507359),
            relationTarget: 'MxTypeRemboursementObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(50, 655387899390700303),
            name: 'mxcreditObjects',
            targetId: const obx_int.IdUid(14, 6354587040050461924)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(51, 1092135780332859698),
            name: 'mxcreditsObjects',
            targetId: const obx_int.IdUid(14, 6354587040050461924)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(66, 3624814004694229630),
            name: 'mxexploitationObjects',
            targetId: const obx_int.IdUid(20, 4012257694892929189))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(79, 1794939406560547062),
      name: 'MxPointAgenceObject',
      lastPropertyId: const obx_int.IdUid(1, 3842953854685972234),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3842953854685972234),
            name: 'id',
            type: 6,
            flags: 129)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(53, 2627316074668286617),
            name: 'mxPointObjects',
            targetId: const obx_int.IdUid(80, 8337269662821047219)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(54, 6498993480420892734),
            name: 'mxAgenceObjects',
            targetId: const obx_int.IdUid(78, 2471927745349539542))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(80, 8337269662821047219),
      name: 'MxPointObject',
      lastPropertyId: const obx_int.IdUid(6, 6243419790390092659),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2232659562008673269),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4926470476561852419),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5566896028149808398),
            name: 'isProduit',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4835390040250679713),
            name: 'isIntrant',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1761262142666905237),
            name: 'isVirtuel',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6243419790390092659),
            name: 'mxLocaliteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(62, 2173753343729054606),
            relationTarget: 'MxLocaliteObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(55, 5489848468340466098),
            name: 'mxOpsObjects',
            targetId: const obx_int.IdUid(27, 8627937195853548046)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(56, 1796914095622992058),
            name: 'mxUserPointsObjects',
            targetId: const obx_int.IdUid(83, 6122003648987791955)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(57, 6997899188682624355),
            name: 'mxEntrepotsObjects',
            targetId: const obx_int.IdUid(17, 8729634275723811816)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(58, 5676269056124352961),
            name: 'mxRemboursementsObjects',
            targetId: const obx_int.IdUid(34, 3583606068699735933)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(61, 2358076777150629255),
            name: 'mxPointAgencesObjects',
            targetId: const obx_int.IdUid(79, 1794939406560547062))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(81, 7216078008314568168),
      name: 'MxSocieteObject',
      lastPropertyId: const obx_int.IdUid(7, 7209640946439573502),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3707406255924902805),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6204908154449180544),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 401947659379386047),
            name: 'sigle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5116593258481944218),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7883957322838208315),
            name: 'adresse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1162021135808299447),
            name: 'telephone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7209640946439573502),
            name: 'mxtypeSocieteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(63, 189238429974189501),
            relationTarget: 'MxTypeSocieteObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(82, 8126996564441154113),
      name: 'MxTypeSocieteObject',
      lastPropertyId: const obx_int.IdUid(2, 6315187980049550546),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1060436733609312781),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6315187980049550546),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(83, 6122003648987791955),
      name: 'MxUserPointObject',
      lastPropertyId: const obx_int.IdUid(4, 2997449342436488379),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8324213371280308397),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8389511164713092258),
            name: 'userId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5292259052241400397),
            name: 'mxUserObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(64, 7798312230679477761),
            relationTarget: 'MxUserPointObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2997449342436488379),
            name: 'mxPointObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(65, 1545803746236619792),
            relationTarget: 'MxPointObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(84, 3307793978886119676),
      name: 'UserPointObject',
      lastPropertyId: const obx_int.IdUid(10, 2365889896639489575),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8210877268204942035),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5096629505033750059),
            name: 'userid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1256565468881889524),
            name: 'pointid',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 2365889896639489575),
            name: 'pointname',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(85, 6124728223520092547),
      name: 'MxModeEntreeSortieIntrantObject',
      lastPropertyId: const obx_int.IdUid(4, 3345433293569151629),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8562971954299667230),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 489576041093185884),
            name: 'code',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3180355470732190547),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3345433293569151629),
            name: 'mxtypemouvementintrantObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(68, 3438628593260751132),
            relationTarget: 'MxTypeMouvementIntrantObject')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(60, 7878521471519509934),
            name: 'mxmouvementintrantsObjects',
            targetId: const obx_int.IdUid(86, 3806269970360073541))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(86, 3806269970360073541),
      name: 'MxMouvementIntrantObject',
      lastPropertyId: const obx_int.IdUid(19, 7553427098802266050),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1373011068947073088),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2247395686361200950),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5471261703730897862),
            name: 'pu',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8569242181599556701),
            name: 'quantiteEntreeEmballage',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1735886479034425820),
            name: 'quantiteSortieEmballage',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5426170117012796145),
            name: 'nombreUnite',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8469565420804271914),
            name: 'valeur',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 9125078760609390874),
            name: 'lot',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5790771476542019557),
            name: 'mxanneeObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(69, 5286037023869193876),
            relationTarget: 'MxAnneeObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 6428878443108443658),
            name: 'mxsaisonObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(70, 907576378235938389),
            relationTarget: 'MxSaisonObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5254292554654280984),
            name: 'mxemballageObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(71, 451297052088688119),
            relationTarget: 'MxEmballageObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 1000900679783989916),
            name: 'mxopObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(72, 80144678791318831),
            relationTarget: 'MxOpObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 7458160128627607989),
            name: 'mxfournisseurObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(73, 1815828377607640594),
            relationTarget: 'MxFournisseurObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 3117728299749108467),
            name: 'mxunitetransformationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(74, 5322900916764468206),
            relationTarget: 'MxUniteTransformationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 6065253561009034651),
            name: 'mxvarieteObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(75, 7234321581179215205),
            relationTarget: 'MxVarieteObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 9162956732080423019),
            name: 'mxmodeentreesortiestockObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(76, 8833151969893992454),
            relationTarget: 'MxModeEntreeSortieStockObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 5035395443341787682),
            name: 'mxemplacementObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(77, 6100080367456319524),
            relationTarget: 'MxEmplacementObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 5674602927482537239),
            name: 'mxemplacementSourceObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(78, 8431016942251632702),
            relationTarget: 'MxEmplacementObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 7553427098802266050),
            name: 'mxemplacementDestinationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(79, 5428173666720089653),
            relationTarget: 'MxEmplacementObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(87, 2535945103376019781),
      name: 'MxTypeMouvementIntrantObject',
      lastPropertyId: const obx_int.IdUid(2, 8352112295654598462),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5541592112332249313),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8352112295654598462),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(62, 6463002839206184316),
            name: 'mxmodeEntreeSortieIntrantObjects',
            targetId: const obx_int.IdUid(85, 6124728223520092547))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(88, 6451315864854618793),
      name: 'MxProduitChargeExploitationObject',
      lastPropertyId: const obx_int.IdUid(3, 7957891443112804372),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1502755085439571308),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3194013173272365524),
            name: 'mxChargeExploitationObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(83, 5024819629691075413),
            relationTarget: 'MxChargeExploitationObject'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7957891443112804372),
            name: 'mxProduitObjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(84, 49759361761910574),
            relationTarget: 'MxProduitObject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(88, 6451315864854618793),
      lastIndexId: const obx_int.IdUid(86, 8497284247882385224),
      lastRelationId: const obx_int.IdUid(66, 3624814004694229630),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        8399278226891372539,
        5790810394866170417,
        7716360343151038208,
        5990224593670081774,
        6110129782595136917,
        7078430378707888638,
        1429421305870465501
      ],
      retiredIndexUids: const [
        7167027833813661519,
        1649590060464129120,
        7097282113484139110,
        1674413896614456745,
        6695383362033175502,
        58560242399689886
      ],
      retiredPropertyUids: const [
        618329009875346402,
        6146234433242363999,
        3302037575672748486,
        5971030079120573421,
        5974425911472796870,
        204711137714516681,
        2827370485505913940,
        5081432557145464731,
        5496493608672962471,
        8242061795091566544,
        6043891659649522767,
        8011196006838078546,
        352849805694398138,
        5983695030668219037,
        4317787046201257523,
        2046305938533689933,
        3352322492925631726,
        7792658033944402753,
        5553195902358751822,
        4450681253323872671,
        8173489872333566723,
        2113511776820556506,
        1336208191432424531,
        3200739934790815417,
        6139508531560389383,
        5606411004828041231,
        1344066720579038644,
        1698971039980573844,
        6532061240564507053,
        1693741345227233967,
        3880035651038723840,
        1260284297843371150,
        7382532394450554942,
        6322300223462906916,
        4643482384537098994,
        1229596166483435311,
        9065718723005853364,
        6565938693128233374,
        9055752242362400069,
        6162398698753939685,
        5972131599056275764,
        1728473772033127457,
        167954230133460220,
        8808775329469226588,
        6606282247779306464,
        3394774679656712221,
        4932689108291104911,
        6747460337742816551,
        2413219593140445170,
        1301814908117386873,
        122977593239408053,
        7445196904563299713,
        7283872648390444821,
        971027767375004565,
        4207205662373608787,
        4358552674013641034
      ],
      retiredRelationUids: const [5373554920394178311, 4679876413113998770],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    AnneeObject: obx_int.EntityDefinition<AnneeObject>(
        model: _entities[0],
        toOneRelations: (AnneeObject object) => [],
        toManyRelations: (AnneeObject object) => {},
        getId: (AnneeObject object) => object.id,
        setId: (AnneeObject object, int id) {
          object.id = id;
        },
        objectToFB: (AnneeObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.value);
          fbb.addOffset(2, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final valueParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              AnneeObject(id: idParam, value: valueParam, name: nameParam);

          return object;
        }),
    ChargeExploitationObject:
        obx_int.EntityDefinition<ChargeExploitationObject>(
            model: _entities[1],
            toOneRelations: (ChargeExploitationObject object) => [],
            toManyRelations: (ChargeExploitationObject object) => {},
            getId: (ChargeExploitationObject object) => object.id,
            setId: (ChargeExploitationObject object, int id) {
              object.id = id;
            },
            objectToFB: (ChargeExploitationObject object, fb.Builder fbb) {
              final nameOffset = fbb.writeString(object.name);
              final uniteOffset = fbb.writeString(object.unite);
              final produitnameOffset = fbb.writeString(object.produitname);
              final famillechargeexploitationnameOffset =
                  fbb.writeString(object.famillechargeexploitationname);
              final typechargeexploitationnameOffset =
                  fbb.writeString(object.typechargeexploitationname);
              fbb.startTable(13);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, nameOffset);
              fbb.addOffset(2, uniteOffset);
              fbb.addFloat64(3, object.pu);
              fbb.addFloat64(4, object.quantite_unite_superficie);
              fbb.addInt64(5, object.produitid);
              fbb.addOffset(6, produitnameOffset);
              fbb.addInt64(7, object.famillechargeexploitationid);
              fbb.addOffset(8, famillechargeexploitationnameOffset);
              fbb.addInt64(9, object.typechargeexploitationid);
              fbb.addOffset(10, typechargeexploitationnameOffset);
              fbb.addBool(11, object.is_achat);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final nameParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final uniteParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
              final puParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
              final quantite_unite_superficieParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
              final produitidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
              final produitnameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 16, '');
              final typechargeexploitationidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
              final typechargeexploitationnameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 24, '');
              final famillechargeexploitationidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
              final famillechargeexploitationnameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 20, '');
              final is_achatParam = const fb.BoolReader()
                  .vTableGet(buffer, rootOffset, 26, false);
              final object = ChargeExploitationObject(
                  id: idParam,
                  name: nameParam,
                  unite: uniteParam,
                  pu: puParam,
                  quantite_unite_superficie: quantite_unite_superficieParam,
                  produitid: produitidParam,
                  produitname: produitnameParam,
                  typechargeexploitationid: typechargeexploitationidParam,
                  typechargeexploitationname: typechargeexploitationnameParam,
                  famillechargeexploitationid: famillechargeexploitationidParam,
                  famillechargeexploitationname:
                      famillechargeexploitationnameParam,
                  is_achat: is_achatParam);

              return object;
            }),
    EmballageObject: obx_int.EntityDefinition<EmballageObject>(
        model: _entities[2],
        toOneRelations: (EmballageObject object) => [],
        toManyRelations: (EmballageObject object) => {},
        getId: (EmballageObject object) => object.id,
        setId: (EmballageObject object, int id) {
          object.id = id;
        },
        objectToFB: (EmballageObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final conditionnementOffset = fbb.writeString(object.conditionnement);
          final produitnameOffset = fbb.writeString(object.produitname);
          final typeemballagenameOffset =
              fbb.writeString(object.typeemballagename);
          final typeunitegrandeurnameOffset =
              fbb.writeString(object.typeunitegrandeurname);
          fbb.startTable(14);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, conditionnementOffset);
          fbb.addBool(3, object.is_actif);
          fbb.addFloat64(4, object.quantite);
          fbb.addInt64(5, object.produitid);
          fbb.addOffset(6, produitnameOffset);
          fbb.addInt64(7, object.typeemballageid);
          fbb.addOffset(8, typeemballagenameOffset);
          fbb.addInt64(9, object.unitegrandeurid);
          fbb.addOffset(10, typeunitegrandeurnameOffset);
          fbb.addFloat64(11, object.valeur);
          fbb.addBool(12, object.is_default);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final conditionnementParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final is_actifParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final quantiteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final produitidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final produitnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final typeemballageidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final typeemballagenameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 20, '');
          final unitegrandeuridParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final typeunitegrandeurnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 24, '');
          final valeurParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 26, 0);
          final is_defaultParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 28, false);
          final object = EmballageObject(
              id: idParam,
              name: nameParam,
              conditionnement: conditionnementParam,
              is_actif: is_actifParam,
              quantite: quantiteParam,
              produitid: produitidParam,
              produitname: produitnameParam,
              typeemballageid: typeemballageidParam,
              typeemballagename: typeemballagenameParam,
              unitegrandeurid: unitegrandeuridParam,
              typeunitegrandeurname: typeunitegrandeurnameParam,
              valeur: valeurParam,
              is_default: is_defaultParam);

          return object;
        }),
    EtapeObject: obx_int.EntityDefinition<EtapeObject>(
        model: _entities[3],
        toOneRelations: (EtapeObject object) => [],
        toManyRelations: (EtapeObject object) => {},
        getId: (EtapeObject object) => object.id,
        setId: (EtapeObject object, int id) {
          object.id = id;
        },
        objectToFB: (EtapeObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final typetransformationnameOffset =
              fbb.writeString(object.typetransformationname);
          final produitnameOffset = fbb.writeString(object.produitname);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.typetransformationid);
          fbb.addOffset(3, typetransformationnameOffset);
          fbb.addInt64(4, object.produitopid);
          fbb.addOffset(5, produitnameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final typetransformationidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final typetransformationnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, '');
          final produitopidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final produitnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, '');
          final object = EtapeObject(
              id: idParam,
              name: nameParam,
              typetransformationid: typetransformationidParam,
              typetransformationname: typetransformationnameParam,
              produitopid: produitopidParam,
              produitname: produitnameParam);

          return object;
        }),
    ExploitationChargeExploitationObject: obx_int.EntityDefinition<
            ExploitationChargeExploitationObject>(
        model: _entities[4],
        toOneRelations: (ExploitationChargeExploitationObject object) => [],
        toManyRelations: (ExploitationChargeExploitationObject object) => {},
        getId: (ExploitationChargeExploitationObject object) => object.id,
        setId: (ExploitationChargeExploitationObject object, int id) {
          object.id = id;
        },
        objectToFB:
            (ExploitationChargeExploitationObject object, fb.Builder fbb) {
          final uniteOffset = fbb.writeString(object.unite);
          final observationOffset = object.observation == null
              ? null
              : fbb.writeString(object.observation!);
          final chargeexploitationnameOffset =
              fbb.writeString(object.chargeexploitationname);
          final typechargeexploitationnameOffset =
              fbb.writeString(object.typechargeexploitationname);
          final famillechargeexploitationnameOffset =
              fbb.writeString(object.famillechargeexploitationname);
          fbb.startTable(16);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.exploitationchargeexploitationid);
          fbb.addInt64(2, object.date.millisecondsSinceEpoch);
          fbb.addOffset(3, uniteOffset);
          fbb.addFloat64(4, object.pu);
          fbb.addFloat64(5, object.quantite);
          fbb.addFloat64(6, object.valeur);
          fbb.addOffset(7, observationOffset);
          fbb.addInt64(8, object.chargeexploitationid);
          fbb.addOffset(9, chargeexploitationnameOffset);
          fbb.addInt64(10, object.typechargeexploitationid);
          fbb.addOffset(11, typechargeexploitationnameOffset);
          fbb.addInt64(12, object.famillechargeexploitationid);
          fbb.addOffset(13, famillechargeexploitationnameOffset);
          fbb.addInt64(14, object.exploitationid);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final exploitationchargeexploitationidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final uniteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final puParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final quantiteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final valeurParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final observationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 18);
          final chargeexploitationidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final chargeexploitationnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 22, '');
          final typechargeexploitationidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          final typechargeexploitationnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 26, '');
          final famillechargeexploitationidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0);
          final famillechargeexploitationnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 30, '');
          final exploitationidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 32, 0);
          final object = ExploitationChargeExploitationObject(
              id: idParam,
              exploitationchargeexploitationid:
                  exploitationchargeexploitationidParam,
              date: dateParam,
              unite: uniteParam,
              pu: puParam,
              quantite: quantiteParam,
              valeur: valeurParam,
              observation: observationParam,
              chargeexploitationid: chargeexploitationidParam,
              chargeexploitationname: chargeexploitationnameParam,
              typechargeexploitationid: typechargeexploitationidParam,
              typechargeexploitationname: typechargeexploitationnameParam,
              famillechargeexploitationid: famillechargeexploitationidParam,
              famillechargeexploitationname: famillechargeexploitationnameParam,
              exploitationid: exploitationidParam);

          return object;
        }),
    ExploitationObject: obx_int.EntityDefinition<ExploitationObject>(
        model: _entities[5],
        toOneRelations: (ExploitationObject object) => [],
        toManyRelations: (ExploitationObject object) => {},
        getId: (ExploitationObject object) => object.id,
        setId: (ExploitationObject object, int id) {
          object.id = id;
        },
        objectToFB: (ExploitationObject object, fb.Builder fbb) {
          final uniteOffset = fbb.writeString(object.unite);
          final varieteprevisionnameOffset =
              fbb.writeString(object.varieteprevisionname);
          final varietenameOffset = fbb.writeString(object.varietename);
          final produitnameOffset = fbb.writeString(object.produitname);
          final filierenameOffset = fbb.writeString(object.filierename);
          final anneenameOffset = fbb.writeString(object.anneename);
          final saisonnameOffset = fbb.writeString(object.saisonname);
          final emballagenameOffset = fbb.writeString(object.emballagename);
          final emballagetypeemballagenameOffset =
              fbb.writeString(object.emballagetypeemballagename);
          final emballageunitegrandeurnameOffset =
              fbb.writeString(object.emballageunitegrandeurname);
          final prenomOffset = fbb.writeString(object.prenom);
          final nomOffset = fbb.writeString(object.nom);
          final opnameOffset = fbb.writeString(object.opname);
          final typeopnameOffset = fbb.writeString(object.typeopname);
          fbb.startTable(41);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.exploitation_id);
          fbb.addInt64(2, object.compte);
          fbb.addInt64(3, object.date.millisecondsSinceEpoch);
          fbb.addOffset(4, uniteOffset);
          fbb.addFloat64(5, object.production_prevision);
          fbb.addFloat64(6, object.surface_prevision);
          fbb.addFloat64(7, object.pu_prevision);
          fbb.addInt64(8, object.varieteprevisionid);
          fbb.addOffset(9, varieteprevisionnameOffset);
          fbb.addFloat64(10, object.production);
          fbb.addFloat64(11, object.surface);
          fbb.addFloat64(12, object.pu);
          fbb.addInt64(13, object.varieteid);
          fbb.addOffset(14, varietenameOffset);
          fbb.addInt64(15, object.produitid);
          fbb.addOffset(16, produitnameOffset);
          fbb.addInt64(17, object.filiereid);
          fbb.addOffset(18, filierenameOffset);
          fbb.addInt64(19, object.anneeid);
          fbb.addOffset(20, anneenameOffset);
          fbb.addInt64(21, object.saisonid);
          fbb.addOffset(22, saisonnameOffset);
          fbb.addFloat64(23, object.varietepu);
          fbb.addInt64(24, object.emballageid);
          fbb.addOffset(25, emballagenameOffset);
          fbb.addFloat64(26, object.emballagequantite);
          fbb.addFloat64(27, object.emballagepu);
          fbb.addInt64(28, object.emballagetypeemballageid);
          fbb.addOffset(29, emballagetypeemballagenameOffset);
          fbb.addInt64(30, object.emballageunitegrandeurid);
          fbb.addOffset(31, emballageunitegrandeurnameOffset);
          fbb.addFloat64(32, object.emballageunitevaleurreference);
          fbb.addInt64(33, object.producteurid);
          fbb.addOffset(34, prenomOffset);
          fbb.addOffset(35, nomOffset);
          fbb.addInt64(36, object.opid);
          fbb.addOffset(37, opnameOffset);
          fbb.addInt64(38, object.typeopid);
          fbb.addOffset(39, typeopnameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0));
          final producteuridParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 70, 0);
          final prenomParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 72, '');
          final nomParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 74, '');
          final opidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 76, 0);
          final opnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 78, '');
          final typeopidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 80, 0);
          final typeopnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 82, '');
          final exploitation_idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final compteParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final uniteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final production_previsionParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final surface_previsionParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final pu_previsionParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final varieteprevisionidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final varieteprevisionnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 22, '');
          final productionParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 24, 0);
          final surfaceParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 26, 0);
          final puParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 28, 0);
          final varieteidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 30, 0);
          final varietenameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 32, '');
          final produitidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 34, 0);
          final produitnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 36, '');
          final filiereidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 38, 0);
          final filierenameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 40, '');
          final anneeidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 42, 0);
          final anneenameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 44, '');
          final saisonidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 46, 0);
          final saisonnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 48, '');
          final varietepuParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 50, 0);
          final emballageidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 52, 0);
          final emballagenameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 54, '');
          final emballagequantiteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 56, 0);
          final emballagepuParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 58, 0);
          final emballagetypeemballageidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 60, 0);
          final emballagetypeemballagenameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 62, '');
          final emballageunitegrandeuridParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 64, 0);
          final emballageunitegrandeurnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 66, '');
          final emballageunitevaleurreferenceParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 68, 0);
          final object = ExploitationObject(
              id: idParam,
              date: dateParam,
              producteurid: producteuridParam,
              prenom: prenomParam,
              nom: nomParam,
              opid: opidParam,
              opname: opnameParam,
              typeopid: typeopidParam,
              typeopname: typeopnameParam,
              exploitation_id: exploitation_idParam,
              compte: compteParam,
              unite: uniteParam,
              production_prevision: production_previsionParam,
              surface_prevision: surface_previsionParam,
              pu_prevision: pu_previsionParam,
              varieteprevisionid: varieteprevisionidParam,
              varieteprevisionname: varieteprevisionnameParam,
              production: productionParam,
              surface: surfaceParam,
              pu: puParam,
              varieteid: varieteidParam,
              varietename: varietenameParam,
              produitid: produitidParam,
              produitname: produitnameParam,
              filiereid: filiereidParam,
              filierename: filierenameParam,
              anneeid: anneeidParam,
              anneename: anneenameParam,
              saisonid: saisonidParam,
              saisonname: saisonnameParam,
              varietepu: varietepuParam,
              emballageid: emballageidParam,
              emballagename: emballagenameParam,
              emballagequantite: emballagequantiteParam,
              emballagepu: emballagepuParam,
              emballagetypeemballageid: emballagetypeemballageidParam,
              emballagetypeemballagename: emballagetypeemballagenameParam,
              emballageunitegrandeurid: emballageunitegrandeuridParam,
              emballageunitegrandeurname: emballageunitegrandeurnameParam,
              emballageunitevaleurreference:
                  emballageunitevaleurreferenceParam);

          return object;
        }),
    FamilleChargeExploitationObject:
        obx_int.EntityDefinition<FamilleChargeExploitationObject>(
            model: _entities[6],
            toOneRelations: (FamilleChargeExploitationObject object) => [],
            toManyRelations: (FamilleChargeExploitationObject object) => {},
            getId: (FamilleChargeExploitationObject object) => object.id,
            setId: (FamilleChargeExploitationObject object, int id) {
              object.id = id;
            },
            objectToFB:
                (FamilleChargeExploitationObject object, fb.Builder fbb) {
              final nameOffset = fbb.writeString(object.name);
              fbb.startTable(3);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, nameOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final nameParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final object =
                  FamilleChargeExploitationObject(id: idParam, name: nameParam);

              return object;
            }),
    FiliereObject: obx_int.EntityDefinition<FiliereObject>(
        model: _entities[7],
        toOneRelations: (FiliereObject object) => [],
        toManyRelations: (FiliereObject object) => {},
        getId: (FiliereObject object) => object.id,
        setId: (FiliereObject object, int id) {
          object.id = id;
        },
        objectToFB: (FiliereObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = FiliereObject(id: idParam, name: nameParam);

          return object;
        }),
    GroupObject: obx_int.EntityDefinition<GroupObject>(
        model: _entities[8],
        toOneRelations: (GroupObject object) => [],
        toManyRelations: (GroupObject object) => {},
        getId: (GroupObject object) => object.id,
        setId: (GroupObject object, int id) {
          object.id = id;
        },
        objectToFB: (GroupObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = GroupObject(id: idParam, name: nameParam);

          return object;
        }),
    MxAnneeObject: obx_int.EntityDefinition<MxAnneeObject>(
        model: _entities[9],
        toOneRelations: (MxAnneeObject object) => [],
        toManyRelations: (MxAnneeObject object) => {
              obx_int.RelInfo<MxAnneeObject>.toMany(1, object.id):
                  object.mxExploitationObjects,
              obx_int.RelInfo<MxAnneeObject>.toMany(2, object.id):
                  object.mxmouvementstocksObjects
            },
        getId: (MxAnneeObject object) => object.id,
        setId: (MxAnneeObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxAnneeObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.valeur);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valeurParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object =
              MxAnneeObject(id: idParam, name: nameParam, valeur: valeurParam);
          obx_int.InternalToManyAccess.setRelInfo<MxAnneeObject>(
              object.mxExploitationObjects,
              store,
              obx_int.RelInfo<MxAnneeObject>.toMany(1, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxAnneeObject>(
              object.mxmouvementstocksObjects,
              store,
              obx_int.RelInfo<MxAnneeObject>.toMany(2, object.id));
          return object;
        }),
    MxCampagneObject: obx_int.EntityDefinition<MxCampagneObject>(
        model: _entities[10],
        toOneRelations: (MxCampagneObject object) =>
            [object.mxanneeObject, object.mxsaisonObject],
        toManyRelations: (MxCampagneObject object) => {},
        getId: (MxCampagneObject object) => object.id,
        setId: (MxCampagneObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxCampagneObject object, fb.Builder fbb) {
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.mxanneeObject.targetId);
          fbb.addInt64(2, object.mxsaisonObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final object = MxCampagneObject(id: idParam);
          object.mxanneeObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          object.mxanneeObject.attach(store);
          object.mxsaisonObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxsaisonObject.attach(store);
          return object;
        }),
    MxChargeExploitationObject: obx_int.EntityDefinition<
            MxChargeExploitationObject>(
        model: _entities[11],
        toOneRelations: (MxChargeExploitationObject object) => [
              object.mxtypeChargeExploitationObject,
              object.mxfamilleChargeExploitationObject,
              object.mxunitegrandeurObject
            ],
        toManyRelations: (MxChargeExploitationObject object) => {
              obx_int.RelInfo<MxChargeExploitationObject>.toMany(3, object.id):
                  object.mxexploitationChargeExploitationObjects,
              obx_int.RelInfo<MxChargeExploitationObject>.toMany(63, object.id):
                  object.mxProduitChargeExploitationObjects
            },
        getId: (MxChargeExploitationObject object) => object.id,
        setId: (MxChargeExploitationObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxChargeExploitationObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final uniteOffset = fbb.writeString(object.unite);
          fbb.startTable(13);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, uniteOffset);
          fbb.addFloat64(3, object.pu);
          fbb.addFloat64(4, object.quantite_unite_superficie);
          fbb.addBool(5, object.isAchat);
          fbb.addInt64(7, object.mxtypeChargeExploitationObject.targetId);
          fbb.addInt64(8, object.mxfamilleChargeExploitationObject.targetId);
          fbb.addBool(9, object.isProduit);
          fbb.addBool(10, object.isIntrant);
          fbb.addInt64(11, object.mxunitegrandeurObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final uniteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final puParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final quantite_unite_superficieParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final isAchatParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final isProduitParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 22, false);
          final isIntrantParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 24, false);
          final object = MxChargeExploitationObject(
              id: idParam,
              name: nameParam,
              unite: uniteParam,
              pu: puParam,
              quantite_unite_superficie: quantite_unite_superficieParam,
              isAchat: isAchatParam,
              isProduit: isProduitParam,
              isIntrant: isIntrantParam);
          object.mxtypeChargeExploitationObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.mxtypeChargeExploitationObject.attach(store);
          object.mxfamilleChargeExploitationObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.mxfamilleChargeExploitationObject.attach(store);
          object.mxunitegrandeurObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
          object.mxunitegrandeurObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxChargeExploitationObject>(
              object.mxexploitationChargeExploitationObjects,
              store,
              obx_int.RelInfo<MxChargeExploitationObject>.toMany(3, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxChargeExploitationObject>(
              object.mxProduitChargeExploitationObjects,
              store,
              obx_int.RelInfo<MxChargeExploitationObject>.toMany(
                  63, object.id));
          return object;
        }),
    MxCommentObject: obx_int.EntityDefinition<MxCommentObject>(
        model: _entities[12],
        toOneRelations: (MxCommentObject object) => [object.mxpostObject],
        toManyRelations: (MxCommentObject object) => {},
        getId: (MxCommentObject object) => object.id,
        setId: (MxCommentObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxCommentObject object, fb.Builder fbb) {
          final contentOffset = fbb.writeString(object.content);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, contentOffset);
          fbb.addInt64(2, object.mxpostObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final contentParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxCommentObject(id: idParam, content: contentParam);
          object.mxpostObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxpostObject.attach(store);
          return object;
        }),
    MxCreditObject: obx_int.EntityDefinition<MxCreditObject>(
        model: _entities[13],
        toOneRelations: (MxCreditObject object) =>
            [object.mxExploitationObject, object.mxagenceObject],
        toManyRelations: (MxCreditObject object) => {},
        getId: (MxCreditObject object) => object.id,
        setId: (MxCreditObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxCreditObject object, fb.Builder fbb) {
          fbb.startTable(10);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.date.millisecondsSinceEpoch);
          fbb.addFloat64(2, object.capital);
          fbb.addFloat64(3, object.interet);
          fbb.addFloat64(4, object.moratoire);
          fbb.addFloat64(5, object.autres_engagements);
          fbb.addInt64(6, object.mxExploitationObject.targetId);
          fbb.addInt64(8, object.mxagenceObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final capitalParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final interetParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final moratoireParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final autres_engagementsParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final object = MxCreditObject(
              id: idParam,
              date: dateParam,
              capital: capitalParam,
              interet: interetParam,
              moratoire: moratoireParam,
              autres_engagements: autres_engagementsParam);
          object.mxExploitationObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.mxExploitationObject.attach(store);
          object.mxagenceObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.mxagenceObject.attach(store);
          return object;
        }),
    MxEmballageObject: obx_int.EntityDefinition<MxEmballageObject>(
        model: _entities[14],
        toOneRelations: (MxEmballageObject object) => [
              object.mxProduitObject,
              object.mxUniteGrandeurObject,
              object.mxTypeEmballageObject
            ],
        toManyRelations: (MxEmballageObject object) => {
              obx_int.RelInfo<MxEmballageObject>.toMany(4, object.id):
                  object.mxExploitationObjects,
              obx_int.RelInfo<MxEmballageObject>.toMany(5, object.id):
                  object.mxEmballageObjects
            },
        getId: (MxEmballageObject object) => object.id,
        setId: (MxEmballageObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxEmballageObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final conditionnementOffset = fbb.writeString(object.conditionnement);
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, conditionnementOffset);
          fbb.addFloat64(3, object.quantite);
          fbb.addFloat64(4, object.pu);
          fbb.addFloat64(5, object.valeur);
          fbb.addBool(6, object.isActive);
          fbb.addBool(7, object.isDefault);
          fbb.addInt64(8, object.mxProduitObject.targetId);
          fbb.addInt64(9, object.mxUniteGrandeurObject.targetId);
          fbb.addInt64(10, object.mxTypeEmballageObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final conditionnementParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final quantiteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final puParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final valeurParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final isActiveParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 16, false);
          final isDefaultParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 18, false);
          final object = MxEmballageObject(
              id: idParam,
              name: nameParam,
              conditionnement: conditionnementParam,
              quantite: quantiteParam,
              pu: puParam,
              valeur: valeurParam,
              isActive: isActiveParam,
              isDefault: isDefaultParam);
          object.mxProduitObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.mxProduitObject.attach(store);
          object.mxUniteGrandeurObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.mxUniteGrandeurObject.attach(store);
          object.mxTypeEmballageObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          object.mxTypeEmballageObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxEmballageObject>(
              object.mxExploitationObjects,
              store,
              obx_int.RelInfo<MxEmballageObject>.toMany(4, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxEmballageObject>(
              object.mxEmballageObjects,
              store,
              obx_int.RelInfo<MxEmballageObject>.toMany(5, object.id));
          return object;
        }),
    MxEmplacementObject: obx_int.EntityDefinition<MxEmplacementObject>(
        model: _entities[15],
        toOneRelations: (MxEmplacementObject object) =>
            [object.mxentrepotObject, object.mxfamilleemplacementObject],
        toManyRelations: (MxEmplacementObject object) => {
              obx_int.RelInfo<MxEmplacementObject>.toMany(6, object.id):
                  object.mxmouvementstockObjects
            },
        getId: (MxEmplacementObject object) => object.id,
        setId: (MxEmplacementObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxEmplacementObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addFloat64(2, object.capacite);
          fbb.addInt64(3, object.mxentrepotObject.targetId);
          fbb.addInt64(4, object.mxfamilleemplacementObject.targetId);
          fbb.addInt64(5, object.code);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final codeParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 14);
          final capaciteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object = MxEmplacementObject(
              id: idParam,
              name: nameParam,
              code: codeParam,
              capacite: capaciteParam);
          object.mxentrepotObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.mxentrepotObject.attach(store);
          object.mxfamilleemplacementObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.mxfamilleemplacementObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxEmplacementObject>(
              object.mxmouvementstockObjects,
              store,
              obx_int.RelInfo<MxEmplacementObject>.toMany(6, object.id));
          return object;
        }),
    MxEntrepotObject: obx_int.EntityDefinition<MxEntrepotObject>(
        model: _entities[16],
        toOneRelations: (MxEntrepotObject object) => [object.mxpointObject],
        toManyRelations: (MxEntrepotObject object) => {
              obx_int.RelInfo<MxEntrepotObject>.toMany(59, object.id):
                  object.mxemplacementObjects
            },
        getId: (MxEntrepotObject object) => object.id,
        setId: (MxEntrepotObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxEntrepotObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final adresseOffset = fbb.writeString(object.adresse);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, adresseOffset);
          fbb.addInt64(4, object.mxpointObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object = MxEntrepotObject(
              id: idParam, name: nameParam, adresse: adresseParam);
          object.mxpointObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.mxpointObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxEntrepotObject>(
              object.mxemplacementObjects,
              store,
              obx_int.RelInfo<MxEntrepotObject>.toMany(59, object.id));
          return object;
        }),
    MxExploitationChargeExploitationObject: obx_int.EntityDefinition<
            MxExploitationChargeExploitationObject>(
        model: _entities[17],
        toOneRelations: (MxExploitationChargeExploitationObject object) =>
            [object.mxexploitation, object.mxchargeexploitationObject],
        toManyRelations: (MxExploitationChargeExploitationObject object) => {},
        getId: (MxExploitationChargeExploitationObject object) => object.id,
        setId: (MxExploitationChargeExploitationObject object, int id) {
          object.id = id;
        },
        objectToFB:
            (MxExploitationChargeExploitationObject object, fb.Builder fbb) {
          final uniteOffset = fbb.writeString(object.unite);
          final observationOffset = fbb.writeString(object.observation);
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addFloat64(1, object.pu);
          fbb.addFloat64(2, object.quantite);
          fbb.addFloat64(3, object.valeur);
          fbb.addOffset(4, uniteOffset);
          fbb.addInt64(5, object.date.millisecondsSinceEpoch);
          fbb.addOffset(6, observationOffset);
          fbb.addInt64(7, object.createdAt?.millisecondsSinceEpoch);
          fbb.addInt64(8, object.updatedAt?.millisecondsSinceEpoch);
          fbb.addInt64(9, object.mxexploitation.targetId);
          fbb.addInt64(10, object.mxchargeexploitationObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final createdAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final updatedAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final puParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final quantiteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final valeurParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final uniteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0));
          final observationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final object = MxExploitationChargeExploitationObject(
              id: idParam,
              pu: puParam,
              quantite: quantiteParam,
              valeur: valeurParam,
              unite: uniteParam,
              date: dateParam,
              observation: observationParam)
            ..createdAt = createdAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdAtValue)
            ..updatedAt = updatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
          object.mxexploitation.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.mxexploitation.attach(store);
          object.mxchargeexploitationObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          object.mxchargeexploitationObject.attach(store);
          return object;
        }),
    MxExploitationObject: obx_int.EntityDefinition<MxExploitationObject>(
        model: _entities[18],
        toOneRelations: (MxExploitationObject object) => [
              object.mxvarieteObject,
              object.mxanneeObject,
              object.mxsaisonObject,
              object.mxproducteurObject,
              object.mxopObject,
              object.mxagenceObject
            ],
        toManyRelations: (MxExploitationObject object) => {
              obx_int.RelInfo<MxExploitationObject>.toMany(9, object.id):
                  object.mxexploitationChargeExploitationObjects,
              obx_int.RelInfo<MxExploitationObject>.toMany(10, object.id):
                  object.mxrecoltesObjects,
              obx_int.RelInfo<MxExploitationObject>.toMany(11, object.id):
                  object.mxcreditsObjects
            },
        getId: (MxExploitationObject object) => object.id,
        setId: (MxExploitationObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxExploitationObject object, fb.Builder fbb) {
          final uniteOffset = fbb.writeString(object.unite);
          fbb.startTable(15);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.compte);
          fbb.addInt64(2, object.date.millisecondsSinceEpoch);
          fbb.addOffset(3, uniteOffset);
          fbb.addFloat64(4, object.surface);
          fbb.addInt64(5, object.createdAt.millisecondsSinceEpoch);
          fbb.addInt64(6, object.updatedAt.millisecondsSinceEpoch);
          fbb.addInt64(7, object.mxvarieteObject.targetId);
          fbb.addInt64(8, object.mxanneeObject.targetId);
          fbb.addInt64(9, object.mxsaisonObject.targetId);
          fbb.addInt64(10, object.mxproducteurObject.targetId);
          fbb.addInt64(11, object.mxopObject.targetId);
          fbb.addInt64(13, object.mxagenceObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final compteParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final uniteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final surfaceParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0));
          final updatedAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0));
          final object = MxExploitationObject(
              id: idParam,
              compte: compteParam,
              date: dateParam,
              unite: uniteParam,
              surface: surfaceParam,
              createdAt: createdAtParam,
              updatedAt: updatedAtParam);
          object.mxvarieteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.mxvarieteObject.attach(store);
          object.mxanneeObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.mxanneeObject.attach(store);
          object.mxsaisonObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.mxsaisonObject.attach(store);
          object.mxproducteurObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          object.mxproducteurObject.attach(store);
          object.mxopObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
          object.mxopObject.attach(store);
          object.mxagenceObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 30, 0);
          object.mxagenceObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxExploitationObject>(
              object.mxexploitationChargeExploitationObjects,
              store,
              obx_int.RelInfo<MxExploitationObject>.toMany(9, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxExploitationObject>(
              object.mxrecoltesObjects,
              store,
              obx_int.RelInfo<MxExploitationObject>.toMany(10, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxExploitationObject>(
              object.mxcreditsObjects,
              store,
              obx_int.RelInfo<MxExploitationObject>.toMany(11, object.id));
          return object;
        }),
    MxFamilleChargeExploitationObject: obx_int.EntityDefinition<
            MxFamilleChargeExploitationObject>(
        model: _entities[19],
        toOneRelations: (MxFamilleChargeExploitationObject object) => [],
        toManyRelations: (MxFamilleChargeExploitationObject object) => {
              obx_int.RelInfo<MxFamilleChargeExploitationObject>.toMany(
                  12, object.id): object.mxchargeExploitationObjects
            },
        getId: (MxFamilleChargeExploitationObject object) => object.id,
        setId: (MxFamilleChargeExploitationObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxFamilleChargeExploitationObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object =
              MxFamilleChargeExploitationObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<
                  MxFamilleChargeExploitationObject>(
              object.mxchargeExploitationObjects,
              store,
              obx_int.RelInfo<MxFamilleChargeExploitationObject>.toMany(
                  12, object.id));
          return object;
        }),
    MxFamilleEmplacementObject: obx_int.EntityDefinition<
            MxFamilleEmplacementObject>(
        model: _entities[20],
        toOneRelations: (MxFamilleEmplacementObject object) => [],
        toManyRelations: (MxFamilleEmplacementObject object) => {
              obx_int.RelInfo<MxFamilleEmplacementObject>.toMany(13, object.id):
                  object.mxProduitObjects
            },
        getId: (MxFamilleEmplacementObject object) => object.id,
        setId: (MxFamilleEmplacementObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxFamilleEmplacementObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object =
              MxFamilleEmplacementObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxFamilleEmplacementObject>(
              object.mxProduitObjects,
              store,
              obx_int.RelInfo<MxFamilleEmplacementObject>.toMany(
                  13, object.id));
          return object;
        }),
    MxFiliereObject: obx_int.EntityDefinition<MxFiliereObject>(
        model: _entities[21],
        toOneRelations: (MxFiliereObject object) => [],
        toManyRelations: (MxFiliereObject object) => {
              obx_int.RelInfo<MxFiliereObject>.toMany(14, object.id):
                  object.mxProduitObjects
            },
        getId: (MxFiliereObject object) => object.id,
        setId: (MxFiliereObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxFiliereObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxFiliereObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxFiliereObject>(
              object.mxProduitObjects,
              store,
              obx_int.RelInfo<MxFiliereObject>.toMany(14, object.id));
          return object;
        }),
    MxLocaliteObject: obx_int.EntityDefinition<MxLocaliteObject>(
        model: _entities[22],
        toOneRelations: (MxLocaliteObject object) => [object.mxSousZoneObject],
        toManyRelations: (MxLocaliteObject object) => {
              obx_int.RelInfo<MxLocaliteObject>.toMany(16, object.id):
                  object.mxVillagesObjects,
              obx_int.RelInfo<MxLocaliteObject>.toMany(17, object.id):
                  object.mxOpsObjects,
              obx_int.RelInfo<MxLocaliteObject>.toMany(52, object.id):
                  object.mxPointObjects
            },
        getId: (MxLocaliteObject object) => object.id,
        setId: (MxLocaliteObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxLocaliteObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.mxSousZoneObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxLocaliteObject(id: idParam, name: nameParam);
          object.mxSousZoneObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxSousZoneObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxLocaliteObject>(
              object.mxVillagesObjects,
              store,
              obx_int.RelInfo<MxLocaliteObject>.toMany(16, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxLocaliteObject>(
              object.mxOpsObjects,
              store,
              obx_int.RelInfo<MxLocaliteObject>.toMany(17, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxLocaliteObject>(
              object.mxPointObjects,
              store,
              obx_int.RelInfo<MxLocaliteObject>.toMany(52, object.id));
          return object;
        }),
    MxModeEntreeSortieStockObject:
        obx_int.EntityDefinition<MxModeEntreeSortieStockObject>(
            model: _entities[23],
            toOneRelations: (MxModeEntreeSortieStockObject object) =>
                [object.mxtypemouvementstockObject],
            toManyRelations: (MxModeEntreeSortieStockObject object) => {
                  obx_int.RelInfo<MxModeEntreeSortieStockObject>.toMany(
                      18, object.id): object.mxmouvementstocksObjects
                },
            getId: (MxModeEntreeSortieStockObject object) => object.id,
            setId: (MxModeEntreeSortieStockObject object, int id) {
              object.id = id;
            },
            objectToFB: (MxModeEntreeSortieStockObject object, fb.Builder fbb) {
              final codeOffset = fbb.writeString(object.code);
              final nameOffset = fbb.writeString(object.name);
              fbb.startTable(5);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, codeOffset);
              fbb.addOffset(2, nameOffset);
              fbb.addInt64(3, object.mxtypemouvementstockObject.targetId);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final codeParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final nameParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
              final object = MxModeEntreeSortieStockObject(
                  id: idParam, code: codeParam, name: nameParam);
              object.mxtypemouvementstockObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
              object.mxtypemouvementstockObject.attach(store);
              obx_int.InternalToManyAccess.setRelInfo<
                      MxModeEntreeSortieStockObject>(
                  object.mxmouvementstocksObjects,
                  store,
                  obx_int.RelInfo<MxModeEntreeSortieStockObject>.toMany(
                      18, object.id));
              return object;
            }),
    MxMouvementStockObject: obx_int.EntityDefinition<MxMouvementStockObject>(
        model: _entities[24],
        toOneRelations: (MxMouvementStockObject object) => [
              object.mxanneeObject,
              object.mxsaisonObject,
              object.mxemballageObject,
              object.mxopObject,
              object.mxunitetransformationObject,
              object.mxvarieteObject,
              object.mxmodeentreesortiestockObject,
              object.mxemplacementObject
            ],
        toManyRelations: (MxMouvementStockObject object) => {},
        getId: (MxMouvementStockObject object) => object.id,
        setId: (MxMouvementStockObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxMouvementStockObject object, fb.Builder fbb) {
          final lotOffset = fbb.writeString(object.lot);
          fbb.startTable(19);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.date.millisecondsSinceEpoch);
          fbb.addFloat64(2, object.pu);
          fbb.addFloat64(3, object.quantiteEntreeEmballage);
          fbb.addFloat64(4, object.quantiteSortieEmballage);
          fbb.addFloat64(5, object.nombreUnite);
          fbb.addFloat64(6, object.valeur);
          fbb.addInt64(7, object.mxanneeObject.targetId);
          fbb.addInt64(8, object.mxsaisonObject.targetId);
          fbb.addInt64(9, object.mxemballageObject.targetId);
          fbb.addInt64(10, object.mxopObject.targetId);
          fbb.addInt64(11, object.mxunitetransformationObject.targetId);
          fbb.addInt64(12, object.mxvarieteObject.targetId);
          fbb.addInt64(13, object.mxmodeentreesortiestockObject.targetId);
          fbb.addInt64(14, object.mxemplacementObject.targetId);
          fbb.addOffset(15, lotOffset);
          fbb.addBool(16, object.isSended);
          fbb.addInt64(17, object.dateSended?.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dateSendedValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 38);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final puParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final quantiteEntreeEmballageParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final quantiteSortieEmballageParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final nombreUniteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final valeurParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final lotParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 34, '');
          final isSendedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 36, false);
          final dateSendedParam = dateSendedValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateSendedValue);
          final object = MxMouvementStockObject(
              id: idParam,
              date: dateParam,
              pu: puParam,
              quantiteEntreeEmballage: quantiteEntreeEmballageParam,
              quantiteSortieEmballage: quantiteSortieEmballageParam,
              nombreUnite: nombreUniteParam,
              valeur: valeurParam,
              lot: lotParam,
              isSended: isSendedParam,
              dateSended: dateSendedParam);
          object.mxanneeObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.mxanneeObject.attach(store);
          object.mxsaisonObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.mxsaisonObject.attach(store);
          object.mxemballageObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.mxemballageObject.attach(store);
          object.mxopObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          object.mxopObject.attach(store);
          object.mxunitetransformationObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
          object.mxunitetransformationObject.attach(store);
          object.mxvarieteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0);
          object.mxvarieteObject.attach(store);
          object.mxmodeentreesortiestockObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 30, 0);
          object.mxmodeentreesortiestockObject.attach(store);
          object.mxemplacementObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 32, 0);
          object.mxemplacementObject.attach(store);
          return object;
        }),
    MxOpObject: obx_int.EntityDefinition<MxOpObject>(
        model: _entities[25],
        toOneRelations: (MxOpObject object) => [
              object.mxTypeOpObject,
              object.mxLocaliteObject,
              object.mxVillageObject,
              object.mxPointObject
            ],
        toManyRelations: (MxOpObject object) => {
              obx_int.RelInfo<MxOpObject>.toMany(19, object.id):
                  object.mxProducteursObjects,
              obx_int.RelInfo<MxOpObject>.toMany(20, object.id):
                  object.mxUserOpsObjects,
              obx_int.RelInfo<MxOpObject>.toMany(21, object.id):
                  object.mxExploitationObjects,
              obx_int.RelInfo<MxOpObject>.toMany(22, object.id):
                  object.mxmouvementstocksObjects
            },
        getId: (MxOpObject object) => object.id,
        setId: (MxOpObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxOpObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final sigleOffset = fbb.writeString(object.sigle);
          final emailOffset = fbb.writeString(object.email);
          final telephoneOffset = fbb.writeString(object.telephone);
          final adresseOffset = fbb.writeString(object.adresse);
          final prenom_contactOffset = fbb.writeString(object.prenom_contact);
          final nom_contactOffset = fbb.writeString(object.nom_contact);
          final email_contactOffset = fbb.writeString(object.email_contact);
          final telephone_contactOffset =
              fbb.writeString(object.telephone_contact);
          fbb.startTable(16);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.mxTypeOpObject.targetId);
          fbb.addInt64(3, object.mxLocaliteObject.targetId);
          fbb.addInt64(5, object.mxVillageObject.targetId);
          fbb.addInt64(6, object.mxPointObject.targetId);
          fbb.addOffset(7, sigleOffset);
          fbb.addOffset(8, emailOffset);
          fbb.addOffset(9, telephoneOffset);
          fbb.addOffset(10, adresseOffset);
          fbb.addOffset(11, prenom_contactOffset);
          fbb.addOffset(12, nom_contactOffset);
          fbb.addOffset(13, email_contactOffset);
          fbb.addOffset(14, telephone_contactOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final sigleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 22, '');
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 24, '');
          final prenom_contactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 26, '');
          final nom_contactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 28, '');
          final email_contactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 30, '');
          final telephone_contactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 32, '');
          final object = MxOpObject(
              id: idParam,
              name: nameParam,
              sigle: sigleParam,
              email: emailParam,
              telephone: telephoneParam,
              adresse: adresseParam,
              prenom_contact: prenom_contactParam,
              nom_contact: nom_contactParam,
              email_contact: email_contactParam,
              telephone_contact: telephone_contactParam);
          object.mxTypeOpObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxTypeOpObject.attach(store);
          object.mxLocaliteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.mxLocaliteObject.attach(store);
          object.mxVillageObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          object.mxVillageObject.attach(store);
          object.mxPointObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.mxPointObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxOpObject>(
              object.mxProducteursObjects,
              store,
              obx_int.RelInfo<MxOpObject>.toMany(19, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxOpObject>(
              object.mxUserOpsObjects,
              store,
              obx_int.RelInfo<MxOpObject>.toMany(20, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxOpObject>(
              object.mxExploitationObjects,
              store,
              obx_int.RelInfo<MxOpObject>.toMany(21, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxOpObject>(
              object.mxmouvementstocksObjects,
              store,
              obx_int.RelInfo<MxOpObject>.toMany(22, object.id));
          return object;
        }),
    MxPaysObject: obx_int.EntityDefinition<MxPaysObject>(
        model: _entities[26],
        toOneRelations: (MxPaysObject object) => [],
        toManyRelations: (MxPaysObject object) => {
              obx_int.RelInfo<MxPaysObject>.toMany(23, object.id):
                  object.mxZonesObjects
            },
        getId: (MxPaysObject object) => object.id,
        setId: (MxPaysObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxPaysObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final sigleOffset = fbb.writeString(object.sigle);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, sigleOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final sigleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              MxPaysObject(id: idParam, name: nameParam, sigle: sigleParam);
          obx_int.InternalToManyAccess.setRelInfo<MxPaysObject>(
              object.mxZonesObjects,
              store,
              obx_int.RelInfo<MxPaysObject>.toMany(23, object.id));
          return object;
        }),
    MxPostObject: obx_int.EntityDefinition<MxPostObject>(
        model: _entities[27],
        toOneRelations: (MxPostObject object) => [],
        toManyRelations: (MxPostObject object) => {
              obx_int.RelInfo<MxPostObject>.toMany(25, object.id):
                  object.mxcommentsObjects
            },
        getId: (MxPostObject object) => object.id,
        setId: (MxPostObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxPostObject object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final bodyOffset = fbb.writeString(object.body);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, bodyOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final bodyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              MxPostObject(id: idParam, title: titleParam, body: bodyParam);
          obx_int.InternalToManyAccess.setRelInfo<MxPostObject>(
              object.mxcommentsObjects,
              store,
              obx_int.RelInfo<MxPostObject>.toMany(25, object.id));
          return object;
        }),
    MxProducteurObject: obx_int.EntityDefinition<MxProducteurObject>(
        model: _entities[28],
        toOneRelations: (MxProducteurObject object) => [object.mxOpObject],
        toManyRelations: (MxProducteurObject object) => {
              obx_int.RelInfo<MxProducteurObject>.toMany(26, object.id):
                  object.mxExploitationObjects
            },
        getId: (MxProducteurObject object) => object.id,
        setId: (MxProducteurObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxProducteurObject object, fb.Builder fbb) {
          final prenomOffset = fbb.writeString(object.prenom);
          final nomOffset = fbb.writeString(object.nom);
          final cniOffset = fbb.writeString(object.cni);
          final emailOffset = fbb.writeString(object.email);
          final telephoneOffset = fbb.writeString(object.telephone);
          final adresseOffset = fbb.writeString(object.adresse);
          fbb.startTable(11);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.compte);
          fbb.addOffset(2, prenomOffset);
          fbb.addOffset(3, nomOffset);
          fbb.addOffset(4, cniOffset);
          fbb.addOffset(5, emailOffset);
          fbb.addOffset(6, telephoneOffset);
          fbb.addOffset(7, adresseOffset);
          fbb.addBool(8, object.isActive);
          fbb.addInt64(9, object.mxOpObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final compteParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final prenomParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final nomParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final cniParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final isActiveParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 20, false);
          final object = MxProducteurObject(
              id: idParam,
              compte: compteParam,
              prenom: prenomParam,
              email: emailParam,
              telephone: telephoneParam,
              adresse: adresseParam,
              nom: nomParam,
              cni: cniParam,
              isActive: isActiveParam);
          object.mxOpObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.mxOpObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxProducteurObject>(
              object.mxExploitationObjects,
              store,
              obx_int.RelInfo<MxProducteurObject>.toMany(26, object.id));
          return object;
        }),
    MxProduitObject: obx_int.EntityDefinition<MxProduitObject>(
        model: _entities[29],
        toOneRelations: (MxProduitObject object) =>
            [object.mxFiliereObject, object.mxFamilleEmplacementObject],
        toManyRelations: (MxProduitObject object) => {
              obx_int.RelInfo<MxProduitObject>.toMany(27, object.id):
                  object.mxChargeExploitationObjects,
              obx_int.RelInfo<MxProduitObject>.toMany(28, object.id):
                  object.mxVarieteObjects,
              obx_int.RelInfo<MxProduitObject>.toMany(29, object.id):
                  object.mxEmballageObjects,
              obx_int.RelInfo<MxProduitObject>.toMany(64, object.id):
                  object.mxProduitChargeExploitationObjects
            },
        getId: (MxProduitObject object) => object.id,
        setId: (MxProduitObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxProduitObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addBool(2, object.isDerive);
          fbb.addBool(3, object.isEnsachage);
          fbb.addBool(4, object.isActive);
          fbb.addInt64(5, object.mxFiliereObject.targetId);
          fbb.addInt64(6, object.mxFamilleEmplacementObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final isDeriveParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final isEnsachageParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final isActiveParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final object = MxProduitObject(
              id: idParam,
              name: nameParam,
              isDerive: isDeriveParam,
              isEnsachage: isEnsachageParam,
              isActive: isActiveParam);
          object.mxFiliereObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          object.mxFiliereObject.attach(store);
          object.mxFamilleEmplacementObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.mxFamilleEmplacementObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxProduitObject>(
              object.mxChargeExploitationObjects,
              store,
              obx_int.RelInfo<MxProduitObject>.toMany(27, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxProduitObject>(
              object.mxVarieteObjects,
              store,
              obx_int.RelInfo<MxProduitObject>.toMany(28, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxProduitObject>(
              object.mxEmballageObjects,
              store,
              obx_int.RelInfo<MxProduitObject>.toMany(29, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxProduitObject>(
              object.mxProduitChargeExploitationObjects,
              store,
              obx_int.RelInfo<MxProduitObject>.toMany(64, object.id));
          return object;
        }),
    MxRecolteObject: obx_int.EntityDefinition<MxRecolteObject>(
        model: _entities[30],
        toOneRelations: (MxRecolteObject object) => [
              object.mxvarieteObject,
              object.mxExploitationObject,
              object.mxemballageObject
            ],
        toManyRelations: (MxRecolteObject object) => {},
        getId: (MxRecolteObject object) => object.id,
        setId: (MxRecolteObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxRecolteObject object, fb.Builder fbb) {
          fbb.startTable(10);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.date.millisecondsSinceEpoch);
          fbb.addFloat64(2, object.pu);
          fbb.addFloat64(3, object.nombre_unite);
          fbb.addFloat64(4, object.nombre_emballage);
          fbb.addFloat64(5, object.valeur);
          fbb.addInt64(6, object.mxvarieteObject.targetId);
          fbb.addInt64(7, object.mxExploitationObject.targetId);
          fbb.addInt64(8, object.mxemballageObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final puParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final nombre_uniteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final nombre_emballageParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final valeurParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final object = MxRecolteObject(
              id: idParam,
              date: dateParam,
              pu: puParam,
              nombre_unite: nombre_uniteParam,
              nombre_emballage: nombre_emballageParam,
              valeur: valeurParam);
          object.mxvarieteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.mxvarieteObject.attach(store);
          object.mxExploitationObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.mxExploitationObject.attach(store);
          object.mxemballageObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.mxemballageObject.attach(store);
          return object;
        }),
    MxRemboursementObject: obx_int.EntityDefinition<MxRemboursementObject>(
        model: _entities[31],
        toOneRelations: (MxRemboursementObject object) => [
              object.mxTypeRemboursementObject,
              object.mxVarieteObject,
              object.mxExploitationObject,
              object.mxEmballageObject,
              object.mxPointObject
            ],
        toManyRelations: (MxRemboursementObject object) => {},
        getId: (MxRemboursementObject object) => object.id,
        setId: (MxRemboursementObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxRemboursementObject object, fb.Builder fbb) {
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.date.millisecondsSinceEpoch);
          fbb.addFloat64(2, object.pu);
          fbb.addFloat64(3, object.nombre_unite);
          fbb.addFloat64(4, object.nombre_emballage);
          fbb.addFloat64(5, object.valeur);
          fbb.addInt64(6, object.mxTypeRemboursementObject.targetId);
          fbb.addInt64(7, object.mxVarieteObject.targetId);
          fbb.addInt64(8, object.mxExploitationObject.targetId);
          fbb.addInt64(9, object.mxEmballageObject.targetId);
          fbb.addInt64(10, object.mxPointObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final puParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final nombre_uniteParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final nombre_emballageParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final valeurParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final object = MxRemboursementObject(
              id: idParam,
              date: dateParam,
              pu: puParam,
              nombre_unite: nombre_uniteParam,
              nombre_emballage: nombre_emballageParam,
              valeur: valeurParam);
          object.mxTypeRemboursementObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.mxTypeRemboursementObject.attach(store);
          object.mxVarieteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.mxVarieteObject.attach(store);
          object.mxExploitationObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.mxExploitationObject.attach(store);
          object.mxEmballageObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.mxEmballageObject.attach(store);
          object.mxPointObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          object.mxPointObject.attach(store);
          return object;
        }),
    MxRoleObject: obx_int.EntityDefinition<MxRoleObject>(
        model: _entities[32],
        toOneRelations: (MxRoleObject object) => [],
        toManyRelations: (MxRoleObject object) => {
              obx_int.RelInfo<MxRoleObject>.toMany(30, object.id):
                  object.mxuserObjects
            },
        getId: (MxRoleObject object) => object.id,
        setId: (MxRoleObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxRoleObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxRoleObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxRoleObject>(
              object.mxuserObjects,
              store,
              obx_int.RelInfo<MxRoleObject>.toMany(30, object.id));
          return object;
        }),
    MxSaisonObject: obx_int.EntityDefinition<MxSaisonObject>(
        model: _entities[33],
        toOneRelations: (MxSaisonObject object) => [],
        toManyRelations: (MxSaisonObject object) => {
              obx_int.RelInfo<MxSaisonObject>.toMany(31, object.id):
                  object.mxExploitationObjects,
              obx_int.RelInfo<MxSaisonObject>.toMany(32, object.id):
                  object.mxmouvementstocksObjects
            },
        getId: (MxSaisonObject object) => object.id,
        setId: (MxSaisonObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxSaisonObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final descriptionOffset = fbb.writeString(object.description);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, descriptionOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final object = MxSaisonObject(
              id: idParam, name: nameParam, description: descriptionParam);
          obx_int.InternalToManyAccess.setRelInfo<MxSaisonObject>(
              object.mxExploitationObjects,
              store,
              obx_int.RelInfo<MxSaisonObject>.toMany(31, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxSaisonObject>(
              object.mxmouvementstocksObjects,
              store,
              obx_int.RelInfo<MxSaisonObject>.toMany(32, object.id));
          return object;
        }),
    MxSousZoneObject: obx_int.EntityDefinition<MxSousZoneObject>(
        model: _entities[34],
        toOneRelations: (MxSousZoneObject object) => [object.mxZoneObject],
        toManyRelations: (MxSousZoneObject object) => {
              obx_int.RelInfo<MxSousZoneObject>.toMany(33, object.id):
                  object.mxLocalitesObjects
            },
        getId: (MxSousZoneObject object) => object.id,
        setId: (MxSousZoneObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxSousZoneObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.mxZoneObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxSousZoneObject(id: idParam, name: nameParam);
          object.mxZoneObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxZoneObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxSousZoneObject>(
              object.mxLocalitesObjects,
              store,
              obx_int.RelInfo<MxSousZoneObject>.toMany(33, object.id));
          return object;
        }),
    MxTypeChargeExploitationObject:
        obx_int.EntityDefinition<MxTypeChargeExploitationObject>(
            model: _entities[35],
            toOneRelations: (MxTypeChargeExploitationObject object) => [],
            toManyRelations: (MxTypeChargeExploitationObject object) => {
                  obx_int.RelInfo<MxTypeChargeExploitationObject>.toMany(
                      34, object.id): object.mxchargeExploitationObjects
                },
            getId: (MxTypeChargeExploitationObject object) => object.id,
            setId: (MxTypeChargeExploitationObject object, int id) {
              object.id = id;
            },
            objectToFB:
                (MxTypeChargeExploitationObject object, fb.Builder fbb) {
              final nameOffset = fbb.writeString(object.name);
              fbb.startTable(3);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, nameOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final nameParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final object =
                  MxTypeChargeExploitationObject(id: idParam, name: nameParam);
              obx_int.InternalToManyAccess.setRelInfo<
                      MxTypeChargeExploitationObject>(
                  object.mxchargeExploitationObjects,
                  store,
                  obx_int.RelInfo<MxTypeChargeExploitationObject>.toMany(
                      34, object.id));
              return object;
            }),
    MxTypeEmballageObject: obx_int.EntityDefinition<MxTypeEmballageObject>(
        model: _entities[36],
        toOneRelations: (MxTypeEmballageObject object) => [],
        toManyRelations: (MxTypeEmballageObject object) => {
              obx_int.RelInfo<MxTypeEmballageObject>.toMany(35, object.id):
                  object.mxEmballageObjects
            },
        getId: (MxTypeEmballageObject object) => object.id,
        setId: (MxTypeEmballageObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxTypeEmballageObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxTypeEmballageObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxTypeEmballageObject>(
              object.mxEmballageObjects,
              store,
              obx_int.RelInfo<MxTypeEmballageObject>.toMany(35, object.id));
          return object;
        }),
    MxTypeMouvementStockObject: obx_int.EntityDefinition<
            MxTypeMouvementStockObject>(
        model: _entities[37],
        toOneRelations: (MxTypeMouvementStockObject object) => [],
        toManyRelations: (MxTypeMouvementStockObject object) => {
              obx_int.RelInfo<MxTypeMouvementStockObject>.toMany(37, object.id):
                  object.mxmodeentreesortiestockObjects
            },
        getId: (MxTypeMouvementStockObject object) => object.id,
        setId: (MxTypeMouvementStockObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxTypeMouvementStockObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object =
              MxTypeMouvementStockObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxTypeMouvementStockObject>(
              object.mxmodeentreesortiestockObjects,
              store,
              obx_int.RelInfo<MxTypeMouvementStockObject>.toMany(
                  37, object.id));
          return object;
        }),
    MxTypeOpObject: obx_int.EntityDefinition<MxTypeOpObject>(
        model: _entities[38],
        toOneRelations: (MxTypeOpObject object) => [],
        toManyRelations: (MxTypeOpObject object) => {
              obx_int.RelInfo<MxTypeOpObject>.toMany(38, object.id):
                  object.mxOpObjects
            },
        getId: (MxTypeOpObject object) => object.id,
        setId: (MxTypeOpObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxTypeOpObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxTypeOpObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxTypeOpObject>(
              object.mxOpObjects,
              store,
              obx_int.RelInfo<MxTypeOpObject>.toMany(38, object.id));
          return object;
        }),
    MxTypeRemboursementObject: obx_int.EntityDefinition<
            MxTypeRemboursementObject>(
        model: _entities[39],
        toOneRelations: (MxTypeRemboursementObject object) => [],
        toManyRelations: (MxTypeRemboursementObject object) => {
              obx_int.RelInfo<MxTypeRemboursementObject>.toMany(39, object.id):
                  object.mxremboursementObjects
            },
        getId: (MxTypeRemboursementObject object) => object.id,
        setId: (MxTypeRemboursementObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxTypeRemboursementObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object =
              MxTypeRemboursementObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxTypeRemboursementObject>(
              object.mxremboursementObjects,
              store,
              obx_int.RelInfo<MxTypeRemboursementObject>.toMany(39, object.id));
          return object;
        }),
    MxTypeUniteGrandeurObject: obx_int.EntityDefinition<
            MxTypeUniteGrandeurObject>(
        model: _entities[40],
        toOneRelations: (MxTypeUniteGrandeurObject object) => [],
        toManyRelations: (MxTypeUniteGrandeurObject object) => {
              obx_int.RelInfo<MxTypeUniteGrandeurObject>.toMany(40, object.id):
                  object.mxUniteGrandeurObjects
            },
        getId: (MxTypeUniteGrandeurObject object) => object.id,
        setId: (MxTypeUniteGrandeurObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxTypeUniteGrandeurObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object =
              MxTypeUniteGrandeurObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxTypeUniteGrandeurObject>(
              object.mxUniteGrandeurObjects,
              store,
              obx_int.RelInfo<MxTypeUniteGrandeurObject>.toMany(40, object.id));
          return object;
        }),
    MxUniteGrandeurObject: obx_int.EntityDefinition<MxUniteGrandeurObject>(
        model: _entities[41],
        toOneRelations: (MxUniteGrandeurObject object) =>
            [object.mxTypeUniteGrandeurObject],
        toManyRelations: (MxUniteGrandeurObject object) => {
              obx_int.RelInfo<MxUniteGrandeurObject>.toMany(41, object.id):
                  object.mxEmballageObjects
            },
        getId: (MxUniteGrandeurObject object) => object.id,
        setId: (MxUniteGrandeurObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxUniteGrandeurObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.mxTypeUniteGrandeurObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxUniteGrandeurObject(id: idParam, name: nameParam);
          object.mxTypeUniteGrandeurObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxTypeUniteGrandeurObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxUniteGrandeurObject>(
              object.mxEmballageObjects,
              store,
              obx_int.RelInfo<MxUniteGrandeurObject>.toMany(41, object.id));
          return object;
        }),
    MxUniteTransformationObject: obx_int.EntityDefinition<
            MxUniteTransformationObject>(
        model: _entities[42],
        toOneRelations: (MxUniteTransformationObject object) => [],
        toManyRelations: (MxUniteTransformationObject object) => {
              obx_int.RelInfo<MxUniteTransformationObject>.toMany(
                  42, object.id): object.mxmouvementstockObjects
            },
        getId: (MxUniteTransformationObject object) => object.id,
        setId: (MxUniteTransformationObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxUniteTransformationObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final sigleOffset = fbb.writeString(object.sigle);
          final adresseOffset = fbb.writeString(object.adresse);
          final telephoneOffset = fbb.writeString(object.telephone);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, sigleOffset);
          fbb.addOffset(3, adresseOffset);
          fbb.addOffset(4, telephoneOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final sigleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = MxUniteTransformationObject(
              id: idParam,
              name: nameParam,
              sigle: sigleParam,
              adresse: adresseParam,
              telephone: telephoneParam);
          obx_int.InternalToManyAccess.setRelInfo<MxUniteTransformationObject>(
              object.mxmouvementstockObjects,
              store,
              obx_int.RelInfo<MxUniteTransformationObject>.toMany(
                  42, object.id));
          return object;
        }),
    MxUserObject: obx_int.EntityDefinition<MxUserObject>(
        model: _entities[43],
        toOneRelations: (MxUserObject object) => [object.mxroleObject],
        toManyRelations: (MxUserObject object) => {
              obx_int.RelInfo<MxUserObject>.toMany(43, object.id):
                  object.mxuserPermissionObjects,
              obx_int.RelInfo<MxUserObject>.toMany(44, object.id):
                  object.mxUserOpsObjects
            },
        getId: (MxUserObject object) => object.id,
        setId: (MxUserObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxUserObject object, fb.Builder fbb) {
          final tokenOffset = fbb.writeString(object.token);
          final emailOffset = fbb.writeString(object.email);
          final usernameOffset = fbb.writeString(object.username);
          final passwordOffset = fbb.writeString(object.password);
          final firstnameOffset = fbb.writeString(object.firstname);
          final lastnameOffset = fbb.writeString(object.lastname);
          final phoneOffset = fbb.writeString(object.phone);
          final addressOffset = fbb.writeString(object.address);
          final roleNameOffset = fbb.writeString(object.roleName);
          fbb.startTable(13);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tokenOffset);
          fbb.addOffset(2, emailOffset);
          fbb.addOffset(3, usernameOffset);
          fbb.addOffset(4, passwordOffset);
          fbb.addOffset(5, firstnameOffset);
          fbb.addOffset(6, lastnameOffset);
          fbb.addOffset(7, phoneOffset);
          fbb.addOffset(8, addressOffset);
          fbb.addInt64(9, object.roleId);
          fbb.addOffset(10, roleNameOffset);
          fbb.addInt64(11, object.mxroleObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final tokenParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final usernameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final passwordParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final firstnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final lastnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final phoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final addressParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final roleIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final roleNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 24, '');
          final object = MxUserObject(
              id: idParam,
              token: tokenParam,
              email: emailParam,
              username: usernameParam,
              password: passwordParam,
              firstname: firstnameParam,
              lastname: lastnameParam,
              phone: phoneParam,
              address: addressParam,
              roleId: roleIdParam,
              roleName: roleNameParam);
          object.mxroleObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
          object.mxroleObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxUserObject>(
              object.mxuserPermissionObjects,
              store,
              obx_int.RelInfo<MxUserObject>.toMany(43, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxUserObject>(
              object.mxUserOpsObjects,
              store,
              obx_int.RelInfo<MxUserObject>.toMany(44, object.id));
          return object;
        }),
    MxUserOpObject: obx_int.EntityDefinition<MxUserOpObject>(
        model: _entities[44],
        toOneRelations: (MxUserOpObject object) =>
            [object.mxUserObject, object.mxOpObject],
        toManyRelations: (MxUserOpObject object) => {},
        getId: (MxUserOpObject object) => object.id,
        setId: (MxUserOpObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxUserOpObject object, fb.Builder fbb) {
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.userId);
          fbb.addInt64(2, object.mxUserObject.targetId);
          fbb.addInt64(3, object.mxOpObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final userIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final object = MxUserOpObject(id: idParam, userId: userIdParam);
          object.mxUserObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxUserObject.attach(store);
          object.mxOpObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.mxOpObject.attach(store);
          return object;
        }),
    MxUserPermissionObject: obx_int.EntityDefinition<MxUserPermissionObject>(
        model: _entities[45],
        toOneRelations: (MxUserPermissionObject object) =>
            [object.mxuserObject],
        toManyRelations: (MxUserPermissionObject object) => {},
        getId: (MxUserPermissionObject object) => object.id,
        setId: (MxUserPermissionObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxUserPermissionObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.mxuserObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxUserPermissionObject(id: idParam, name: nameParam);
          object.mxuserObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxuserObject.attach(store);
          return object;
        }),
    MxVarieteObject: obx_int.EntityDefinition<MxVarieteObject>(
        model: _entities[46],
        toOneRelations: (MxVarieteObject object) => [object.mxProduitObject],
        toManyRelations: (MxVarieteObject object) => {
              obx_int.RelInfo<MxVarieteObject>.toMany(45, object.id):
                  object.mxExploitationObjects,
              obx_int.RelInfo<MxVarieteObject>.toMany(46, object.id):
                  object.mxmouvementstocksObjects
            },
        getId: (MxVarieteObject object) => object.id,
        setId: (MxVarieteObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxVarieteObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final surface_uniteOffset = object.surface_unite == null
              ? null
              : fbb.writeString(object.surface_unite!);
          final quantite_uniteOffset = object.quantite_unite == null
              ? null
              : fbb.writeString(object.quantite_unite!);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, surface_uniteOffset);
          fbb.addOffset(3, quantite_uniteOffset);
          fbb.addFloat64(4, object.pu_unite);
          fbb.addFloat64(5, object.rendement_unite);
          fbb.addBool(6, object.isActive);
          fbb.addInt64(7, object.mxProduitObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final surface_uniteParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 8);
          final quantite_uniteParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10);
          final pu_uniteParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 12);
          final rendement_uniteParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 14);
          final isActiveParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 16, false);
          final object = MxVarieteObject(
              id: idParam,
              name: nameParam,
              surface_unite: surface_uniteParam,
              quantite_unite: quantite_uniteParam,
              pu_unite: pu_uniteParam,
              rendement_unite: rendement_uniteParam,
              isActive: isActiveParam);
          object.mxProduitObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.mxProduitObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxVarieteObject>(
              object.mxExploitationObjects,
              store,
              obx_int.RelInfo<MxVarieteObject>.toMany(45, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxVarieteObject>(
              object.mxmouvementstocksObjects,
              store,
              obx_int.RelInfo<MxVarieteObject>.toMany(46, object.id));
          return object;
        }),
    MxVillageObject: obx_int.EntityDefinition<MxVillageObject>(
        model: _entities[47],
        toOneRelations: (MxVillageObject object) => [object.mxLocaliteObject],
        toManyRelations: (MxVillageObject object) => {
              obx_int.RelInfo<MxVillageObject>.toMany(47, object.id):
                  object.mxOpsObjects
            },
        getId: (MxVillageObject object) => object.id,
        setId: (MxVillageObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxVillageObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.mxLocaliteObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxVillageObject(id: idParam, name: nameParam);
          object.mxLocaliteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxLocaliteObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxVillageObject>(
              object.mxOpsObjects,
              store,
              obx_int.RelInfo<MxVillageObject>.toMany(47, object.id));
          return object;
        }),
    MxZoneObject: obx_int.EntityDefinition<MxZoneObject>(
        model: _entities[48],
        toOneRelations: (MxZoneObject object) => [object.mxPaysObject],
        toManyRelations: (MxZoneObject object) => {
              obx_int.RelInfo<MxZoneObject>.toMany(48, object.id):
                  object.mxSousZonesObjects
            },
        getId: (MxZoneObject object) => object.id,
        setId: (MxZoneObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxZoneObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.mxPaysObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxZoneObject(id: idParam, name: nameParam);
          object.mxPaysObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxPaysObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxZoneObject>(
              object.mxSousZonesObjects,
              store,
              obx_int.RelInfo<MxZoneObject>.toMany(48, object.id));
          return object;
        }),
    OpObject: obx_int.EntityDefinition<OpObject>(
        model: _entities[49],
        toOneRelations: (OpObject object) => [],
        toManyRelations: (OpObject object) => {},
        getId: (OpObject object) => object.id,
        setId: (OpObject object, int id) {
          object.id = id;
        },
        objectToFB: (OpObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          final telephoneOffset = object.telephone == null
              ? null
              : fbb.writeString(object.telephone!);
          final adresseOffset =
              object.adresse == null ? null : fbb.writeString(object.adresse!);
          final type_op_nameOffset = fbb.writeString(object.type_op_name);
          final localite_nameOffset = object.localite_name == null
              ? null
              : fbb.writeString(object.localite_name!);
          final sous_zone_nameOffset = object.sous_zone_name == null
              ? null
              : fbb.writeString(object.sous_zone_name!);
          final zone_nameOffset = object.zone_name == null
              ? null
              : fbb.writeString(object.zone_name!);
          final departement_nameOffset = object.departement_name == null
              ? null
              : fbb.writeString(object.departement_name!);
          final region_nameOffset = object.region_name == null
              ? null
              : fbb.writeString(object.region_name!);
          final pays_nameOffset = object.pays_name == null
              ? null
              : fbb.writeString(object.pays_name!);
          fbb.startTable(21);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, emailOffset);
          fbb.addOffset(3, telephoneOffset);
          fbb.addOffset(4, adresseOffset);
          fbb.addBool(5, object.is_actif);
          fbb.addInt64(6, object.type_op_id);
          fbb.addOffset(7, type_op_nameOffset);
          fbb.addInt64(8, object.localite_id);
          fbb.addOffset(9, localite_nameOffset);
          fbb.addInt64(10, object.sous_zone_id);
          fbb.addOffset(11, sous_zone_nameOffset);
          fbb.addInt64(12, object.zone_id);
          fbb.addOffset(13, zone_nameOffset);
          fbb.addInt64(14, object.departement_id);
          fbb.addOffset(15, departement_nameOffset);
          fbb.addInt64(16, object.region_id);
          fbb.addOffset(17, region_nameOffset);
          fbb.addInt64(18, object.pays_id);
          fbb.addOffset(19, pays_nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final is_actifParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final type_op_idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final type_op_nameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 18, '');
          final localite_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final localite_nameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 22);
          final sous_zone_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 24);
          final sous_zone_nameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 26);
          final zone_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 28);
          final zone_nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 30);
          final departement_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 32);
          final departement_nameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 34);
          final region_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 36);
          final region_nameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 38);
          final pays_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 40);
          final pays_nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 42);
          final object = OpObject(
              id: idParam,
              name: nameParam,
              email: emailParam,
              telephone: telephoneParam,
              adresse: adresseParam,
              is_actif: is_actifParam,
              type_op_id: type_op_idParam,
              type_op_name: type_op_nameParam,
              localite_id: localite_idParam,
              localite_name: localite_nameParam,
              sous_zone_id: sous_zone_idParam,
              sous_zone_name: sous_zone_nameParam,
              zone_id: zone_idParam,
              zone_name: zone_nameParam,
              departement_id: departement_idParam,
              departement_name: departement_nameParam,
              region_id: region_idParam,
              region_name: region_nameParam,
              pays_id: pays_idParam,
              pays_name: pays_nameParam);

          return object;
        }),
    PersonEntity: obx_int.EntityDefinition<PersonEntity>(
        model: _entities[50],
        toOneRelations: (PersonEntity object) => [],
        toManyRelations: (PersonEntity object) => {},
        getId: (PersonEntity object) => object.id,
        setId: (PersonEntity object, int id) {
          if (object.id != id) {
            throw ArgumentError('Field PersonEntity.id is read-only '
                '(final or getter-only) and it was declared to be self-assigned. '
                'However, the currently inserted object (.id=${object.id}) '
                "doesn't match the inserted ID (ID $id). "
                'You must assign an ID before calling [box.put()].');
          }
        },
        objectToFB: (PersonEntity object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.age);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final ageParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object =
              PersonEntity(id: idParam, name: nameParam, age: ageParam);

          return object;
        }),
    ProducteurObject: obx_int.EntityDefinition<ProducteurObject>(
        model: _entities[51],
        toOneRelations: (ProducteurObject object) => [],
        toManyRelations: (ProducteurObject object) => {},
        getId: (ProducteurObject object) => object.id,
        setId: (ProducteurObject object, int id) {
          object.id = id;
        },
        objectToFB: (ProducteurObject object, fb.Builder fbb) {
          final prenomOffset =
              object.prenom == null ? null : fbb.writeString(object.prenom!);
          final nomOffset =
              object.nom == null ? null : fbb.writeString(object.nom!);
          final cniOffset =
              object.cni == null ? null : fbb.writeString(object.cni!);
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          final telephoneOffset = object.telephone == null
              ? null
              : fbb.writeString(object.telephone!);
          final adresseOffset =
              object.adresse == null ? null : fbb.writeString(object.adresse!);
          final opnameOffset =
              object.opname == null ? null : fbb.writeString(object.opname!);
          final typeopnameOffset = object.typeopname == null
              ? null
              : fbb.writeString(object.typeopname!);
          fbb.startTable(13);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, prenomOffset);
          fbb.addOffset(2, nomOffset);
          fbb.addOffset(3, cniOffset);
          fbb.addOffset(4, emailOffset);
          fbb.addOffset(5, telephoneOffset);
          fbb.addOffset(6, adresseOffset);
          fbb.addInt64(7, object.opid);
          fbb.addOffset(8, opnameOffset);
          fbb.addInt64(9, object.typeopid);
          fbb.addOffset(10, typeopnameOffset);
          fbb.addBool(11, object.is_actif);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final prenomParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final nomParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final cniParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final opidParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final opnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 20);
          final typeopidParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 22);
          final typeopnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 24);
          final is_actifParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 26, false);
          final object = ProducteurObject(
              id: idParam,
              prenom: prenomParam,
              email: emailParam,
              telephone: telephoneParam,
              adresse: adresseParam,
              nom: nomParam,
              cni: cniParam,
              opid: opidParam,
              opname: opnameParam,
              typeopid: typeopidParam,
              typeopname: typeopnameParam,
              is_actif: is_actifParam);

          return object;
        }),
    ProduitEntreeObject: obx_int.EntityDefinition<ProduitEntreeObject>(
        model: _entities[52],
        toOneRelations: (ProduitEntreeObject object) => [],
        toManyRelations: (ProduitEntreeObject object) => {},
        getId: (ProduitEntreeObject object) => object.id,
        setId: (ProduitEntreeObject object, int id) {
          object.id = id;
        },
        objectToFB: (ProduitEntreeObject object, fb.Builder fbb) {
          final produitnameOffset = fbb.writeString(object.produitname);
          final etapenameOffset = fbb.writeString(object.etapename);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.produitopid);
          fbb.addOffset(2, produitnameOffset);
          fbb.addInt64(3, object.etapeid);
          fbb.addOffset(4, etapenameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final produitopidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final produitnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final etapeidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final etapenameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = ProduitEntreeObject(
              id: idParam,
              produitopid: produitopidParam,
              produitname: produitnameParam,
              etapeid: etapeidParam,
              etapename: etapenameParam);

          return object;
        }),
    ProduitSortieObject: obx_int.EntityDefinition<ProduitSortieObject>(
        model: _entities[53],
        toOneRelations: (ProduitSortieObject object) => [],
        toManyRelations: (ProduitSortieObject object) => {},
        getId: (ProduitSortieObject object) => object.id,
        setId: (ProduitSortieObject object, int id) {
          object.id = id;
        },
        objectToFB: (ProduitSortieObject object, fb.Builder fbb) {
          final produitnameOffset = fbb.writeString(object.produitname);
          final etapenameOffset = fbb.writeString(object.etapename);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.produitopid);
          fbb.addOffset(2, produitnameOffset);
          fbb.addInt64(3, object.etapeid);
          fbb.addOffset(4, etapenameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final produitopidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final produitnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final etapeidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final etapenameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = ProduitSortieObject(
              id: idParam,
              produitopid: produitopidParam,
              produitname: produitnameParam,
              etapeid: etapeidParam,
              etapename: etapenameParam);

          return object;
        }),
    SaisonObject: obx_int.EntityDefinition<SaisonObject>(
        model: _entities[54],
        toOneRelations: (SaisonObject object) => [],
        toManyRelations: (SaisonObject object) => {},
        getId: (SaisonObject object) => object.id,
        setId: (SaisonObject object, int id) {
          object.id = id;
        },
        objectToFB: (SaisonObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final descriptionOffset = fbb.writeString(object.description);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, descriptionOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final object = SaisonObject(
              id: idParam, name: nameParam, description: descriptionParam);

          return object;
        }),
    StructureObject: obx_int.EntityDefinition<StructureObject>(
        model: _entities[55],
        toOneRelations: (StructureObject object) => [],
        toManyRelations: (StructureObject object) => {},
        getId: (StructureObject object) => object.id,
        setId: (StructureObject object, int id) {
          object.id = id;
        },
        objectToFB: (StructureObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final sigleOffset = fbb.writeString(object.sigle);
          final telephoneOffset = fbb.writeString(object.telephone);
          final adresseOffset = fbb.writeString(object.adresse);
          final souszonenameOffset = fbb.writeString(object.souszonename);
          final zonenameOffset = fbb.writeString(object.zonename);
          final paysnameOffset = fbb.writeString(object.paysname);
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, sigleOffset);
          fbb.addOffset(3, telephoneOffset);
          fbb.addOffset(4, adresseOffset);
          fbb.addInt64(5, object.souszoneid);
          fbb.addOffset(6, souszonenameOffset);
          fbb.addInt64(7, object.zoneid);
          fbb.addOffset(8, zonenameOffset);
          fbb.addInt64(9, object.paysid);
          fbb.addOffset(10, paysnameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final sigleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final souszoneidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final souszonenameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final zoneidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final zonenameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final paysidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final paysnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 24, '');
          final object = StructureObject(
              id: idParam,
              name: nameParam,
              sigle: sigleParam,
              telephone: telephoneParam,
              adresse: adresseParam,
              souszoneid: souszoneidParam,
              souszonename: souszonenameParam,
              zoneid: zoneidParam,
              zonename: zonenameParam,
              paysid: paysidParam,
              paysname: paysnameParam);

          return object;
        }),
    TypeChargeExploitationObject:
        obx_int.EntityDefinition<TypeChargeExploitationObject>(
            model: _entities[56],
            toOneRelations: (TypeChargeExploitationObject object) => [],
            toManyRelations: (TypeChargeExploitationObject object) => {},
            getId: (TypeChargeExploitationObject object) => object.id,
            setId: (TypeChargeExploitationObject object, int id) {
              object.id = id;
            },
            objectToFB: (TypeChargeExploitationObject object, fb.Builder fbb) {
              final nameOffset = fbb.writeString(object.name);
              fbb.startTable(3);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, nameOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final nameParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final object =
                  TypeChargeExploitationObject(id: idParam, name: nameParam);

              return object;
            }),
    TypeChargeObject: obx_int.EntityDefinition<TypeChargeObject>(
        model: _entities[57],
        toOneRelations: (TypeChargeObject object) => [],
        toManyRelations: (TypeChargeObject object) => {},
        getId: (TypeChargeObject object) => object.id,
        setId: (TypeChargeObject object, int id) {
          object.id = id;
        },
        objectToFB: (TypeChargeObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = TypeChargeObject(id: idParam, name: nameParam);

          return object;
        }),
    TypeOpObject: obx_int.EntityDefinition<TypeOpObject>(
        model: _entities[58],
        toOneRelations: (TypeOpObject object) => [],
        toManyRelations: (TypeOpObject object) => {},
        getId: (TypeOpObject object) => object.id,
        setId: (TypeOpObject object, int id) {
          object.id = id;
        },
        objectToFB: (TypeOpObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = TypeOpObject(id: idParam, name: nameParam);

          return object;
        }),
    TypeTransformationObject:
        obx_int.EntityDefinition<TypeTransformationObject>(
            model: _entities[59],
            toOneRelations: (TypeTransformationObject object) => [],
            toManyRelations: (TypeTransformationObject object) => {},
            getId: (TypeTransformationObject object) => object.id,
            setId: (TypeTransformationObject object, int id) {
              object.id = id;
            },
            objectToFB: (TypeTransformationObject object, fb.Builder fbb) {
              final nameOffset = fbb.writeString(object.name);
              final produitnameOffset = fbb.writeString(object.produitname);
              final filierenameOffset = fbb.writeString(object.filierename);
              fbb.startTable(7);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, nameOffset);
              fbb.addInt64(2, object.produitopid);
              fbb.addOffset(3, produitnameOffset);
              fbb.addInt64(4, object.filiereid);
              fbb.addOffset(5, filierenameOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final nameParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final produitopidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
              final produitnameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 10, '');
              final filiereidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
              final filierenameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 14, '');
              final object = TypeTransformationObject(
                  id: idParam,
                  name: nameParam,
                  produitopid: produitopidParam,
                  produitname: produitnameParam,
                  filiereid: filiereidParam,
                  filierename: filierenameParam);

              return object;
            }),
    UniteTransformationEtapeObject: obx_int.EntityDefinition<
            UniteTransformationEtapeObject>(
        model: _entities[60],
        toOneRelations: (UniteTransformationEtapeObject object) => [],
        toManyRelations: (UniteTransformationEtapeObject object) => {},
        getId: (UniteTransformationEtapeObject object) => object.id,
        setId: (UniteTransformationEtapeObject object, int id) {
          object.id = id;
        },
        objectToFB: (UniteTransformationEtapeObject object, fb.Builder fbb) {
          final unitetransformationnameOffset =
              fbb.writeString(object.unitetransformationname);
          final etapenameOffset = fbb.writeString(object.etapename);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.unitetransformationid);
          fbb.addOffset(2, unitetransformationnameOffset);
          fbb.addInt64(3, object.etapeid);
          fbb.addOffset(4, etapenameOffset);
          fbb.addInt64(5, object.etapenumero);
          fbb.addBool(6, object.is_actif);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final unitetransformationidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final unitetransformationnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final etapeidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final etapenameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final etapenumeroParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final is_actifParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 16, false);
          final object = UniteTransformationEtapeObject(
              id: idParam,
              unitetransformationid: unitetransformationidParam,
              unitetransformationname: unitetransformationnameParam,
              etapeid: etapeidParam,
              etapename: etapenameParam,
              etapenumero: etapenumeroParam,
              is_actif: is_actifParam);

          return object;
        }),
    UniteTransformationObject:
        obx_int.EntityDefinition<UniteTransformationObject>(
            model: _entities[61],
            toOneRelations: (UniteTransformationObject object) => [],
            toManyRelations: (UniteTransformationObject object) => {},
            getId: (UniteTransformationObject object) => object.id,
            setId: (UniteTransformationObject object, int id) {
              object.id = id;
            },
            objectToFB: (UniteTransformationObject object, fb.Builder fbb) {
              final typetransformationnameOffset =
                  fbb.writeString(object.typetransformationname);
              final societenameOffset = fbb.writeString(object.societename);
              fbb.startTable(8);
              fbb.addInt64(0, object.id);
              fbb.addInt64(3, object.typetransformationid);
              fbb.addOffset(4, typetransformationnameOffset);
              fbb.addInt64(5, object.societeid);
              fbb.addOffset(6, societenameOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final societeidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
              final societenameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 16, '');
              final typetransformationidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
              final typetransformationnameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 12, '');
              final object = UniteTransformationObject(
                  id: idParam,
                  societeid: societeidParam,
                  societename: societenameParam,
                  typetransformationid: typetransformationidParam,
                  typetransformationname: typetransformationnameParam);

              return object;
            }),
    UserObject: obx_int.EntityDefinition<UserObject>(
        model: _entities[62],
        toOneRelations: (UserObject object) => [],
        toManyRelations: (UserObject object) => {},
        getId: (UserObject object) => object.id,
        setId: (UserObject object, int id) {
          object.id = id;
        },
        objectToFB: (UserObject object, fb.Builder fbb) {
          final tokenOffset = fbb.writeString(object.token);
          final refreshOffset = fbb.writeString(object.refresh);
          final accessOffset = fbb.writeString(object.access);
          final emailOffset = fbb.writeString(object.email);
          final passwordOffset = fbb.writeString(object.password);
          final firstnameOffset = fbb.writeString(object.firstname);
          final lastnameOffset = fbb.writeString(object.lastname);
          final op_nameOffset =
              object.op_name == null ? null : fbb.writeString(object.op_name!);
          final sous_zone_nameOffset = object.sous_zone_name == null
              ? null
              : fbb.writeString(object.sous_zone_name!);
          final zone_nameOffset = object.zone_name == null
              ? null
              : fbb.writeString(object.zone_name!);
          final point_nameOffset = object.point_name == null
              ? null
              : fbb.writeString(object.point_name!);
          fbb.startTable(19);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tokenOffset);
          fbb.addOffset(2, refreshOffset);
          fbb.addOffset(3, accessOffset);
          fbb.addOffset(4, emailOffset);
          fbb.addOffset(5, passwordOffset);
          fbb.addOffset(6, firstnameOffset);
          fbb.addOffset(7, lastnameOffset);
          fbb.addInt64(8, object.op_id);
          fbb.addOffset(9, op_nameOffset);
          fbb.addInt64(10, object.sous_zone_id);
          fbb.addOffset(11, sous_zone_nameOffset);
          fbb.addInt64(12, object.zone_id);
          fbb.addOffset(13, zone_nameOffset);
          fbb.addInt64(16, object.point_id);
          fbb.addOffset(17, point_nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final tokenParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final refreshParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final accessParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final passwordParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final firstnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final lastnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final op_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final op_nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 22);
          final sous_zone_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 24);
          final sous_zone_nameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 26);
          final zone_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 28);
          final zone_nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 30);
          final point_idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 36);
          final point_nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 38);
          final object = UserObject(
              id: idParam,
              token: tokenParam,
              refresh: refreshParam,
              access: accessParam,
              email: emailParam,
              password: passwordParam,
              firstname: firstnameParam,
              lastname: lastnameParam,
              op_id: op_idParam,
              op_name: op_nameParam,
              sous_zone_id: sous_zone_idParam,
              sous_zone_name: sous_zone_nameParam,
              zone_id: zone_idParam,
              zone_name: zone_nameParam,
              point_id: point_idParam,
              point_name: point_nameParam);

          return object;
        }),
    UserOpObject: obx_int.EntityDefinition<UserOpObject>(
        model: _entities[63],
        toOneRelations: (UserOpObject object) => [],
        toManyRelations: (UserOpObject object) => {},
        getId: (UserOpObject object) => object.id,
        setId: (UserOpObject object, int id) {
          object.id = id;
        },
        objectToFB: (UserOpObject object, fb.Builder fbb) {
          final typeopnameOffset = fbb.writeString(object.typeopname);
          final opnameOffset = fbb.writeString(object.opname);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.userid);
          fbb.addInt64(2, object.typeopid);
          fbb.addOffset(3, typeopnameOffset);
          fbb.addInt64(4, object.opid);
          fbb.addOffset(5, opnameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final useridParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final typeopidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final typeopnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final opidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final opnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final object = UserOpObject(
              id: idParam,
              userid: useridParam,
              typeopid: typeopidParam,
              typeopname: typeopnameParam,
              opid: opidParam,
              opname: opnameParam);

          return object;
        }),
    UserUniteTransformationObject:
        obx_int.EntityDefinition<UserUniteTransformationObject>(
            model: _entities[64],
            toOneRelations: (UserUniteTransformationObject object) => [],
            toManyRelations: (UserUniteTransformationObject object) => {},
            getId: (UserUniteTransformationObject object) => object.id,
            setId: (UserUniteTransformationObject object, int id) {
              object.id = id;
            },
            objectToFB: (UserUniteTransformationObject object, fb.Builder fbb) {
              final typeunitetransformationnameOffset =
                  fbb.writeString(object.typeunitetransformationname);
              final unitetransformationnameOffset =
                  fbb.writeString(object.unitetransformationname);
              final societenameOffset = fbb.writeString(object.societename);
              fbb.startTable(11);
              fbb.addInt64(0, object.id);
              fbb.addInt64(1, object.userid);
              fbb.addInt64(2, object.typeunitetransformationid);
              fbb.addOffset(3, typeunitetransformationnameOffset);
              fbb.addInt64(4, object.unitetransformationid);
              fbb.addOffset(5, unitetransformationnameOffset);
              fbb.addInt64(8, object.societeid);
              fbb.addOffset(9, societenameOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final useridParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
              final typeunitetransformationidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
              final typeunitetransformationnameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 10, '');
              final unitetransformationidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
              final unitetransformationnameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 14, '');
              final societeidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
              final societenameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 22, '');
              final object = UserUniteTransformationObject(
                  id: idParam,
                  userid: useridParam,
                  typeunitetransformationid: typeunitetransformationidParam,
                  typeunitetransformationname: typeunitetransformationnameParam,
                  unitetransformationid: unitetransformationidParam,
                  unitetransformationname: unitetransformationnameParam,
                  societeid: societeidParam,
                  societename: societenameParam);

              return object;
            }),
    UsinageObject: obx_int.EntityDefinition<UsinageObject>(
        model: _entities[65],
        toOneRelations: (UsinageObject object) => [],
        toManyRelations: (UsinageObject object) => {},
        getId: (UsinageObject object) => object.id,
        setId: (UsinageObject object, int id) {
          object.id = id;
        },
        objectToFB: (UsinageObject object, fb.Builder fbb) {
          final unitetransformationnameOffset =
              fbb.writeString(object.unitetransformationname);
          final varietenameOffset = fbb.writeString(object.varietename);
          final observationOffset = fbb.writeString(object.observation);
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.date.millisecondsSinceEpoch);
          fbb.addInt64(2, object.heure_debut.millisecondsSinceEpoch);
          fbb.addInt64(3, object.heure_fin.millisecondsSinceEpoch);
          fbb.addFloat64(4, object.nombre_personne);
          fbb.addFloat64(5, object.taux);
          fbb.addInt64(6, object.unitetransformationid);
          fbb.addOffset(7, unitetransformationnameOffset);
          fbb.addInt64(8, object.varieteid);
          fbb.addOffset(9, varietenameOffset);
          fbb.addOffset(10, observationOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final heure_debutParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final heure_finParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0));
          final nombre_personneParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final tauxParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final unitetransformationidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final unitetransformationnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 18, '');
          final varieteidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final varietenameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 22, '');
          final observationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 24, '');
          final object = UsinageObject(
              id: idParam,
              date: dateParam,
              heure_debut: heure_debutParam,
              heure_fin: heure_finParam,
              nombre_personne: nombre_personneParam,
              taux: tauxParam,
              unitetransformationid: unitetransformationidParam,
              unitetransformationname: unitetransformationnameParam,
              varieteid: varieteidParam,
              varietename: varietenameParam,
              observation: observationParam);

          return object;
        }),
    UsinageProduitEntreeObject:
        obx_int.EntityDefinition<UsinageProduitEntreeObject>(
            model: _entities[66],
            toOneRelations: (UsinageProduitEntreeObject object) => [],
            toManyRelations: (UsinageProduitEntreeObject object) => {},
            getId: (UsinageProduitEntreeObject object) => object.id,
            setId: (UsinageProduitEntreeObject object, int id) {
              object.id = id;
            },
            objectToFB: (UsinageProduitEntreeObject object, fb.Builder fbb) {
              final produitentreenameOffset =
                  fbb.writeString(object.produitentreename);
              fbb.startTable(6);
              fbb.addInt64(0, object.id);
              fbb.addFloat64(1, object.quantite);
              fbb.addInt64(2, object.usinageid);
              fbb.addInt64(3, object.produitentreeid);
              fbb.addOffset(4, produitentreenameOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final quantiteParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 6, 0);
              final usinageidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
              final produitentreeidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
              final produitentreenameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 12, '');
              final object = UsinageProduitEntreeObject(
                  id: idParam,
                  quantite: quantiteParam,
                  usinageid: usinageidParam,
                  produitentreeid: produitentreeidParam,
                  produitentreename: produitentreenameParam);

              return object;
            }),
    UsinageProduitSortieObject:
        obx_int.EntityDefinition<UsinageProduitSortieObject>(
            model: _entities[67],
            toOneRelations: (UsinageProduitSortieObject object) => [],
            toManyRelations: (UsinageProduitSortieObject object) => {},
            getId: (UsinageProduitSortieObject object) => object.id,
            setId: (UsinageProduitSortieObject object, int id) {
              object.id = id;
            },
            objectToFB: (UsinageProduitSortieObject object, fb.Builder fbb) {
              final produitsortienameOffset =
                  fbb.writeString(object.produitsortiename);
              fbb.startTable(6);
              fbb.addInt64(0, object.id);
              fbb.addFloat64(1, object.quantite);
              fbb.addInt64(2, object.usinageid);
              fbb.addInt64(3, object.produitsortieid);
              fbb.addOffset(4, produitsortienameOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final quantiteParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 6, 0);
              final usinageidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
              final produitsortieidParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
              final produitsortienameParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGet(buffer, rootOffset, 12, '');
              final object = UsinageProduitSortieObject(
                  id: idParam,
                  quantite: quantiteParam,
                  usinageid: usinageidParam,
                  produitsortieid: produitsortieidParam,
                  produitsortiename: produitsortienameParam);

              return object;
            }),
    VarieteObject: obx_int.EntityDefinition<VarieteObject>(
        model: _entities[68],
        toOneRelations: (VarieteObject object) => [],
        toManyRelations: (VarieteObject object) => {},
        getId: (VarieteObject object) => object.id,
        setId: (VarieteObject object, int id) {
          object.id = id;
        },
        objectToFB: (VarieteObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final surface_uniteOffset = object.surface_unite == null
              ? null
              : fbb.writeString(object.surface_unite!);
          final quantite_uniteOffset = object.quantite_unite == null
              ? null
              : fbb.writeString(object.quantite_unite!);
          final produitnameOffset = fbb.writeString(object.produitname);
          final filierenameOffset = fbb.writeString(object.filierename);
          final familleemplacementnameOffset =
              fbb.writeString(object.familleemplacementname);
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, surface_uniteOffset);
          fbb.addOffset(3, quantite_uniteOffset);
          fbb.addFloat64(4, object.rendement_unite);
          fbb.addInt64(5, object.produitid);
          fbb.addOffset(6, produitnameOffset);
          fbb.addInt64(7, object.filiereid);
          fbb.addOffset(8, filierenameOffset);
          fbb.addInt64(9, object.familleemplacementid);
          fbb.addOffset(10, familleemplacementnameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final surface_uniteParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 8);
          final quantite_uniteParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10);
          final rendement_uniteParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 12);
          final produitidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final produitnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final filiereidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final filierenameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 20, '');
          final familleemplacementidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final familleemplacementnameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 24, '');
          final object = VarieteObject(
              id: idParam,
              name: nameParam,
              surface_unite: surface_uniteParam,
              quantite_unite: quantite_uniteParam,
              rendement_unite: rendement_uniteParam,
              produitid: produitidParam,
              produitname: produitnameParam,
              filiereid: filiereidParam,
              filierename: filierenameParam,
              familleemplacementid: familleemplacementidParam,
              familleemplacementname: familleemplacementnameParam);

          return object;
        }),
    MxFournisseurObject: obx_int.EntityDefinition<MxFournisseurObject>(
        model: _entities[69],
        toOneRelations: (MxFournisseurObject object) =>
            [object.mxSocieteObject],
        toManyRelations: (MxFournisseurObject object) => {},
        getId: (MxFournisseurObject object) => object.id,
        setId: (MxFournisseurObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxFournisseurObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final sigleOffset = fbb.writeString(object.sigle);
          final emailOffset = fbb.writeString(object.email);
          final telephoneOffset = fbb.writeString(object.telephone);
          final adresseOffset = fbb.writeString(object.adresse);
          final prenom_contactOffset = fbb.writeString(object.prenom_contact);
          final nom_contactOffset = fbb.writeString(object.nom_contact);
          final email_contactOffset = fbb.writeString(object.email_contact);
          final telephone_contactOffset =
              fbb.writeString(object.telephone_contact);
          fbb.startTable(13);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, sigleOffset);
          fbb.addOffset(3, emailOffset);
          fbb.addOffset(4, telephoneOffset);
          fbb.addOffset(5, adresseOffset);
          fbb.addOffset(6, prenom_contactOffset);
          fbb.addOffset(7, nom_contactOffset);
          fbb.addOffset(8, email_contactOffset);
          fbb.addOffset(9, telephone_contactOffset);
          fbb.addInt64(11, object.mxSocieteObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final sigleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final prenom_contactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final nom_contactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 18, '');
          final email_contactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 20, '');
          final telephone_contactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 22, '');
          final object = MxFournisseurObject(
              id: idParam,
              name: nameParam,
              sigle: sigleParam,
              email: emailParam,
              telephone: telephoneParam,
              adresse: adresseParam,
              prenom_contact: prenom_contactParam,
              nom_contact: nom_contactParam,
              email_contact: email_contactParam,
              telephone_contact: telephone_contactParam);
          object.mxSocieteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
          object.mxSocieteObject.attach(store);
          return object;
        }),
    MxAgenceObject: obx_int.EntityDefinition<MxAgenceObject>(
        model: _entities[70],
        toOneRelations: (MxAgenceObject object) =>
            [object.mxtypeRemboursementObject],
        toManyRelations: (MxAgenceObject object) => {
              obx_int.RelInfo<MxAgenceObject>.toMany(50, object.id):
                  object.mxcreditObjects,
              obx_int.RelInfo<MxAgenceObject>.toMany(51, object.id):
                  object.mxcreditsObjects,
              obx_int.RelInfo<MxAgenceObject>.toMany(66, object.id):
                  object.mxexploitationObjects
            },
        getId: (MxAgenceObject object) => object.id,
        setId: (MxAgenceObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxAgenceObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final sigleOffset = fbb.writeString(object.sigle);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, sigleOffset);
          fbb.addInt64(3, object.mxtypeRemboursementObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final sigleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              MxAgenceObject(id: idParam, name: nameParam, sigle: sigleParam);
          object.mxtypeRemboursementObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.mxtypeRemboursementObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxAgenceObject>(
              object.mxcreditObjects,
              store,
              obx_int.RelInfo<MxAgenceObject>.toMany(50, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxAgenceObject>(
              object.mxcreditsObjects,
              store,
              obx_int.RelInfo<MxAgenceObject>.toMany(51, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxAgenceObject>(
              object.mxexploitationObjects,
              store,
              obx_int.RelInfo<MxAgenceObject>.toMany(66, object.id));
          return object;
        }),
    MxPointAgenceObject: obx_int.EntityDefinition<MxPointAgenceObject>(
        model: _entities[71],
        toOneRelations: (MxPointAgenceObject object) => [],
        toManyRelations: (MxPointAgenceObject object) => {
              obx_int.RelInfo<MxPointAgenceObject>.toMany(53, object.id):
                  object.mxPointObjects,
              obx_int.RelInfo<MxPointAgenceObject>.toMany(54, object.id):
                  object.mxAgenceObjects
            },
        getId: (MxPointAgenceObject object) => object.id,
        setId: (MxPointAgenceObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxPointAgenceObject object, fb.Builder fbb) {
          fbb.startTable(2);
          fbb.addInt64(0, object.id);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final object = MxPointAgenceObject(id: idParam);
          obx_int.InternalToManyAccess.setRelInfo<MxPointAgenceObject>(
              object.mxPointObjects,
              store,
              obx_int.RelInfo<MxPointAgenceObject>.toMany(53, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxPointAgenceObject>(
              object.mxAgenceObjects,
              store,
              obx_int.RelInfo<MxPointAgenceObject>.toMany(54, object.id));
          return object;
        }),
    MxPointObject: obx_int.EntityDefinition<MxPointObject>(
        model: _entities[72],
        toOneRelations: (MxPointObject object) => [object.mxLocaliteObject],
        toManyRelations: (MxPointObject object) => {
              obx_int.RelInfo<MxPointObject>.toMany(55, object.id):
                  object.mxOpsObjects,
              obx_int.RelInfo<MxPointObject>.toMany(56, object.id):
                  object.mxUserPointsObjects,
              obx_int.RelInfo<MxPointObject>.toMany(57, object.id):
                  object.mxEntrepotsObjects,
              obx_int.RelInfo<MxPointObject>.toMany(58, object.id):
                  object.mxRemboursementsObjects,
              obx_int.RelInfo<MxPointObject>.toMany(61, object.id):
                  object.mxPointAgencesObjects
            },
        getId: (MxPointObject object) => object.id,
        setId: (MxPointObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxPointObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addBool(2, object.isProduit);
          fbb.addBool(3, object.isIntrant);
          fbb.addBool(4, object.isVirtuel);
          fbb.addInt64(5, object.mxLocaliteObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final isProduitParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final isIntrantParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final isVirtuelParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final object = MxPointObject(
              id: idParam,
              name: nameParam,
              isProduit: isProduitParam,
              isIntrant: isIntrantParam,
              isVirtuel: isVirtuelParam);
          object.mxLocaliteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          object.mxLocaliteObject.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<MxPointObject>(
              object.mxOpsObjects,
              store,
              obx_int.RelInfo<MxPointObject>.toMany(55, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxPointObject>(
              object.mxUserPointsObjects,
              store,
              obx_int.RelInfo<MxPointObject>.toMany(56, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxPointObject>(
              object.mxEntrepotsObjects,
              store,
              obx_int.RelInfo<MxPointObject>.toMany(57, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxPointObject>(
              object.mxRemboursementsObjects,
              store,
              obx_int.RelInfo<MxPointObject>.toMany(58, object.id));
          obx_int.InternalToManyAccess.setRelInfo<MxPointObject>(
              object.mxPointAgencesObjects,
              store,
              obx_int.RelInfo<MxPointObject>.toMany(61, object.id));
          return object;
        }),
    MxSocieteObject: obx_int.EntityDefinition<MxSocieteObject>(
        model: _entities[73],
        toOneRelations: (MxSocieteObject object) =>
            [object.mxtypeSocieteObject],
        toManyRelations: (MxSocieteObject object) => {},
        getId: (MxSocieteObject object) => object.id,
        setId: (MxSocieteObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxSocieteObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final sigleOffset = fbb.writeString(object.sigle);
          final emailOffset = fbb.writeString(object.email);
          final adresseOffset = fbb.writeString(object.adresse);
          final telephoneOffset = fbb.writeString(object.telephone);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, sigleOffset);
          fbb.addOffset(3, emailOffset);
          fbb.addOffset(4, adresseOffset);
          fbb.addOffset(5, telephoneOffset);
          fbb.addInt64(6, object.mxtypeSocieteObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final sigleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final adresseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final object = MxSocieteObject(
              id: idParam,
              name: nameParam,
              sigle: sigleParam,
              email: emailParam,
              adresse: adresseParam,
              telephone: telephoneParam);
          object.mxtypeSocieteObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.mxtypeSocieteObject.attach(store);
          return object;
        }),
    MxTypeSocieteObject: obx_int.EntityDefinition<MxTypeSocieteObject>(
        model: _entities[74],
        toOneRelations: (MxTypeSocieteObject object) => [],
        toManyRelations: (MxTypeSocieteObject object) => {},
        getId: (MxTypeSocieteObject object) => object.id,
        setId: (MxTypeSocieteObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxTypeSocieteObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = MxTypeSocieteObject(id: idParam, name: nameParam);

          return object;
        }),
    MxUserPointObject: obx_int.EntityDefinition<MxUserPointObject>(
        model: _entities[75],
        toOneRelations: (MxUserPointObject object) =>
            [object.mxUserObject, object.mxPointObject],
        toManyRelations: (MxUserPointObject object) => {},
        getId: (MxUserPointObject object) => object.id,
        setId: (MxUserPointObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxUserPointObject object, fb.Builder fbb) {
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.userId);
          fbb.addInt64(2, object.mxUserObject.targetId);
          fbb.addInt64(3, object.mxPointObject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final userIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final object = MxUserPointObject(id: idParam, userId: userIdParam);
          object.mxUserObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.mxUserObject.attach(store);
          object.mxPointObject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.mxPointObject.attach(store);
          return object;
        }),
    UserPointObject: obx_int.EntityDefinition<UserPointObject>(
        model: _entities[76],
        toOneRelations: (UserPointObject object) => [],
        toManyRelations: (UserPointObject object) => {},
        getId: (UserPointObject object) => object.id,
        setId: (UserPointObject object, int id) {
          object.id = id;
        },
        objectToFB: (UserPointObject object, fb.Builder fbb) {
          final pointnameOffset = fbb.writeString(object.pointname);
          fbb.startTable(11);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.userid);
          fbb.addInt64(8, object.pointid);
          fbb.addOffset(9, pointnameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final useridParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final pointidParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final pointnameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 22, '');
          final object = UserPointObject(
              id: idParam,
              userid: useridParam,
              pointid: pointidParam,
              pointname: pointnameParam);

          return object;
        }),
    MxModeEntreeSortieIntrantObject:
        obx_int.EntityDefinition<MxModeEntreeSortieIntrantObject>(
            model: _entities[77],
            toOneRelations: (MxModeEntreeSortieIntrantObject object) =>
                [object.mxtypemouvementintrantObject],
            toManyRelations: (MxModeEntreeSortieIntrantObject object) => {
                  obx_int.RelInfo<MxModeEntreeSortieIntrantObject>.toMany(
                      60, object.id): object.mxmouvementintrantsObjects
                },
            getId: (MxModeEntreeSortieIntrantObject object) => object.id,
            setId: (MxModeEntreeSortieIntrantObject object, int id) {
              object.id = id;
            },
            objectToFB:
                (MxModeEntreeSortieIntrantObject object, fb.Builder fbb) {
              final codeOffset = fbb.writeString(object.code);
              final nameOffset = fbb.writeString(object.name);
              fbb.startTable(5);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, codeOffset);
              fbb.addOffset(2, nameOffset);
              fbb.addInt64(3, object.mxtypemouvementintrantObject.targetId);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final codeParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final nameParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
              final object = MxModeEntreeSortieIntrantObject(
                  id: idParam, code: codeParam, name: nameParam);
              object.mxtypemouvementintrantObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
              object.mxtypemouvementintrantObject.attach(store);
              obx_int.InternalToManyAccess.setRelInfo<
                      MxModeEntreeSortieIntrantObject>(
                  object.mxmouvementintrantsObjects,
                  store,
                  obx_int.RelInfo<MxModeEntreeSortieIntrantObject>.toMany(
                      60, object.id));
              return object;
            }),
    MxMouvementIntrantObject:
        obx_int.EntityDefinition<MxMouvementIntrantObject>(
            model: _entities[78],
            toOneRelations: (MxMouvementIntrantObject object) => [
                  object.mxanneeObject,
                  object.mxsaisonObject,
                  object.mxemballageObject,
                  object.mxopObject,
                  object.mxfournisseurObject,
                  object.mxunitetransformationObject,
                  object.mxvarieteObject,
                  object.mxmodeentreesortiestockObject,
                  object.mxemplacementObject,
                  object.mxemplacementSourceObject,
                  object.mxemplacementDestinationObject
                ],
            toManyRelations: (MxMouvementIntrantObject object) => {},
            getId: (MxMouvementIntrantObject object) => object.id,
            setId: (MxMouvementIntrantObject object, int id) {
              object.id = id;
            },
            objectToFB: (MxMouvementIntrantObject object, fb.Builder fbb) {
              final lotOffset = fbb.writeString(object.lot);
              fbb.startTable(20);
              fbb.addInt64(0, object.id);
              fbb.addInt64(1, object.date.millisecondsSinceEpoch);
              fbb.addFloat64(2, object.pu);
              fbb.addFloat64(3, object.quantiteEntreeEmballage);
              fbb.addFloat64(4, object.quantiteSortieEmballage);
              fbb.addFloat64(5, object.nombreUnite);
              fbb.addFloat64(6, object.valeur);
              fbb.addOffset(7, lotOffset);
              fbb.addInt64(8, object.mxanneeObject.targetId);
              fbb.addInt64(9, object.mxsaisonObject.targetId);
              fbb.addInt64(10, object.mxemballageObject.targetId);
              fbb.addInt64(11, object.mxopObject.targetId);
              fbb.addInt64(12, object.mxfournisseurObject.targetId);
              fbb.addInt64(13, object.mxunitetransformationObject.targetId);
              fbb.addInt64(14, object.mxvarieteObject.targetId);
              fbb.addInt64(15, object.mxmodeentreesortiestockObject.targetId);
              fbb.addInt64(16, object.mxemplacementObject.targetId);
              fbb.addInt64(17, object.mxemplacementSourceObject.targetId);
              fbb.addInt64(18, object.mxemplacementDestinationObject.targetId);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final dateParam = DateTime.fromMillisecondsSinceEpoch(
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
              final puParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 8, 0);
              final quantiteEntreeEmballageParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
              final quantiteSortieEmballageParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
              final nombreUniteParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
              final valeurParam =
                  const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0);
              final lotParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 18, '');
              final object = MxMouvementIntrantObject(
                  id: idParam,
                  date: dateParam,
                  pu: puParam,
                  quantiteEntreeEmballage: quantiteEntreeEmballageParam,
                  quantiteSortieEmballage: quantiteSortieEmballageParam,
                  nombreUnite: nombreUniteParam,
                  valeur: valeurParam,
                  lot: lotParam);
              object.mxanneeObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
              object.mxanneeObject.attach(store);
              object.mxsaisonObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
              object.mxsaisonObject.attach(store);
              object.mxemballageObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
              object.mxemballageObject.attach(store);
              object.mxopObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
              object.mxopObject.attach(store);
              object.mxfournisseurObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0);
              object.mxfournisseurObject.attach(store);
              object.mxunitetransformationObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 30, 0);
              object.mxunitetransformationObject.attach(store);
              object.mxvarieteObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 32, 0);
              object.mxvarieteObject.attach(store);
              object.mxmodeentreesortiestockObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 34, 0);
              object.mxmodeentreesortiestockObject.attach(store);
              object.mxemplacementObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 36, 0);
              object.mxemplacementObject.attach(store);
              object.mxemplacementSourceObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 38, 0);
              object.mxemplacementSourceObject.attach(store);
              object.mxemplacementDestinationObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 40, 0);
              object.mxemplacementDestinationObject.attach(store);
              return object;
            }),
    MxTypeMouvementIntrantObject: obx_int.EntityDefinition<
            MxTypeMouvementIntrantObject>(
        model: _entities[79],
        toOneRelations: (MxTypeMouvementIntrantObject object) => [],
        toManyRelations: (MxTypeMouvementIntrantObject object) => {
              obx_int.RelInfo<MxTypeMouvementIntrantObject>.toMany(
                  62, object.id): object.mxmodeEntreeSortieIntrantObjects
            },
        getId: (MxTypeMouvementIntrantObject object) => object.id,
        setId: (MxTypeMouvementIntrantObject object, int id) {
          object.id = id;
        },
        objectToFB: (MxTypeMouvementIntrantObject object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object =
              MxTypeMouvementIntrantObject(id: idParam, name: nameParam);
          obx_int.InternalToManyAccess.setRelInfo<MxTypeMouvementIntrantObject>(
              object.mxmodeEntreeSortieIntrantObjects,
              store,
              obx_int.RelInfo<MxTypeMouvementIntrantObject>.toMany(
                  62, object.id));
          return object;
        }),
    MxProduitChargeExploitationObject:
        obx_int.EntityDefinition<MxProduitChargeExploitationObject>(
            model: _entities[80],
            toOneRelations: (MxProduitChargeExploitationObject object) =>
                [object.mxChargeExploitationObject, object.mxProduitObject],
            toManyRelations: (MxProduitChargeExploitationObject object) => {},
            getId: (MxProduitChargeExploitationObject object) => object.id,
            setId: (MxProduitChargeExploitationObject object, int id) {
              object.id = id;
            },
            objectToFB:
                (MxProduitChargeExploitationObject object, fb.Builder fbb) {
              fbb.startTable(4);
              fbb.addInt64(0, object.id);
              fbb.addInt64(1, object.mxChargeExploitationObject.targetId);
              fbb.addInt64(2, object.mxProduitObject.targetId);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final object = MxProduitChargeExploitationObject(id: idParam);
              object.mxChargeExploitationObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
              object.mxChargeExploitationObject.attach(store);
              object.mxProduitObject.targetId =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
              object.mxProduitObject.attach(store);
              return object;
            })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AnneeObject] entity fields to define ObjectBox queries.
class AnneeObject_ {
  /// see [AnneeObject.id]
  static final id =
      obx.QueryIntegerProperty<AnneeObject>(_entities[0].properties[0]);

  /// see [AnneeObject.value]
  static final value =
      obx.QueryIntegerProperty<AnneeObject>(_entities[0].properties[1]);

  /// see [AnneeObject.name]
  static final name =
      obx.QueryStringProperty<AnneeObject>(_entities[0].properties[2]);
}

/// [ChargeExploitationObject] entity fields to define ObjectBox queries.
class ChargeExploitationObject_ {
  /// see [ChargeExploitationObject.id]
  static final id = obx.QueryIntegerProperty<ChargeExploitationObject>(
      _entities[1].properties[0]);

  /// see [ChargeExploitationObject.name]
  static final name = obx.QueryStringProperty<ChargeExploitationObject>(
      _entities[1].properties[1]);

  /// see [ChargeExploitationObject.unite]
  static final unite = obx.QueryStringProperty<ChargeExploitationObject>(
      _entities[1].properties[2]);

  /// see [ChargeExploitationObject.pu]
  static final pu = obx.QueryDoubleProperty<ChargeExploitationObject>(
      _entities[1].properties[3]);

  /// see [ChargeExploitationObject.quantite_unite_superficie]
  static final quantite_unite_superficie =
      obx.QueryDoubleProperty<ChargeExploitationObject>(
          _entities[1].properties[4]);

  /// see [ChargeExploitationObject.produitid]
  static final produitid = obx.QueryIntegerProperty<ChargeExploitationObject>(
      _entities[1].properties[5]);

  /// see [ChargeExploitationObject.produitname]
  static final produitname = obx.QueryStringProperty<ChargeExploitationObject>(
      _entities[1].properties[6]);

  /// see [ChargeExploitationObject.famillechargeexploitationid]
  static final famillechargeexploitationid =
      obx.QueryIntegerProperty<ChargeExploitationObject>(
          _entities[1].properties[7]);

  /// see [ChargeExploitationObject.famillechargeexploitationname]
  static final famillechargeexploitationname =
      obx.QueryStringProperty<ChargeExploitationObject>(
          _entities[1].properties[8]);

  /// see [ChargeExploitationObject.typechargeexploitationid]
  static final typechargeexploitationid =
      obx.QueryIntegerProperty<ChargeExploitationObject>(
          _entities[1].properties[9]);

  /// see [ChargeExploitationObject.typechargeexploitationname]
  static final typechargeexploitationname =
      obx.QueryStringProperty<ChargeExploitationObject>(
          _entities[1].properties[10]);

  /// see [ChargeExploitationObject.is_achat]
  static final is_achat = obx.QueryBooleanProperty<ChargeExploitationObject>(
      _entities[1].properties[11]);
}

/// [EmballageObject] entity fields to define ObjectBox queries.
class EmballageObject_ {
  /// see [EmballageObject.id]
  static final id =
      obx.QueryIntegerProperty<EmballageObject>(_entities[2].properties[0]);

  /// see [EmballageObject.name]
  static final name =
      obx.QueryStringProperty<EmballageObject>(_entities[2].properties[1]);

  /// see [EmballageObject.conditionnement]
  static final conditionnement =
      obx.QueryStringProperty<EmballageObject>(_entities[2].properties[2]);

  /// see [EmballageObject.is_actif]
  static final is_actif =
      obx.QueryBooleanProperty<EmballageObject>(_entities[2].properties[3]);

  /// see [EmballageObject.quantite]
  static final quantite =
      obx.QueryDoubleProperty<EmballageObject>(_entities[2].properties[4]);

  /// see [EmballageObject.produitid]
  static final produitid =
      obx.QueryIntegerProperty<EmballageObject>(_entities[2].properties[5]);

  /// see [EmballageObject.produitname]
  static final produitname =
      obx.QueryStringProperty<EmballageObject>(_entities[2].properties[6]);

  /// see [EmballageObject.typeemballageid]
  static final typeemballageid =
      obx.QueryIntegerProperty<EmballageObject>(_entities[2].properties[7]);

  /// see [EmballageObject.typeemballagename]
  static final typeemballagename =
      obx.QueryStringProperty<EmballageObject>(_entities[2].properties[8]);

  /// see [EmballageObject.unitegrandeurid]
  static final unitegrandeurid =
      obx.QueryIntegerProperty<EmballageObject>(_entities[2].properties[9]);

  /// see [EmballageObject.typeunitegrandeurname]
  static final typeunitegrandeurname =
      obx.QueryStringProperty<EmballageObject>(_entities[2].properties[10]);

  /// see [EmballageObject.valeur]
  static final valeur =
      obx.QueryDoubleProperty<EmballageObject>(_entities[2].properties[11]);

  /// see [EmballageObject.is_default]
  static final is_default =
      obx.QueryBooleanProperty<EmballageObject>(_entities[2].properties[12]);
}

/// [EtapeObject] entity fields to define ObjectBox queries.
class EtapeObject_ {
  /// see [EtapeObject.id]
  static final id =
      obx.QueryIntegerProperty<EtapeObject>(_entities[3].properties[0]);

  /// see [EtapeObject.name]
  static final name =
      obx.QueryStringProperty<EtapeObject>(_entities[3].properties[1]);

  /// see [EtapeObject.typetransformationid]
  static final typetransformationid =
      obx.QueryIntegerProperty<EtapeObject>(_entities[3].properties[2]);

  /// see [EtapeObject.typetransformationname]
  static final typetransformationname =
      obx.QueryStringProperty<EtapeObject>(_entities[3].properties[3]);

  /// see [EtapeObject.produitopid]
  static final produitopid =
      obx.QueryIntegerProperty<EtapeObject>(_entities[3].properties[4]);

  /// see [EtapeObject.produitname]
  static final produitname =
      obx.QueryStringProperty<EtapeObject>(_entities[3].properties[5]);
}

/// [ExploitationChargeExploitationObject] entity fields to define ObjectBox queries.
class ExploitationChargeExploitationObject_ {
  /// see [ExploitationChargeExploitationObject.id]
  static final id =
      obx.QueryIntegerProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[0]);

  /// see [ExploitationChargeExploitationObject.exploitationchargeexploitationid]
  static final exploitationchargeexploitationid =
      obx.QueryIntegerProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[1]);

  /// see [ExploitationChargeExploitationObject.date]
  static final date =
      obx.QueryDateProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[2]);

  /// see [ExploitationChargeExploitationObject.unite]
  static final unite =
      obx.QueryStringProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[3]);

  /// see [ExploitationChargeExploitationObject.pu]
  static final pu =
      obx.QueryDoubleProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[4]);

  /// see [ExploitationChargeExploitationObject.quantite]
  static final quantite =
      obx.QueryDoubleProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[5]);

  /// see [ExploitationChargeExploitationObject.valeur]
  static final valeur =
      obx.QueryDoubleProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[6]);

  /// see [ExploitationChargeExploitationObject.observation]
  static final observation =
      obx.QueryStringProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[7]);

  /// see [ExploitationChargeExploitationObject.chargeexploitationid]
  static final chargeexploitationid =
      obx.QueryIntegerProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[8]);

  /// see [ExploitationChargeExploitationObject.chargeexploitationname]
  static final chargeexploitationname =
      obx.QueryStringProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[9]);

  /// see [ExploitationChargeExploitationObject.typechargeexploitationid]
  static final typechargeexploitationid =
      obx.QueryIntegerProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[10]);

  /// see [ExploitationChargeExploitationObject.typechargeexploitationname]
  static final typechargeexploitationname =
      obx.QueryStringProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[11]);

  /// see [ExploitationChargeExploitationObject.famillechargeexploitationid]
  static final famillechargeexploitationid =
      obx.QueryIntegerProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[12]);

  /// see [ExploitationChargeExploitationObject.famillechargeexploitationname]
  static final famillechargeexploitationname =
      obx.QueryStringProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[13]);

  /// see [ExploitationChargeExploitationObject.exploitationid]
  static final exploitationid =
      obx.QueryIntegerProperty<ExploitationChargeExploitationObject>(
          _entities[4].properties[14]);
}

/// [ExploitationObject] entity fields to define ObjectBox queries.
class ExploitationObject_ {
  /// see [ExploitationObject.id]
  static final id =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[0]);

  /// see [ExploitationObject.exploitation_id]
  static final exploitation_id =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[1]);

  /// see [ExploitationObject.compte]
  static final compte =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[2]);

  /// see [ExploitationObject.date]
  static final date =
      obx.QueryDateProperty<ExploitationObject>(_entities[5].properties[3]);

  /// see [ExploitationObject.unite]
  static final unite =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[4]);

  /// see [ExploitationObject.production_prevision]
  static final production_prevision =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[5]);

  /// see [ExploitationObject.surface_prevision]
  static final surface_prevision =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[6]);

  /// see [ExploitationObject.pu_prevision]
  static final pu_prevision =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[7]);

  /// see [ExploitationObject.varieteprevisionid]
  static final varieteprevisionid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[8]);

  /// see [ExploitationObject.varieteprevisionname]
  static final varieteprevisionname =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[9]);

  /// see [ExploitationObject.production]
  static final production =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[10]);

  /// see [ExploitationObject.surface]
  static final surface =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[11]);

  /// see [ExploitationObject.pu]
  static final pu =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[12]);

  /// see [ExploitationObject.varieteid]
  static final varieteid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[13]);

  /// see [ExploitationObject.varietename]
  static final varietename =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[14]);

  /// see [ExploitationObject.produitid]
  static final produitid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[15]);

  /// see [ExploitationObject.produitname]
  static final produitname =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[16]);

  /// see [ExploitationObject.filiereid]
  static final filiereid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[17]);

  /// see [ExploitationObject.filierename]
  static final filierename =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[18]);

  /// see [ExploitationObject.anneeid]
  static final anneeid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[19]);

  /// see [ExploitationObject.anneename]
  static final anneename =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[20]);

  /// see [ExploitationObject.saisonid]
  static final saisonid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[21]);

  /// see [ExploitationObject.saisonname]
  static final saisonname =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[22]);

  /// see [ExploitationObject.varietepu]
  static final varietepu =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[23]);

  /// see [ExploitationObject.emballageid]
  static final emballageid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[24]);

  /// see [ExploitationObject.emballagename]
  static final emballagename =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[25]);

  /// see [ExploitationObject.emballagequantite]
  static final emballagequantite =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[26]);

  /// see [ExploitationObject.emballagepu]
  static final emballagepu =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[27]);

  /// see [ExploitationObject.emballagetypeemballageid]
  static final emballagetypeemballageid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[28]);

  /// see [ExploitationObject.emballagetypeemballagename]
  static final emballagetypeemballagename =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[29]);

  /// see [ExploitationObject.emballageunitegrandeurid]
  static final emballageunitegrandeurid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[30]);

  /// see [ExploitationObject.emballageunitegrandeurname]
  static final emballageunitegrandeurname =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[31]);

  /// see [ExploitationObject.emballageunitevaleurreference]
  static final emballageunitevaleurreference =
      obx.QueryDoubleProperty<ExploitationObject>(_entities[5].properties[32]);

  /// see [ExploitationObject.producteurid]
  static final producteurid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[33]);

  /// see [ExploitationObject.prenom]
  static final prenom =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[34]);

  /// see [ExploitationObject.nom]
  static final nom =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[35]);

  /// see [ExploitationObject.opid]
  static final opid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[36]);

  /// see [ExploitationObject.opname]
  static final opname =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[37]);

  /// see [ExploitationObject.typeopid]
  static final typeopid =
      obx.QueryIntegerProperty<ExploitationObject>(_entities[5].properties[38]);

  /// see [ExploitationObject.typeopname]
  static final typeopname =
      obx.QueryStringProperty<ExploitationObject>(_entities[5].properties[39]);
}

/// [FamilleChargeExploitationObject] entity fields to define ObjectBox queries.
class FamilleChargeExploitationObject_ {
  /// see [FamilleChargeExploitationObject.id]
  static final id = obx.QueryIntegerProperty<FamilleChargeExploitationObject>(
      _entities[6].properties[0]);

  /// see [FamilleChargeExploitationObject.name]
  static final name = obx.QueryStringProperty<FamilleChargeExploitationObject>(
      _entities[6].properties[1]);
}

/// [FiliereObject] entity fields to define ObjectBox queries.
class FiliereObject_ {
  /// see [FiliereObject.id]
  static final id =
      obx.QueryIntegerProperty<FiliereObject>(_entities[7].properties[0]);

  /// see [FiliereObject.name]
  static final name =
      obx.QueryStringProperty<FiliereObject>(_entities[7].properties[1]);
}

/// [GroupObject] entity fields to define ObjectBox queries.
class GroupObject_ {
  /// see [GroupObject.id]
  static final id =
      obx.QueryIntegerProperty<GroupObject>(_entities[8].properties[0]);

  /// see [GroupObject.name]
  static final name =
      obx.QueryStringProperty<GroupObject>(_entities[8].properties[1]);
}

/// [MxAnneeObject] entity fields to define ObjectBox queries.
class MxAnneeObject_ {
  /// see [MxAnneeObject.id]
  static final id =
      obx.QueryIntegerProperty<MxAnneeObject>(_entities[9].properties[0]);

  /// see [MxAnneeObject.name]
  static final name =
      obx.QueryStringProperty<MxAnneeObject>(_entities[9].properties[1]);

  /// see [MxAnneeObject.valeur]
  static final valeur =
      obx.QueryIntegerProperty<MxAnneeObject>(_entities[9].properties[2]);

  /// see [MxAnneeObject.mxExploitationObjects]
  static final mxExploitationObjects =
      obx.QueryRelationToMany<MxAnneeObject, MxExploitationObject>(
          _entities[9].relations[0]);

  /// see [MxAnneeObject.mxmouvementstocksObjects]
  static final mxmouvementstocksObjects =
      obx.QueryRelationToMany<MxAnneeObject, MxMouvementStockObject>(
          _entities[9].relations[1]);
}

/// [MxCampagneObject] entity fields to define ObjectBox queries.
class MxCampagneObject_ {
  /// see [MxCampagneObject.id]
  static final id =
      obx.QueryIntegerProperty<MxCampagneObject>(_entities[10].properties[0]);

  /// see [MxCampagneObject.mxanneeObject]
  static final mxanneeObject =
      obx.QueryRelationToOne<MxCampagneObject, MxAnneeObject>(
          _entities[10].properties[1]);

  /// see [MxCampagneObject.mxsaisonObject]
  static final mxsaisonObject =
      obx.QueryRelationToOne<MxCampagneObject, MxSaisonObject>(
          _entities[10].properties[2]);
}

/// [MxChargeExploitationObject] entity fields to define ObjectBox queries.
class MxChargeExploitationObject_ {
  /// see [MxChargeExploitationObject.id]
  static final id = obx.QueryIntegerProperty<MxChargeExploitationObject>(
      _entities[11].properties[0]);

  /// see [MxChargeExploitationObject.name]
  static final name = obx.QueryStringProperty<MxChargeExploitationObject>(
      _entities[11].properties[1]);

  /// see [MxChargeExploitationObject.unite]
  static final unite = obx.QueryStringProperty<MxChargeExploitationObject>(
      _entities[11].properties[2]);

  /// see [MxChargeExploitationObject.pu]
  static final pu = obx.QueryDoubleProperty<MxChargeExploitationObject>(
      _entities[11].properties[3]);

  /// see [MxChargeExploitationObject.quantite_unite_superficie]
  static final quantite_unite_superficie =
      obx.QueryDoubleProperty<MxChargeExploitationObject>(
          _entities[11].properties[4]);

  /// see [MxChargeExploitationObject.isAchat]
  static final isAchat = obx.QueryBooleanProperty<MxChargeExploitationObject>(
      _entities[11].properties[5]);

  /// see [MxChargeExploitationObject.mxtypeChargeExploitationObject]
  static final mxtypeChargeExploitationObject = obx.QueryRelationToOne<
      MxChargeExploitationObject,
      MxTypeChargeExploitationObject>(_entities[11].properties[6]);

  /// see [MxChargeExploitationObject.mxfamilleChargeExploitationObject]
  static final mxfamilleChargeExploitationObject = obx.QueryRelationToOne<
      MxChargeExploitationObject,
      MxFamilleChargeExploitationObject>(_entities[11].properties[7]);

  /// see [MxChargeExploitationObject.isProduit]
  static final isProduit = obx.QueryBooleanProperty<MxChargeExploitationObject>(
      _entities[11].properties[8]);

  /// see [MxChargeExploitationObject.isIntrant]
  static final isIntrant = obx.QueryBooleanProperty<MxChargeExploitationObject>(
      _entities[11].properties[9]);

  /// see [MxChargeExploitationObject.mxunitegrandeurObject]
  static final mxunitegrandeurObject =
      obx.QueryRelationToOne<MxChargeExploitationObject, MxUniteGrandeurObject>(
          _entities[11].properties[10]);

  /// see [MxChargeExploitationObject.mxexploitationChargeExploitationObjects]
  static final mxexploitationChargeExploitationObjects =
      obx.QueryRelationToMany<MxChargeExploitationObject,
          MxExploitationChargeExploitationObject>(_entities[11].relations[0]);

  /// see [MxChargeExploitationObject.mxProduitChargeExploitationObjects]
  static final mxProduitChargeExploitationObjects = obx.QueryRelationToMany<
      MxChargeExploitationObject,
      MxProduitChargeExploitationObject>(_entities[11].relations[1]);
}

/// [MxCommentObject] entity fields to define ObjectBox queries.
class MxCommentObject_ {
  /// see [MxCommentObject.id]
  static final id =
      obx.QueryIntegerProperty<MxCommentObject>(_entities[12].properties[0]);

  /// see [MxCommentObject.content]
  static final content =
      obx.QueryStringProperty<MxCommentObject>(_entities[12].properties[1]);

  /// see [MxCommentObject.mxpostObject]
  static final mxpostObject =
      obx.QueryRelationToOne<MxCommentObject, MxPostObject>(
          _entities[12].properties[2]);
}

/// [MxCreditObject] entity fields to define ObjectBox queries.
class MxCreditObject_ {
  /// see [MxCreditObject.id]
  static final id =
      obx.QueryIntegerProperty<MxCreditObject>(_entities[13].properties[0]);

  /// see [MxCreditObject.date]
  static final date =
      obx.QueryDateProperty<MxCreditObject>(_entities[13].properties[1]);

  /// see [MxCreditObject.capital]
  static final capital =
      obx.QueryDoubleProperty<MxCreditObject>(_entities[13].properties[2]);

  /// see [MxCreditObject.interet]
  static final interet =
      obx.QueryDoubleProperty<MxCreditObject>(_entities[13].properties[3]);

  /// see [MxCreditObject.moratoire]
  static final moratoire =
      obx.QueryDoubleProperty<MxCreditObject>(_entities[13].properties[4]);

  /// see [MxCreditObject.autres_engagements]
  static final autres_engagements =
      obx.QueryDoubleProperty<MxCreditObject>(_entities[13].properties[5]);

  /// see [MxCreditObject.mxExploitationObject]
  static final mxExploitationObject =
      obx.QueryRelationToOne<MxCreditObject, MxExploitationObject>(
          _entities[13].properties[6]);

  /// see [MxCreditObject.mxagenceObject]
  static final mxagenceObject =
      obx.QueryRelationToOne<MxCreditObject, MxAgenceObject>(
          _entities[13].properties[7]);
}

/// [MxEmballageObject] entity fields to define ObjectBox queries.
class MxEmballageObject_ {
  /// see [MxEmballageObject.id]
  static final id =
      obx.QueryIntegerProperty<MxEmballageObject>(_entities[14].properties[0]);

  /// see [MxEmballageObject.name]
  static final name =
      obx.QueryStringProperty<MxEmballageObject>(_entities[14].properties[1]);

  /// see [MxEmballageObject.conditionnement]
  static final conditionnement =
      obx.QueryStringProperty<MxEmballageObject>(_entities[14].properties[2]);

  /// see [MxEmballageObject.quantite]
  static final quantite =
      obx.QueryDoubleProperty<MxEmballageObject>(_entities[14].properties[3]);

  /// see [MxEmballageObject.pu]
  static final pu =
      obx.QueryDoubleProperty<MxEmballageObject>(_entities[14].properties[4]);

  /// see [MxEmballageObject.valeur]
  static final valeur =
      obx.QueryDoubleProperty<MxEmballageObject>(_entities[14].properties[5]);

  /// see [MxEmballageObject.isActive]
  static final isActive =
      obx.QueryBooleanProperty<MxEmballageObject>(_entities[14].properties[6]);

  /// see [MxEmballageObject.isDefault]
  static final isDefault =
      obx.QueryBooleanProperty<MxEmballageObject>(_entities[14].properties[7]);

  /// see [MxEmballageObject.mxProduitObject]
  static final mxProduitObject =
      obx.QueryRelationToOne<MxEmballageObject, MxProduitObject>(
          _entities[14].properties[8]);

  /// see [MxEmballageObject.mxUniteGrandeurObject]
  static final mxUniteGrandeurObject =
      obx.QueryRelationToOne<MxEmballageObject, MxUniteGrandeurObject>(
          _entities[14].properties[9]);

  /// see [MxEmballageObject.mxTypeEmballageObject]
  static final mxTypeEmballageObject =
      obx.QueryRelationToOne<MxEmballageObject, MxTypeEmballageObject>(
          _entities[14].properties[10]);

  /// see [MxEmballageObject.mxExploitationObjects]
  static final mxExploitationObjects =
      obx.QueryRelationToMany<MxEmballageObject, MxExploitationObject>(
          _entities[14].relations[0]);

  /// see [MxEmballageObject.mxEmballageObjects]
  static final mxEmballageObjects =
      obx.QueryRelationToMany<MxEmballageObject, MxEmballageObject>(
          _entities[14].relations[1]);
}

/// [MxEmplacementObject] entity fields to define ObjectBox queries.
class MxEmplacementObject_ {
  /// see [MxEmplacementObject.id]
  static final id = obx.QueryIntegerProperty<MxEmplacementObject>(
      _entities[15].properties[0]);

  /// see [MxEmplacementObject.name]
  static final name =
      obx.QueryStringProperty<MxEmplacementObject>(_entities[15].properties[1]);

  /// see [MxEmplacementObject.capacite]
  static final capacite =
      obx.QueryDoubleProperty<MxEmplacementObject>(_entities[15].properties[2]);

  /// see [MxEmplacementObject.mxentrepotObject]
  static final mxentrepotObject =
      obx.QueryRelationToOne<MxEmplacementObject, MxEntrepotObject>(
          _entities[15].properties[3]);

  /// see [MxEmplacementObject.mxfamilleemplacementObject]
  static final mxfamilleemplacementObject =
      obx.QueryRelationToOne<MxEmplacementObject, MxFamilleEmplacementObject>(
          _entities[15].properties[4]);

  /// see [MxEmplacementObject.code]
  static final code = obx.QueryIntegerProperty<MxEmplacementObject>(
      _entities[15].properties[5]);

  /// see [MxEmplacementObject.mxmouvementstockObjects]
  static final mxmouvementstockObjects =
      obx.QueryRelationToMany<MxEmplacementObject, MxMouvementStockObject>(
          _entities[15].relations[0]);
}

/// [MxEntrepotObject] entity fields to define ObjectBox queries.
class MxEntrepotObject_ {
  /// see [MxEntrepotObject.id]
  static final id =
      obx.QueryIntegerProperty<MxEntrepotObject>(_entities[16].properties[0]);

  /// see [MxEntrepotObject.name]
  static final name =
      obx.QueryStringProperty<MxEntrepotObject>(_entities[16].properties[1]);

  /// see [MxEntrepotObject.adresse]
  static final adresse =
      obx.QueryStringProperty<MxEntrepotObject>(_entities[16].properties[2]);

  /// see [MxEntrepotObject.mxpointObject]
  static final mxpointObject =
      obx.QueryRelationToOne<MxEntrepotObject, MxPointObject>(
          _entities[16].properties[3]);

  /// see [MxEntrepotObject.mxemplacementObjects]
  static final mxemplacementObjects =
      obx.QueryRelationToMany<MxEntrepotObject, MxEmplacementObject>(
          _entities[16].relations[0]);
}

/// [MxExploitationChargeExploitationObject] entity fields to define ObjectBox queries.
class MxExploitationChargeExploitationObject_ {
  /// see [MxExploitationChargeExploitationObject.id]
  static final id =
      obx.QueryIntegerProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[0]);

  /// see [MxExploitationChargeExploitationObject.pu]
  static final pu =
      obx.QueryDoubleProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[1]);

  /// see [MxExploitationChargeExploitationObject.quantite]
  static final quantite =
      obx.QueryDoubleProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[2]);

  /// see [MxExploitationChargeExploitationObject.valeur]
  static final valeur =
      obx.QueryDoubleProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[3]);

  /// see [MxExploitationChargeExploitationObject.unite]
  static final unite =
      obx.QueryStringProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[4]);

  /// see [MxExploitationChargeExploitationObject.date]
  static final date =
      obx.QueryDateProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[5]);

  /// see [MxExploitationChargeExploitationObject.observation]
  static final observation =
      obx.QueryStringProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[6]);

  /// see [MxExploitationChargeExploitationObject.createdAt]
  static final createdAt =
      obx.QueryDateProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[7]);

  /// see [MxExploitationChargeExploitationObject.updatedAt]
  static final updatedAt =
      obx.QueryDateProperty<MxExploitationChargeExploitationObject>(
          _entities[17].properties[8]);

  /// see [MxExploitationChargeExploitationObject.mxexploitation]
  static final mxexploitation = obx.QueryRelationToOne<
      MxExploitationChargeExploitationObject,
      MxExploitationObject>(_entities[17].properties[9]);

  /// see [MxExploitationChargeExploitationObject.mxchargeexploitationObject]
  static final mxchargeexploitationObject = obx.QueryRelationToOne<
      MxExploitationChargeExploitationObject,
      MxChargeExploitationObject>(_entities[17].properties[10]);
}

/// [MxExploitationObject] entity fields to define ObjectBox queries.
class MxExploitationObject_ {
  /// see [MxExploitationObject.id]
  static final id = obx.QueryIntegerProperty<MxExploitationObject>(
      _entities[18].properties[0]);

  /// see [MxExploitationObject.compte]
  static final compte = obx.QueryIntegerProperty<MxExploitationObject>(
      _entities[18].properties[1]);

  /// see [MxExploitationObject.date]
  static final date =
      obx.QueryDateProperty<MxExploitationObject>(_entities[18].properties[2]);

  /// see [MxExploitationObject.unite]
  static final unite = obx.QueryStringProperty<MxExploitationObject>(
      _entities[18].properties[3]);

  /// see [MxExploitationObject.surface]
  static final surface = obx.QueryDoubleProperty<MxExploitationObject>(
      _entities[18].properties[4]);

  /// see [MxExploitationObject.createdAt]
  static final createdAt =
      obx.QueryDateProperty<MxExploitationObject>(_entities[18].properties[5]);

  /// see [MxExploitationObject.updatedAt]
  static final updatedAt =
      obx.QueryDateProperty<MxExploitationObject>(_entities[18].properties[6]);

  /// see [MxExploitationObject.mxvarieteObject]
  static final mxvarieteObject =
      obx.QueryRelationToOne<MxExploitationObject, MxVarieteObject>(
          _entities[18].properties[7]);

  /// see [MxExploitationObject.mxanneeObject]
  static final mxanneeObject =
      obx.QueryRelationToOne<MxExploitationObject, MxAnneeObject>(
          _entities[18].properties[8]);

  /// see [MxExploitationObject.mxsaisonObject]
  static final mxsaisonObject =
      obx.QueryRelationToOne<MxExploitationObject, MxSaisonObject>(
          _entities[18].properties[9]);

  /// see [MxExploitationObject.mxproducteurObject]
  static final mxproducteurObject =
      obx.QueryRelationToOne<MxExploitationObject, MxProducteurObject>(
          _entities[18].properties[10]);

  /// see [MxExploitationObject.mxopObject]
  static final mxopObject =
      obx.QueryRelationToOne<MxExploitationObject, MxOpObject>(
          _entities[18].properties[11]);

  /// see [MxExploitationObject.mxagenceObject]
  static final mxagenceObject =
      obx.QueryRelationToOne<MxExploitationObject, MxAgenceObject>(
          _entities[18].properties[12]);

  /// see [MxExploitationObject.mxexploitationChargeExploitationObjects]
  static final mxexploitationChargeExploitationObjects =
      obx.QueryRelationToMany<MxExploitationObject,
          MxExploitationChargeExploitationObject>(_entities[18].relations[0]);

  /// see [MxExploitationObject.mxrecoltesObjects]
  static final mxrecoltesObjects =
      obx.QueryRelationToMany<MxExploitationObject, MxRecolteObject>(
          _entities[18].relations[1]);

  /// see [MxExploitationObject.mxcreditsObjects]
  static final mxcreditsObjects =
      obx.QueryRelationToMany<MxExploitationObject, MxCreditObject>(
          _entities[18].relations[2]);
}

/// [MxFamilleChargeExploitationObject] entity fields to define ObjectBox queries.
class MxFamilleChargeExploitationObject_ {
  /// see [MxFamilleChargeExploitationObject.id]
  static final id = obx.QueryIntegerProperty<MxFamilleChargeExploitationObject>(
      _entities[19].properties[0]);

  /// see [MxFamilleChargeExploitationObject.name]
  static final name =
      obx.QueryStringProperty<MxFamilleChargeExploitationObject>(
          _entities[19].properties[1]);

  /// see [MxFamilleChargeExploitationObject.mxchargeExploitationObjects]
  static final mxchargeExploitationObjects = obx.QueryRelationToMany<
      MxFamilleChargeExploitationObject,
      MxChargeExploitationObject>(_entities[19].relations[0]);
}

/// [MxFamilleEmplacementObject] entity fields to define ObjectBox queries.
class MxFamilleEmplacementObject_ {
  /// see [MxFamilleEmplacementObject.id]
  static final id = obx.QueryIntegerProperty<MxFamilleEmplacementObject>(
      _entities[20].properties[0]);

  /// see [MxFamilleEmplacementObject.name]
  static final name = obx.QueryStringProperty<MxFamilleEmplacementObject>(
      _entities[20].properties[1]);

  /// see [MxFamilleEmplacementObject.mxProduitObjects]
  static final mxProduitObjects =
      obx.QueryRelationToMany<MxFamilleEmplacementObject, MxProduitObject>(
          _entities[20].relations[0]);
}

/// [MxFiliereObject] entity fields to define ObjectBox queries.
class MxFiliereObject_ {
  /// see [MxFiliereObject.id]
  static final id =
      obx.QueryIntegerProperty<MxFiliereObject>(_entities[21].properties[0]);

  /// see [MxFiliereObject.name]
  static final name =
      obx.QueryStringProperty<MxFiliereObject>(_entities[21].properties[1]);

  /// see [MxFiliereObject.mxProduitObjects]
  static final mxProduitObjects =
      obx.QueryRelationToMany<MxFiliereObject, MxProduitObject>(
          _entities[21].relations[0]);
}

/// [MxLocaliteObject] entity fields to define ObjectBox queries.
class MxLocaliteObject_ {
  /// see [MxLocaliteObject.id]
  static final id =
      obx.QueryIntegerProperty<MxLocaliteObject>(_entities[22].properties[0]);

  /// see [MxLocaliteObject.name]
  static final name =
      obx.QueryStringProperty<MxLocaliteObject>(_entities[22].properties[1]);

  /// see [MxLocaliteObject.mxSousZoneObject]
  static final mxSousZoneObject =
      obx.QueryRelationToOne<MxLocaliteObject, MxSousZoneObject>(
          _entities[22].properties[2]);

  /// see [MxLocaliteObject.mxVillagesObjects]
  static final mxVillagesObjects =
      obx.QueryRelationToMany<MxLocaliteObject, MxVillageObject>(
          _entities[22].relations[0]);

  /// see [MxLocaliteObject.mxOpsObjects]
  static final mxOpsObjects =
      obx.QueryRelationToMany<MxLocaliteObject, MxOpObject>(
          _entities[22].relations[1]);

  /// see [MxLocaliteObject.mxPointObjects]
  static final mxPointObjects =
      obx.QueryRelationToMany<MxLocaliteObject, MxPointObject>(
          _entities[22].relations[2]);
}

/// [MxModeEntreeSortieStockObject] entity fields to define ObjectBox queries.
class MxModeEntreeSortieStockObject_ {
  /// see [MxModeEntreeSortieStockObject.id]
  static final id = obx.QueryIntegerProperty<MxModeEntreeSortieStockObject>(
      _entities[23].properties[0]);

  /// see [MxModeEntreeSortieStockObject.code]
  static final code = obx.QueryStringProperty<MxModeEntreeSortieStockObject>(
      _entities[23].properties[1]);

  /// see [MxModeEntreeSortieStockObject.name]
  static final name = obx.QueryStringProperty<MxModeEntreeSortieStockObject>(
      _entities[23].properties[2]);

  /// see [MxModeEntreeSortieStockObject.mxtypemouvementstockObject]
  static final mxtypemouvementstockObject = obx.QueryRelationToOne<
      MxModeEntreeSortieStockObject,
      MxTypeMouvementStockObject>(_entities[23].properties[3]);

  /// see [MxModeEntreeSortieStockObject.mxmouvementstocksObjects]
  static final mxmouvementstocksObjects = obx.QueryRelationToMany<
      MxModeEntreeSortieStockObject,
      MxMouvementStockObject>(_entities[23].relations[0]);
}

/// [MxMouvementStockObject] entity fields to define ObjectBox queries.
class MxMouvementStockObject_ {
  /// see [MxMouvementStockObject.id]
  static final id = obx.QueryIntegerProperty<MxMouvementStockObject>(
      _entities[24].properties[0]);

  /// see [MxMouvementStockObject.date]
  static final date = obx.QueryDateProperty<MxMouvementStockObject>(
      _entities[24].properties[1]);

  /// see [MxMouvementStockObject.pu]
  static final pu = obx.QueryDoubleProperty<MxMouvementStockObject>(
      _entities[24].properties[2]);

  /// see [MxMouvementStockObject.quantiteEntreeEmballage]
  static final quantiteEntreeEmballage =
      obx.QueryDoubleProperty<MxMouvementStockObject>(
          _entities[24].properties[3]);

  /// see [MxMouvementStockObject.quantiteSortieEmballage]
  static final quantiteSortieEmballage =
      obx.QueryDoubleProperty<MxMouvementStockObject>(
          _entities[24].properties[4]);

  /// see [MxMouvementStockObject.nombreUnite]
  static final nombreUnite = obx.QueryDoubleProperty<MxMouvementStockObject>(
      _entities[24].properties[5]);

  /// see [MxMouvementStockObject.valeur]
  static final valeur = obx.QueryDoubleProperty<MxMouvementStockObject>(
      _entities[24].properties[6]);

  /// see [MxMouvementStockObject.mxanneeObject]
  static final mxanneeObject =
      obx.QueryRelationToOne<MxMouvementStockObject, MxAnneeObject>(
          _entities[24].properties[7]);

  /// see [MxMouvementStockObject.mxsaisonObject]
  static final mxsaisonObject =
      obx.QueryRelationToOne<MxMouvementStockObject, MxSaisonObject>(
          _entities[24].properties[8]);

  /// see [MxMouvementStockObject.mxemballageObject]
  static final mxemballageObject =
      obx.QueryRelationToOne<MxMouvementStockObject, MxEmballageObject>(
          _entities[24].properties[9]);

  /// see [MxMouvementStockObject.mxopObject]
  static final mxopObject =
      obx.QueryRelationToOne<MxMouvementStockObject, MxOpObject>(
          _entities[24].properties[10]);

  /// see [MxMouvementStockObject.mxunitetransformationObject]
  static final mxunitetransformationObject = obx.QueryRelationToOne<
      MxMouvementStockObject,
      MxUniteTransformationObject>(_entities[24].properties[11]);

  /// see [MxMouvementStockObject.mxvarieteObject]
  static final mxvarieteObject =
      obx.QueryRelationToOne<MxMouvementStockObject, MxVarieteObject>(
          _entities[24].properties[12]);

  /// see [MxMouvementStockObject.mxmodeentreesortiestockObject]
  static final mxmodeentreesortiestockObject = obx.QueryRelationToOne<
      MxMouvementStockObject,
      MxModeEntreeSortieStockObject>(_entities[24].properties[13]);

  /// see [MxMouvementStockObject.mxemplacementObject]
  static final mxemplacementObject =
      obx.QueryRelationToOne<MxMouvementStockObject, MxEmplacementObject>(
          _entities[24].properties[14]);

  /// see [MxMouvementStockObject.lot]
  static final lot = obx.QueryStringProperty<MxMouvementStockObject>(
      _entities[24].properties[15]);

  /// see [MxMouvementStockObject.isSended]
  static final isSended = obx.QueryBooleanProperty<MxMouvementStockObject>(
      _entities[24].properties[16]);

  /// see [MxMouvementStockObject.dateSended]
  static final dateSended = obx.QueryDateProperty<MxMouvementStockObject>(
      _entities[24].properties[17]);
}

/// [MxOpObject] entity fields to define ObjectBox queries.
class MxOpObject_ {
  /// see [MxOpObject.id]
  static final id =
      obx.QueryIntegerProperty<MxOpObject>(_entities[25].properties[0]);

  /// see [MxOpObject.name]
  static final name =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[1]);

  /// see [MxOpObject.mxTypeOpObject]
  static final mxTypeOpObject =
      obx.QueryRelationToOne<MxOpObject, MxTypeOpObject>(
          _entities[25].properties[2]);

  /// see [MxOpObject.mxLocaliteObject]
  static final mxLocaliteObject =
      obx.QueryRelationToOne<MxOpObject, MxLocaliteObject>(
          _entities[25].properties[3]);

  /// see [MxOpObject.mxVillageObject]
  static final mxVillageObject =
      obx.QueryRelationToOne<MxOpObject, MxVillageObject>(
          _entities[25].properties[4]);

  /// see [MxOpObject.mxPointObject]
  static final mxPointObject =
      obx.QueryRelationToOne<MxOpObject, MxPointObject>(
          _entities[25].properties[5]);

  /// see [MxOpObject.sigle]
  static final sigle =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[6]);

  /// see [MxOpObject.email]
  static final email =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[7]);

  /// see [MxOpObject.telephone]
  static final telephone =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[8]);

  /// see [MxOpObject.adresse]
  static final adresse =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[9]);

  /// see [MxOpObject.prenom_contact]
  static final prenom_contact =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[10]);

  /// see [MxOpObject.nom_contact]
  static final nom_contact =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[11]);

  /// see [MxOpObject.email_contact]
  static final email_contact =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[12]);

  /// see [MxOpObject.telephone_contact]
  static final telephone_contact =
      obx.QueryStringProperty<MxOpObject>(_entities[25].properties[13]);

  /// see [MxOpObject.mxProducteursObjects]
  static final mxProducteursObjects =
      obx.QueryRelationToMany<MxOpObject, MxProducteurObject>(
          _entities[25].relations[0]);

  /// see [MxOpObject.mxUserOpsObjects]
  static final mxUserOpsObjects =
      obx.QueryRelationToMany<MxOpObject, MxUserOpObject>(
          _entities[25].relations[1]);

  /// see [MxOpObject.mxExploitationObjects]
  static final mxExploitationObjects =
      obx.QueryRelationToMany<MxOpObject, MxExploitationObject>(
          _entities[25].relations[2]);

  /// see [MxOpObject.mxmouvementstocksObjects]
  static final mxmouvementstocksObjects =
      obx.QueryRelationToMany<MxOpObject, MxMouvementStockObject>(
          _entities[25].relations[3]);
}

/// [MxPaysObject] entity fields to define ObjectBox queries.
class MxPaysObject_ {
  /// see [MxPaysObject.id]
  static final id =
      obx.QueryIntegerProperty<MxPaysObject>(_entities[26].properties[0]);

  /// see [MxPaysObject.name]
  static final name =
      obx.QueryStringProperty<MxPaysObject>(_entities[26].properties[1]);

  /// see [MxPaysObject.sigle]
  static final sigle =
      obx.QueryStringProperty<MxPaysObject>(_entities[26].properties[2]);

  /// see [MxPaysObject.mxZonesObjects]
  static final mxZonesObjects =
      obx.QueryRelationToMany<MxPaysObject, MxZoneObject>(
          _entities[26].relations[0]);
}

/// [MxPostObject] entity fields to define ObjectBox queries.
class MxPostObject_ {
  /// see [MxPostObject.id]
  static final id =
      obx.QueryIntegerProperty<MxPostObject>(_entities[27].properties[0]);

  /// see [MxPostObject.title]
  static final title =
      obx.QueryStringProperty<MxPostObject>(_entities[27].properties[1]);

  /// see [MxPostObject.body]
  static final body =
      obx.QueryStringProperty<MxPostObject>(_entities[27].properties[2]);

  /// see [MxPostObject.mxcommentsObjects]
  static final mxcommentsObjects =
      obx.QueryRelationToMany<MxPostObject, MxCommentObject>(
          _entities[27].relations[0]);
}

/// [MxProducteurObject] entity fields to define ObjectBox queries.
class MxProducteurObject_ {
  /// see [MxProducteurObject.id]
  static final id =
      obx.QueryIntegerProperty<MxProducteurObject>(_entities[28].properties[0]);

  /// see [MxProducteurObject.compte]
  static final compte =
      obx.QueryIntegerProperty<MxProducteurObject>(_entities[28].properties[1]);

  /// see [MxProducteurObject.prenom]
  static final prenom =
      obx.QueryStringProperty<MxProducteurObject>(_entities[28].properties[2]);

  /// see [MxProducteurObject.nom]
  static final nom =
      obx.QueryStringProperty<MxProducteurObject>(_entities[28].properties[3]);

  /// see [MxProducteurObject.cni]
  static final cni =
      obx.QueryStringProperty<MxProducteurObject>(_entities[28].properties[4]);

  /// see [MxProducteurObject.email]
  static final email =
      obx.QueryStringProperty<MxProducteurObject>(_entities[28].properties[5]);

  /// see [MxProducteurObject.telephone]
  static final telephone =
      obx.QueryStringProperty<MxProducteurObject>(_entities[28].properties[6]);

  /// see [MxProducteurObject.adresse]
  static final adresse =
      obx.QueryStringProperty<MxProducteurObject>(_entities[28].properties[7]);

  /// see [MxProducteurObject.isActive]
  static final isActive =
      obx.QueryBooleanProperty<MxProducteurObject>(_entities[28].properties[8]);

  /// see [MxProducteurObject.mxOpObject]
  static final mxOpObject =
      obx.QueryRelationToOne<MxProducteurObject, MxOpObject>(
          _entities[28].properties[9]);

  /// see [MxProducteurObject.mxExploitationObjects]
  static final mxExploitationObjects =
      obx.QueryRelationToMany<MxProducteurObject, MxExploitationObject>(
          _entities[28].relations[0]);
}

/// [MxProduitObject] entity fields to define ObjectBox queries.
class MxProduitObject_ {
  /// see [MxProduitObject.id]
  static final id =
      obx.QueryIntegerProperty<MxProduitObject>(_entities[29].properties[0]);

  /// see [MxProduitObject.name]
  static final name =
      obx.QueryStringProperty<MxProduitObject>(_entities[29].properties[1]);

  /// see [MxProduitObject.isDerive]
  static final isDerive =
      obx.QueryBooleanProperty<MxProduitObject>(_entities[29].properties[2]);

  /// see [MxProduitObject.isEnsachage]
  static final isEnsachage =
      obx.QueryBooleanProperty<MxProduitObject>(_entities[29].properties[3]);

  /// see [MxProduitObject.isActive]
  static final isActive =
      obx.QueryBooleanProperty<MxProduitObject>(_entities[29].properties[4]);

  /// see [MxProduitObject.mxFiliereObject]
  static final mxFiliereObject =
      obx.QueryRelationToOne<MxProduitObject, MxFiliereObject>(
          _entities[29].properties[5]);

  /// see [MxProduitObject.mxFamilleEmplacementObject]
  static final mxFamilleEmplacementObject =
      obx.QueryRelationToOne<MxProduitObject, MxFamilleEmplacementObject>(
          _entities[29].properties[6]);

  /// see [MxProduitObject.mxChargeExploitationObjects]
  static final mxChargeExploitationObjects =
      obx.QueryRelationToMany<MxProduitObject, MxChargeExploitationObject>(
          _entities[29].relations[0]);

  /// see [MxProduitObject.mxVarieteObjects]
  static final mxVarieteObjects =
      obx.QueryRelationToMany<MxProduitObject, MxVarieteObject>(
          _entities[29].relations[1]);

  /// see [MxProduitObject.mxEmballageObjects]
  static final mxEmballageObjects =
      obx.QueryRelationToMany<MxProduitObject, MxEmballageObject>(
          _entities[29].relations[2]);

  /// see [MxProduitObject.mxProduitChargeExploitationObjects]
  static final mxProduitChargeExploitationObjects = obx.QueryRelationToMany<
      MxProduitObject,
      MxProduitChargeExploitationObject>(_entities[29].relations[3]);
}

/// [MxRecolteObject] entity fields to define ObjectBox queries.
class MxRecolteObject_ {
  /// see [MxRecolteObject.id]
  static final id =
      obx.QueryIntegerProperty<MxRecolteObject>(_entities[30].properties[0]);

  /// see [MxRecolteObject.date]
  static final date =
      obx.QueryDateProperty<MxRecolteObject>(_entities[30].properties[1]);

  /// see [MxRecolteObject.pu]
  static final pu =
      obx.QueryDoubleProperty<MxRecolteObject>(_entities[30].properties[2]);

  /// see [MxRecolteObject.nombre_unite]
  static final nombre_unite =
      obx.QueryDoubleProperty<MxRecolteObject>(_entities[30].properties[3]);

  /// see [MxRecolteObject.nombre_emballage]
  static final nombre_emballage =
      obx.QueryDoubleProperty<MxRecolteObject>(_entities[30].properties[4]);

  /// see [MxRecolteObject.valeur]
  static final valeur =
      obx.QueryDoubleProperty<MxRecolteObject>(_entities[30].properties[5]);

  /// see [MxRecolteObject.mxvarieteObject]
  static final mxvarieteObject =
      obx.QueryRelationToOne<MxRecolteObject, MxVarieteObject>(
          _entities[30].properties[6]);

  /// see [MxRecolteObject.mxExploitationObject]
  static final mxExploitationObject =
      obx.QueryRelationToOne<MxRecolteObject, MxExploitationObject>(
          _entities[30].properties[7]);

  /// see [MxRecolteObject.mxemballageObject]
  static final mxemballageObject =
      obx.QueryRelationToOne<MxRecolteObject, MxEmballageObject>(
          _entities[30].properties[8]);
}

/// [MxRemboursementObject] entity fields to define ObjectBox queries.
class MxRemboursementObject_ {
  /// see [MxRemboursementObject.id]
  static final id = obx.QueryIntegerProperty<MxRemboursementObject>(
      _entities[31].properties[0]);

  /// see [MxRemboursementObject.date]
  static final date =
      obx.QueryDateProperty<MxRemboursementObject>(_entities[31].properties[1]);

  /// see [MxRemboursementObject.pu]
  static final pu = obx.QueryDoubleProperty<MxRemboursementObject>(
      _entities[31].properties[2]);

  /// see [MxRemboursementObject.nombre_unite]
  static final nombre_unite = obx.QueryDoubleProperty<MxRemboursementObject>(
      _entities[31].properties[3]);

  /// see [MxRemboursementObject.nombre_emballage]
  static final nombre_emballage =
      obx.QueryDoubleProperty<MxRemboursementObject>(
          _entities[31].properties[4]);

  /// see [MxRemboursementObject.valeur]
  static final valeur = obx.QueryDoubleProperty<MxRemboursementObject>(
      _entities[31].properties[5]);

  /// see [MxRemboursementObject.mxTypeRemboursementObject]
  static final mxTypeRemboursementObject =
      obx.QueryRelationToOne<MxRemboursementObject, MxTypeRemboursementObject>(
          _entities[31].properties[6]);

  /// see [MxRemboursementObject.mxVarieteObject]
  static final mxVarieteObject =
      obx.QueryRelationToOne<MxRemboursementObject, MxVarieteObject>(
          _entities[31].properties[7]);

  /// see [MxRemboursementObject.mxExploitationObject]
  static final mxExploitationObject =
      obx.QueryRelationToOne<MxRemboursementObject, MxExploitationObject>(
          _entities[31].properties[8]);

  /// see [MxRemboursementObject.mxEmballageObject]
  static final mxEmballageObject =
      obx.QueryRelationToOne<MxRemboursementObject, MxEmballageObject>(
          _entities[31].properties[9]);

  /// see [MxRemboursementObject.mxPointObject]
  static final mxPointObject =
      obx.QueryRelationToOne<MxRemboursementObject, MxPointObject>(
          _entities[31].properties[10]);
}

/// [MxRoleObject] entity fields to define ObjectBox queries.
class MxRoleObject_ {
  /// see [MxRoleObject.id]
  static final id =
      obx.QueryIntegerProperty<MxRoleObject>(_entities[32].properties[0]);

  /// see [MxRoleObject.name]
  static final name =
      obx.QueryStringProperty<MxRoleObject>(_entities[32].properties[1]);

  /// see [MxRoleObject.mxuserObjects]
  static final mxuserObjects =
      obx.QueryRelationToMany<MxRoleObject, MxUserObject>(
          _entities[32].relations[0]);
}

/// [MxSaisonObject] entity fields to define ObjectBox queries.
class MxSaisonObject_ {
  /// see [MxSaisonObject.id]
  static final id =
      obx.QueryIntegerProperty<MxSaisonObject>(_entities[33].properties[0]);

  /// see [MxSaisonObject.name]
  static final name =
      obx.QueryStringProperty<MxSaisonObject>(_entities[33].properties[1]);

  /// see [MxSaisonObject.description]
  static final description =
      obx.QueryStringProperty<MxSaisonObject>(_entities[33].properties[2]);

  /// see [MxSaisonObject.mxExploitationObjects]
  static final mxExploitationObjects =
      obx.QueryRelationToMany<MxSaisonObject, MxExploitationObject>(
          _entities[33].relations[0]);

  /// see [MxSaisonObject.mxmouvementstocksObjects]
  static final mxmouvementstocksObjects =
      obx.QueryRelationToMany<MxSaisonObject, MxMouvementStockObject>(
          _entities[33].relations[1]);
}

/// [MxSousZoneObject] entity fields to define ObjectBox queries.
class MxSousZoneObject_ {
  /// see [MxSousZoneObject.id]
  static final id =
      obx.QueryIntegerProperty<MxSousZoneObject>(_entities[34].properties[0]);

  /// see [MxSousZoneObject.name]
  static final name =
      obx.QueryStringProperty<MxSousZoneObject>(_entities[34].properties[1]);

  /// see [MxSousZoneObject.mxZoneObject]
  static final mxZoneObject =
      obx.QueryRelationToOne<MxSousZoneObject, MxZoneObject>(
          _entities[34].properties[2]);

  /// see [MxSousZoneObject.mxLocalitesObjects]
  static final mxLocalitesObjects =
      obx.QueryRelationToMany<MxSousZoneObject, MxLocaliteObject>(
          _entities[34].relations[0]);
}

/// [MxTypeChargeExploitationObject] entity fields to define ObjectBox queries.
class MxTypeChargeExploitationObject_ {
  /// see [MxTypeChargeExploitationObject.id]
  static final id = obx.QueryIntegerProperty<MxTypeChargeExploitationObject>(
      _entities[35].properties[0]);

  /// see [MxTypeChargeExploitationObject.name]
  static final name = obx.QueryStringProperty<MxTypeChargeExploitationObject>(
      _entities[35].properties[1]);

  /// see [MxTypeChargeExploitationObject.mxchargeExploitationObjects]
  static final mxchargeExploitationObjects = obx.QueryRelationToMany<
      MxTypeChargeExploitationObject,
      MxChargeExploitationObject>(_entities[35].relations[0]);
}

/// [MxTypeEmballageObject] entity fields to define ObjectBox queries.
class MxTypeEmballageObject_ {
  /// see [MxTypeEmballageObject.id]
  static final id = obx.QueryIntegerProperty<MxTypeEmballageObject>(
      _entities[36].properties[0]);

  /// see [MxTypeEmballageObject.name]
  static final name = obx.QueryStringProperty<MxTypeEmballageObject>(
      _entities[36].properties[1]);

  /// see [MxTypeEmballageObject.mxEmballageObjects]
  static final mxEmballageObjects =
      obx.QueryRelationToMany<MxTypeEmballageObject, MxEmballageObject>(
          _entities[36].relations[0]);
}

/// [MxTypeMouvementStockObject] entity fields to define ObjectBox queries.
class MxTypeMouvementStockObject_ {
  /// see [MxTypeMouvementStockObject.id]
  static final id = obx.QueryIntegerProperty<MxTypeMouvementStockObject>(
      _entities[37].properties[0]);

  /// see [MxTypeMouvementStockObject.name]
  static final name = obx.QueryStringProperty<MxTypeMouvementStockObject>(
      _entities[37].properties[1]);

  /// see [MxTypeMouvementStockObject.mxmodeentreesortiestockObjects]
  static final mxmodeentreesortiestockObjects = obx.QueryRelationToMany<
      MxTypeMouvementStockObject,
      MxModeEntreeSortieStockObject>(_entities[37].relations[0]);
}

/// [MxTypeOpObject] entity fields to define ObjectBox queries.
class MxTypeOpObject_ {
  /// see [MxTypeOpObject.id]
  static final id =
      obx.QueryIntegerProperty<MxTypeOpObject>(_entities[38].properties[0]);

  /// see [MxTypeOpObject.name]
  static final name =
      obx.QueryStringProperty<MxTypeOpObject>(_entities[38].properties[1]);

  /// see [MxTypeOpObject.mxOpObjects]
  static final mxOpObjects =
      obx.QueryRelationToMany<MxTypeOpObject, MxOpObject>(
          _entities[38].relations[0]);
}

/// [MxTypeRemboursementObject] entity fields to define ObjectBox queries.
class MxTypeRemboursementObject_ {
  /// see [MxTypeRemboursementObject.id]
  static final id = obx.QueryIntegerProperty<MxTypeRemboursementObject>(
      _entities[39].properties[0]);

  /// see [MxTypeRemboursementObject.name]
  static final name = obx.QueryStringProperty<MxTypeRemboursementObject>(
      _entities[39].properties[1]);

  /// see [MxTypeRemboursementObject.mxremboursementObjects]
  static final mxremboursementObjects =
      obx.QueryRelationToMany<MxTypeRemboursementObject, MxRemboursementObject>(
          _entities[39].relations[0]);
}

/// [MxTypeUniteGrandeurObject] entity fields to define ObjectBox queries.
class MxTypeUniteGrandeurObject_ {
  /// see [MxTypeUniteGrandeurObject.id]
  static final id = obx.QueryIntegerProperty<MxTypeUniteGrandeurObject>(
      _entities[40].properties[0]);

  /// see [MxTypeUniteGrandeurObject.name]
  static final name = obx.QueryStringProperty<MxTypeUniteGrandeurObject>(
      _entities[40].properties[1]);

  /// see [MxTypeUniteGrandeurObject.mxUniteGrandeurObjects]
  static final mxUniteGrandeurObjects =
      obx.QueryRelationToMany<MxTypeUniteGrandeurObject, MxUniteGrandeurObject>(
          _entities[40].relations[0]);
}

/// [MxUniteGrandeurObject] entity fields to define ObjectBox queries.
class MxUniteGrandeurObject_ {
  /// see [MxUniteGrandeurObject.id]
  static final id = obx.QueryIntegerProperty<MxUniteGrandeurObject>(
      _entities[41].properties[0]);

  /// see [MxUniteGrandeurObject.name]
  static final name = obx.QueryStringProperty<MxUniteGrandeurObject>(
      _entities[41].properties[1]);

  /// see [MxUniteGrandeurObject.mxTypeUniteGrandeurObject]
  static final mxTypeUniteGrandeurObject =
      obx.QueryRelationToOne<MxUniteGrandeurObject, MxTypeUniteGrandeurObject>(
          _entities[41].properties[2]);

  /// see [MxUniteGrandeurObject.mxEmballageObjects]
  static final mxEmballageObjects =
      obx.QueryRelationToMany<MxUniteGrandeurObject, MxEmballageObject>(
          _entities[41].relations[0]);
}

/// [MxUniteTransformationObject] entity fields to define ObjectBox queries.
class MxUniteTransformationObject_ {
  /// see [MxUniteTransformationObject.id]
  static final id = obx.QueryIntegerProperty<MxUniteTransformationObject>(
      _entities[42].properties[0]);

  /// see [MxUniteTransformationObject.name]
  static final name = obx.QueryStringProperty<MxUniteTransformationObject>(
      _entities[42].properties[1]);

  /// see [MxUniteTransformationObject.sigle]
  static final sigle = obx.QueryStringProperty<MxUniteTransformationObject>(
      _entities[42].properties[2]);

  /// see [MxUniteTransformationObject.adresse]
  static final adresse = obx.QueryStringProperty<MxUniteTransformationObject>(
      _entities[42].properties[3]);

  /// see [MxUniteTransformationObject.telephone]
  static final telephone = obx.QueryStringProperty<MxUniteTransformationObject>(
      _entities[42].properties[4]);

  /// see [MxUniteTransformationObject.mxmouvementstockObjects]
  static final mxmouvementstockObjects = obx.QueryRelationToMany<
      MxUniteTransformationObject,
      MxMouvementStockObject>(_entities[42].relations[0]);
}

/// [MxUserObject] entity fields to define ObjectBox queries.
class MxUserObject_ {
  /// see [MxUserObject.id]
  static final id =
      obx.QueryIntegerProperty<MxUserObject>(_entities[43].properties[0]);

  /// see [MxUserObject.token]
  static final token =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[1]);

  /// see [MxUserObject.email]
  static final email =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[2]);

  /// see [MxUserObject.username]
  static final username =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[3]);

  /// see [MxUserObject.password]
  static final password =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[4]);

  /// see [MxUserObject.firstname]
  static final firstname =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[5]);

  /// see [MxUserObject.lastname]
  static final lastname =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[6]);

  /// see [MxUserObject.phone]
  static final phone =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[7]);

  /// see [MxUserObject.address]
  static final address =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[8]);

  /// see [MxUserObject.roleId]
  static final roleId =
      obx.QueryIntegerProperty<MxUserObject>(_entities[43].properties[9]);

  /// see [MxUserObject.roleName]
  static final roleName =
      obx.QueryStringProperty<MxUserObject>(_entities[43].properties[10]);

  /// see [MxUserObject.mxroleObject]
  static final mxroleObject =
      obx.QueryRelationToOne<MxUserObject, MxRoleObject>(
          _entities[43].properties[11]);

  /// see [MxUserObject.mxuserPermissionObjects]
  static final mxuserPermissionObjects =
      obx.QueryRelationToMany<MxUserObject, MxUserPermissionObject>(
          _entities[43].relations[0]);

  /// see [MxUserObject.mxUserOpsObjects]
  static final mxUserOpsObjects =
      obx.QueryRelationToMany<MxUserObject, MxUserOpObject>(
          _entities[43].relations[1]);
}

/// [MxUserOpObject] entity fields to define ObjectBox queries.
class MxUserOpObject_ {
  /// see [MxUserOpObject.id]
  static final id =
      obx.QueryIntegerProperty<MxUserOpObject>(_entities[44].properties[0]);

  /// see [MxUserOpObject.userId]
  static final userId =
      obx.QueryIntegerProperty<MxUserOpObject>(_entities[44].properties[1]);

  /// see [MxUserOpObject.mxUserObject]
  static final mxUserObject =
      obx.QueryRelationToOne<MxUserOpObject, MxUserOpObject>(
          _entities[44].properties[2]);

  /// see [MxUserOpObject.mxOpObject]
  static final mxOpObject = obx.QueryRelationToOne<MxUserOpObject, MxOpObject>(
      _entities[44].properties[3]);
}

/// [MxUserPermissionObject] entity fields to define ObjectBox queries.
class MxUserPermissionObject_ {
  /// see [MxUserPermissionObject.id]
  static final id = obx.QueryIntegerProperty<MxUserPermissionObject>(
      _entities[45].properties[0]);

  /// see [MxUserPermissionObject.name]
  static final name = obx.QueryStringProperty<MxUserPermissionObject>(
      _entities[45].properties[1]);

  /// see [MxUserPermissionObject.mxuserObject]
  static final mxuserObject =
      obx.QueryRelationToOne<MxUserPermissionObject, MxUserObject>(
          _entities[45].properties[2]);
}

/// [MxVarieteObject] entity fields to define ObjectBox queries.
class MxVarieteObject_ {
  /// see [MxVarieteObject.id]
  static final id =
      obx.QueryIntegerProperty<MxVarieteObject>(_entities[46].properties[0]);

  /// see [MxVarieteObject.name]
  static final name =
      obx.QueryStringProperty<MxVarieteObject>(_entities[46].properties[1]);

  /// see [MxVarieteObject.surface_unite]
  static final surface_unite =
      obx.QueryStringProperty<MxVarieteObject>(_entities[46].properties[2]);

  /// see [MxVarieteObject.quantite_unite]
  static final quantite_unite =
      obx.QueryStringProperty<MxVarieteObject>(_entities[46].properties[3]);

  /// see [MxVarieteObject.pu_unite]
  static final pu_unite =
      obx.QueryDoubleProperty<MxVarieteObject>(_entities[46].properties[4]);

  /// see [MxVarieteObject.rendement_unite]
  static final rendement_unite =
      obx.QueryDoubleProperty<MxVarieteObject>(_entities[46].properties[5]);

  /// see [MxVarieteObject.isActive]
  static final isActive =
      obx.QueryBooleanProperty<MxVarieteObject>(_entities[46].properties[6]);

  /// see [MxVarieteObject.mxProduitObject]
  static final mxProduitObject =
      obx.QueryRelationToOne<MxVarieteObject, MxProduitObject>(
          _entities[46].properties[7]);

  /// see [MxVarieteObject.mxExploitationObjects]
  static final mxExploitationObjects =
      obx.QueryRelationToMany<MxVarieteObject, MxExploitationObject>(
          _entities[46].relations[0]);

  /// see [MxVarieteObject.mxmouvementstocksObjects]
  static final mxmouvementstocksObjects =
      obx.QueryRelationToMany<MxVarieteObject, MxMouvementStockObject>(
          _entities[46].relations[1]);
}

/// [MxVillageObject] entity fields to define ObjectBox queries.
class MxVillageObject_ {
  /// see [MxVillageObject.id]
  static final id =
      obx.QueryIntegerProperty<MxVillageObject>(_entities[47].properties[0]);

  /// see [MxVillageObject.name]
  static final name =
      obx.QueryStringProperty<MxVillageObject>(_entities[47].properties[1]);

  /// see [MxVillageObject.mxLocaliteObject]
  static final mxLocaliteObject =
      obx.QueryRelationToOne<MxVillageObject, MxLocaliteObject>(
          _entities[47].properties[2]);

  /// see [MxVillageObject.mxOpsObjects]
  static final mxOpsObjects =
      obx.QueryRelationToMany<MxVillageObject, MxOpObject>(
          _entities[47].relations[0]);
}

/// [MxZoneObject] entity fields to define ObjectBox queries.
class MxZoneObject_ {
  /// see [MxZoneObject.id]
  static final id =
      obx.QueryIntegerProperty<MxZoneObject>(_entities[48].properties[0]);

  /// see [MxZoneObject.name]
  static final name =
      obx.QueryStringProperty<MxZoneObject>(_entities[48].properties[1]);

  /// see [MxZoneObject.mxPaysObject]
  static final mxPaysObject =
      obx.QueryRelationToOne<MxZoneObject, MxPaysObject>(
          _entities[48].properties[2]);

  /// see [MxZoneObject.mxSousZonesObjects]
  static final mxSousZonesObjects =
      obx.QueryRelationToMany<MxZoneObject, MxSousZoneObject>(
          _entities[48].relations[0]);
}

/// [OpObject] entity fields to define ObjectBox queries.
class OpObject_ {
  /// see [OpObject.id]
  static final id =
      obx.QueryIntegerProperty<OpObject>(_entities[49].properties[0]);

  /// see [OpObject.name]
  static final name =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[1]);

  /// see [OpObject.email]
  static final email =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[2]);

  /// see [OpObject.telephone]
  static final telephone =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[3]);

  /// see [OpObject.adresse]
  static final adresse =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[4]);

  /// see [OpObject.is_actif]
  static final is_actif =
      obx.QueryBooleanProperty<OpObject>(_entities[49].properties[5]);

  /// see [OpObject.type_op_id]
  static final type_op_id =
      obx.QueryIntegerProperty<OpObject>(_entities[49].properties[6]);

  /// see [OpObject.type_op_name]
  static final type_op_name =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[7]);

  /// see [OpObject.localite_id]
  static final localite_id =
      obx.QueryIntegerProperty<OpObject>(_entities[49].properties[8]);

  /// see [OpObject.localite_name]
  static final localite_name =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[9]);

  /// see [OpObject.sous_zone_id]
  static final sous_zone_id =
      obx.QueryIntegerProperty<OpObject>(_entities[49].properties[10]);

  /// see [OpObject.sous_zone_name]
  static final sous_zone_name =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[11]);

  /// see [OpObject.zone_id]
  static final zone_id =
      obx.QueryIntegerProperty<OpObject>(_entities[49].properties[12]);

  /// see [OpObject.zone_name]
  static final zone_name =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[13]);

  /// see [OpObject.departement_id]
  static final departement_id =
      obx.QueryIntegerProperty<OpObject>(_entities[49].properties[14]);

  /// see [OpObject.departement_name]
  static final departement_name =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[15]);

  /// see [OpObject.region_id]
  static final region_id =
      obx.QueryIntegerProperty<OpObject>(_entities[49].properties[16]);

  /// see [OpObject.region_name]
  static final region_name =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[17]);

  /// see [OpObject.pays_id]
  static final pays_id =
      obx.QueryIntegerProperty<OpObject>(_entities[49].properties[18]);

  /// see [OpObject.pays_name]
  static final pays_name =
      obx.QueryStringProperty<OpObject>(_entities[49].properties[19]);
}

/// [PersonEntity] entity fields to define ObjectBox queries.
class PersonEntity_ {
  /// see [PersonEntity.id]
  static final id =
      obx.QueryIntegerProperty<PersonEntity>(_entities[50].properties[0]);

  /// see [PersonEntity.name]
  static final name =
      obx.QueryStringProperty<PersonEntity>(_entities[50].properties[1]);

  /// see [PersonEntity.age]
  static final age =
      obx.QueryIntegerProperty<PersonEntity>(_entities[50].properties[2]);
}

/// [ProducteurObject] entity fields to define ObjectBox queries.
class ProducteurObject_ {
  /// see [ProducteurObject.id]
  static final id =
      obx.QueryIntegerProperty<ProducteurObject>(_entities[51].properties[0]);

  /// see [ProducteurObject.prenom]
  static final prenom =
      obx.QueryStringProperty<ProducteurObject>(_entities[51].properties[1]);

  /// see [ProducteurObject.nom]
  static final nom =
      obx.QueryStringProperty<ProducteurObject>(_entities[51].properties[2]);

  /// see [ProducteurObject.cni]
  static final cni =
      obx.QueryStringProperty<ProducteurObject>(_entities[51].properties[3]);

  /// see [ProducteurObject.email]
  static final email =
      obx.QueryStringProperty<ProducteurObject>(_entities[51].properties[4]);

  /// see [ProducteurObject.telephone]
  static final telephone =
      obx.QueryStringProperty<ProducteurObject>(_entities[51].properties[5]);

  /// see [ProducteurObject.adresse]
  static final adresse =
      obx.QueryStringProperty<ProducteurObject>(_entities[51].properties[6]);

  /// see [ProducteurObject.opid]
  static final opid =
      obx.QueryIntegerProperty<ProducteurObject>(_entities[51].properties[7]);

  /// see [ProducteurObject.opname]
  static final opname =
      obx.QueryStringProperty<ProducteurObject>(_entities[51].properties[8]);

  /// see [ProducteurObject.typeopid]
  static final typeopid =
      obx.QueryIntegerProperty<ProducteurObject>(_entities[51].properties[9]);

  /// see [ProducteurObject.typeopname]
  static final typeopname =
      obx.QueryStringProperty<ProducteurObject>(_entities[51].properties[10]);

  /// see [ProducteurObject.is_actif]
  static final is_actif =
      obx.QueryBooleanProperty<ProducteurObject>(_entities[51].properties[11]);
}

/// [ProduitEntreeObject] entity fields to define ObjectBox queries.
class ProduitEntreeObject_ {
  /// see [ProduitEntreeObject.id]
  static final id = obx.QueryIntegerProperty<ProduitEntreeObject>(
      _entities[52].properties[0]);

  /// see [ProduitEntreeObject.produitopid]
  static final produitopid = obx.QueryIntegerProperty<ProduitEntreeObject>(
      _entities[52].properties[1]);

  /// see [ProduitEntreeObject.produitname]
  static final produitname =
      obx.QueryStringProperty<ProduitEntreeObject>(_entities[52].properties[2]);

  /// see [ProduitEntreeObject.etapeid]
  static final etapeid = obx.QueryIntegerProperty<ProduitEntreeObject>(
      _entities[52].properties[3]);

  /// see [ProduitEntreeObject.etapename]
  static final etapename =
      obx.QueryStringProperty<ProduitEntreeObject>(_entities[52].properties[4]);
}

/// [ProduitSortieObject] entity fields to define ObjectBox queries.
class ProduitSortieObject_ {
  /// see [ProduitSortieObject.id]
  static final id = obx.QueryIntegerProperty<ProduitSortieObject>(
      _entities[53].properties[0]);

  /// see [ProduitSortieObject.produitopid]
  static final produitopid = obx.QueryIntegerProperty<ProduitSortieObject>(
      _entities[53].properties[1]);

  /// see [ProduitSortieObject.produitname]
  static final produitname =
      obx.QueryStringProperty<ProduitSortieObject>(_entities[53].properties[2]);

  /// see [ProduitSortieObject.etapeid]
  static final etapeid = obx.QueryIntegerProperty<ProduitSortieObject>(
      _entities[53].properties[3]);

  /// see [ProduitSortieObject.etapename]
  static final etapename =
      obx.QueryStringProperty<ProduitSortieObject>(_entities[53].properties[4]);
}

/// [SaisonObject] entity fields to define ObjectBox queries.
class SaisonObject_ {
  /// see [SaisonObject.id]
  static final id =
      obx.QueryIntegerProperty<SaisonObject>(_entities[54].properties[0]);

  /// see [SaisonObject.name]
  static final name =
      obx.QueryStringProperty<SaisonObject>(_entities[54].properties[1]);

  /// see [SaisonObject.description]
  static final description =
      obx.QueryStringProperty<SaisonObject>(_entities[54].properties[2]);
}

/// [StructureObject] entity fields to define ObjectBox queries.
class StructureObject_ {
  /// see [StructureObject.id]
  static final id =
      obx.QueryIntegerProperty<StructureObject>(_entities[55].properties[0]);

  /// see [StructureObject.name]
  static final name =
      obx.QueryStringProperty<StructureObject>(_entities[55].properties[1]);

  /// see [StructureObject.sigle]
  static final sigle =
      obx.QueryStringProperty<StructureObject>(_entities[55].properties[2]);

  /// see [StructureObject.telephone]
  static final telephone =
      obx.QueryStringProperty<StructureObject>(_entities[55].properties[3]);

  /// see [StructureObject.adresse]
  static final adresse =
      obx.QueryStringProperty<StructureObject>(_entities[55].properties[4]);

  /// see [StructureObject.souszoneid]
  static final souszoneid =
      obx.QueryIntegerProperty<StructureObject>(_entities[55].properties[5]);

  /// see [StructureObject.souszonename]
  static final souszonename =
      obx.QueryStringProperty<StructureObject>(_entities[55].properties[6]);

  /// see [StructureObject.zoneid]
  static final zoneid =
      obx.QueryIntegerProperty<StructureObject>(_entities[55].properties[7]);

  /// see [StructureObject.zonename]
  static final zonename =
      obx.QueryStringProperty<StructureObject>(_entities[55].properties[8]);

  /// see [StructureObject.paysid]
  static final paysid =
      obx.QueryIntegerProperty<StructureObject>(_entities[55].properties[9]);

  /// see [StructureObject.paysname]
  static final paysname =
      obx.QueryStringProperty<StructureObject>(_entities[55].properties[10]);
}

/// [TypeChargeExploitationObject] entity fields to define ObjectBox queries.
class TypeChargeExploitationObject_ {
  /// see [TypeChargeExploitationObject.id]
  static final id = obx.QueryIntegerProperty<TypeChargeExploitationObject>(
      _entities[56].properties[0]);

  /// see [TypeChargeExploitationObject.name]
  static final name = obx.QueryStringProperty<TypeChargeExploitationObject>(
      _entities[56].properties[1]);
}

/// [TypeChargeObject] entity fields to define ObjectBox queries.
class TypeChargeObject_ {
  /// see [TypeChargeObject.id]
  static final id =
      obx.QueryIntegerProperty<TypeChargeObject>(_entities[57].properties[0]);

  /// see [TypeChargeObject.name]
  static final name =
      obx.QueryStringProperty<TypeChargeObject>(_entities[57].properties[1]);
}

/// [TypeOpObject] entity fields to define ObjectBox queries.
class TypeOpObject_ {
  /// see [TypeOpObject.id]
  static final id =
      obx.QueryIntegerProperty<TypeOpObject>(_entities[58].properties[0]);

  /// see [TypeOpObject.name]
  static final name =
      obx.QueryStringProperty<TypeOpObject>(_entities[58].properties[1]);
}

/// [TypeTransformationObject] entity fields to define ObjectBox queries.
class TypeTransformationObject_ {
  /// see [TypeTransformationObject.id]
  static final id = obx.QueryIntegerProperty<TypeTransformationObject>(
      _entities[59].properties[0]);

  /// see [TypeTransformationObject.name]
  static final name = obx.QueryStringProperty<TypeTransformationObject>(
      _entities[59].properties[1]);

  /// see [TypeTransformationObject.produitopid]
  static final produitopid = obx.QueryIntegerProperty<TypeTransformationObject>(
      _entities[59].properties[2]);

  /// see [TypeTransformationObject.produitname]
  static final produitname = obx.QueryStringProperty<TypeTransformationObject>(
      _entities[59].properties[3]);

  /// see [TypeTransformationObject.filiereid]
  static final filiereid = obx.QueryIntegerProperty<TypeTransformationObject>(
      _entities[59].properties[4]);

  /// see [TypeTransformationObject.filierename]
  static final filierename = obx.QueryStringProperty<TypeTransformationObject>(
      _entities[59].properties[5]);
}

/// [UniteTransformationEtapeObject] entity fields to define ObjectBox queries.
class UniteTransformationEtapeObject_ {
  /// see [UniteTransformationEtapeObject.id]
  static final id = obx.QueryIntegerProperty<UniteTransformationEtapeObject>(
      _entities[60].properties[0]);

  /// see [UniteTransformationEtapeObject.unitetransformationid]
  static final unitetransformationid =
      obx.QueryIntegerProperty<UniteTransformationEtapeObject>(
          _entities[60].properties[1]);

  /// see [UniteTransformationEtapeObject.unitetransformationname]
  static final unitetransformationname =
      obx.QueryStringProperty<UniteTransformationEtapeObject>(
          _entities[60].properties[2]);

  /// see [UniteTransformationEtapeObject.etapeid]
  static final etapeid =
      obx.QueryIntegerProperty<UniteTransformationEtapeObject>(
          _entities[60].properties[3]);

  /// see [UniteTransformationEtapeObject.etapename]
  static final etapename =
      obx.QueryStringProperty<UniteTransformationEtapeObject>(
          _entities[60].properties[4]);

  /// see [UniteTransformationEtapeObject.etapenumero]
  static final etapenumero =
      obx.QueryIntegerProperty<UniteTransformationEtapeObject>(
          _entities[60].properties[5]);

  /// see [UniteTransformationEtapeObject.is_actif]
  static final is_actif =
      obx.QueryBooleanProperty<UniteTransformationEtapeObject>(
          _entities[60].properties[6]);
}

/// [UniteTransformationObject] entity fields to define ObjectBox queries.
class UniteTransformationObject_ {
  /// see [UniteTransformationObject.id]
  static final id = obx.QueryIntegerProperty<UniteTransformationObject>(
      _entities[61].properties[0]);

  /// see [UniteTransformationObject.typetransformationid]
  static final typetransformationid =
      obx.QueryIntegerProperty<UniteTransformationObject>(
          _entities[61].properties[1]);

  /// see [UniteTransformationObject.typetransformationname]
  static final typetransformationname =
      obx.QueryStringProperty<UniteTransformationObject>(
          _entities[61].properties[2]);

  /// see [UniteTransformationObject.societeid]
  static final societeid = obx.QueryIntegerProperty<UniteTransformationObject>(
      _entities[61].properties[3]);

  /// see [UniteTransformationObject.societename]
  static final societename = obx.QueryStringProperty<UniteTransformationObject>(
      _entities[61].properties[4]);
}

/// [UserObject] entity fields to define ObjectBox queries.
class UserObject_ {
  /// see [UserObject.id]
  static final id =
      obx.QueryIntegerProperty<UserObject>(_entities[62].properties[0]);

  /// see [UserObject.token]
  static final token =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[1]);

  /// see [UserObject.refresh]
  static final refresh =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[2]);

  /// see [UserObject.access]
  static final access =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[3]);

  /// see [UserObject.email]
  static final email =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[4]);

  /// see [UserObject.password]
  static final password =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[5]);

  /// see [UserObject.firstname]
  static final firstname =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[6]);

  /// see [UserObject.lastname]
  static final lastname =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[7]);

  /// see [UserObject.op_id]
  static final op_id =
      obx.QueryIntegerProperty<UserObject>(_entities[62].properties[8]);

  /// see [UserObject.op_name]
  static final op_name =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[9]);

  /// see [UserObject.sous_zone_id]
  static final sous_zone_id =
      obx.QueryIntegerProperty<UserObject>(_entities[62].properties[10]);

  /// see [UserObject.sous_zone_name]
  static final sous_zone_name =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[11]);

  /// see [UserObject.zone_id]
  static final zone_id =
      obx.QueryIntegerProperty<UserObject>(_entities[62].properties[12]);

  /// see [UserObject.zone_name]
  static final zone_name =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[13]);

  /// see [UserObject.point_id]
  static final point_id =
      obx.QueryIntegerProperty<UserObject>(_entities[62].properties[14]);

  /// see [UserObject.point_name]
  static final point_name =
      obx.QueryStringProperty<UserObject>(_entities[62].properties[15]);
}

/// [UserOpObject] entity fields to define ObjectBox queries.
class UserOpObject_ {
  /// see [UserOpObject.id]
  static final id =
      obx.QueryIntegerProperty<UserOpObject>(_entities[63].properties[0]);

  /// see [UserOpObject.userid]
  static final userid =
      obx.QueryIntegerProperty<UserOpObject>(_entities[63].properties[1]);

  /// see [UserOpObject.typeopid]
  static final typeopid =
      obx.QueryIntegerProperty<UserOpObject>(_entities[63].properties[2]);

  /// see [UserOpObject.typeopname]
  static final typeopname =
      obx.QueryStringProperty<UserOpObject>(_entities[63].properties[3]);

  /// see [UserOpObject.opid]
  static final opid =
      obx.QueryIntegerProperty<UserOpObject>(_entities[63].properties[4]);

  /// see [UserOpObject.opname]
  static final opname =
      obx.QueryStringProperty<UserOpObject>(_entities[63].properties[5]);
}

/// [UserUniteTransformationObject] entity fields to define ObjectBox queries.
class UserUniteTransformationObject_ {
  /// see [UserUniteTransformationObject.id]
  static final id = obx.QueryIntegerProperty<UserUniteTransformationObject>(
      _entities[64].properties[0]);

  /// see [UserUniteTransformationObject.userid]
  static final userid = obx.QueryIntegerProperty<UserUniteTransformationObject>(
      _entities[64].properties[1]);

  /// see [UserUniteTransformationObject.typeunitetransformationid]
  static final typeunitetransformationid =
      obx.QueryIntegerProperty<UserUniteTransformationObject>(
          _entities[64].properties[2]);

  /// see [UserUniteTransformationObject.typeunitetransformationname]
  static final typeunitetransformationname =
      obx.QueryStringProperty<UserUniteTransformationObject>(
          _entities[64].properties[3]);

  /// see [UserUniteTransformationObject.unitetransformationid]
  static final unitetransformationid =
      obx.QueryIntegerProperty<UserUniteTransformationObject>(
          _entities[64].properties[4]);

  /// see [UserUniteTransformationObject.unitetransformationname]
  static final unitetransformationname =
      obx.QueryStringProperty<UserUniteTransformationObject>(
          _entities[64].properties[5]);

  /// see [UserUniteTransformationObject.societeid]
  static final societeid =
      obx.QueryIntegerProperty<UserUniteTransformationObject>(
          _entities[64].properties[6]);

  /// see [UserUniteTransformationObject.societename]
  static final societename =
      obx.QueryStringProperty<UserUniteTransformationObject>(
          _entities[64].properties[7]);
}

/// [UsinageObject] entity fields to define ObjectBox queries.
class UsinageObject_ {
  /// see [UsinageObject.id]
  static final id =
      obx.QueryIntegerProperty<UsinageObject>(_entities[65].properties[0]);

  /// see [UsinageObject.date]
  static final date =
      obx.QueryDateProperty<UsinageObject>(_entities[65].properties[1]);

  /// see [UsinageObject.heure_debut]
  static final heure_debut =
      obx.QueryDateProperty<UsinageObject>(_entities[65].properties[2]);

  /// see [UsinageObject.heure_fin]
  static final heure_fin =
      obx.QueryDateProperty<UsinageObject>(_entities[65].properties[3]);

  /// see [UsinageObject.nombre_personne]
  static final nombre_personne =
      obx.QueryDoubleProperty<UsinageObject>(_entities[65].properties[4]);

  /// see [UsinageObject.taux]
  static final taux =
      obx.QueryDoubleProperty<UsinageObject>(_entities[65].properties[5]);

  /// see [UsinageObject.unitetransformationid]
  static final unitetransformationid =
      obx.QueryIntegerProperty<UsinageObject>(_entities[65].properties[6]);

  /// see [UsinageObject.unitetransformationname]
  static final unitetransformationname =
      obx.QueryStringProperty<UsinageObject>(_entities[65].properties[7]);

  /// see [UsinageObject.varieteid]
  static final varieteid =
      obx.QueryIntegerProperty<UsinageObject>(_entities[65].properties[8]);

  /// see [UsinageObject.varietename]
  static final varietename =
      obx.QueryStringProperty<UsinageObject>(_entities[65].properties[9]);

  /// see [UsinageObject.observation]
  static final observation =
      obx.QueryStringProperty<UsinageObject>(_entities[65].properties[10]);
}

/// [UsinageProduitEntreeObject] entity fields to define ObjectBox queries.
class UsinageProduitEntreeObject_ {
  /// see [UsinageProduitEntreeObject.id]
  static final id = obx.QueryIntegerProperty<UsinageProduitEntreeObject>(
      _entities[66].properties[0]);

  /// see [UsinageProduitEntreeObject.quantite]
  static final quantite = obx.QueryDoubleProperty<UsinageProduitEntreeObject>(
      _entities[66].properties[1]);

  /// see [UsinageProduitEntreeObject.usinageid]
  static final usinageid = obx.QueryIntegerProperty<UsinageProduitEntreeObject>(
      _entities[66].properties[2]);

  /// see [UsinageProduitEntreeObject.produitentreeid]
  static final produitentreeid =
      obx.QueryIntegerProperty<UsinageProduitEntreeObject>(
          _entities[66].properties[3]);

  /// see [UsinageProduitEntreeObject.produitentreename]
  static final produitentreename =
      obx.QueryStringProperty<UsinageProduitEntreeObject>(
          _entities[66].properties[4]);
}

/// [UsinageProduitSortieObject] entity fields to define ObjectBox queries.
class UsinageProduitSortieObject_ {
  /// see [UsinageProduitSortieObject.id]
  static final id = obx.QueryIntegerProperty<UsinageProduitSortieObject>(
      _entities[67].properties[0]);

  /// see [UsinageProduitSortieObject.quantite]
  static final quantite = obx.QueryDoubleProperty<UsinageProduitSortieObject>(
      _entities[67].properties[1]);

  /// see [UsinageProduitSortieObject.usinageid]
  static final usinageid = obx.QueryIntegerProperty<UsinageProduitSortieObject>(
      _entities[67].properties[2]);

  /// see [UsinageProduitSortieObject.produitsortieid]
  static final produitsortieid =
      obx.QueryIntegerProperty<UsinageProduitSortieObject>(
          _entities[67].properties[3]);

  /// see [UsinageProduitSortieObject.produitsortiename]
  static final produitsortiename =
      obx.QueryStringProperty<UsinageProduitSortieObject>(
          _entities[67].properties[4]);
}

/// [VarieteObject] entity fields to define ObjectBox queries.
class VarieteObject_ {
  /// see [VarieteObject.id]
  static final id =
      obx.QueryIntegerProperty<VarieteObject>(_entities[68].properties[0]);

  /// see [VarieteObject.name]
  static final name =
      obx.QueryStringProperty<VarieteObject>(_entities[68].properties[1]);

  /// see [VarieteObject.surface_unite]
  static final surface_unite =
      obx.QueryStringProperty<VarieteObject>(_entities[68].properties[2]);

  /// see [VarieteObject.quantite_unite]
  static final quantite_unite =
      obx.QueryStringProperty<VarieteObject>(_entities[68].properties[3]);

  /// see [VarieteObject.rendement_unite]
  static final rendement_unite =
      obx.QueryDoubleProperty<VarieteObject>(_entities[68].properties[4]);

  /// see [VarieteObject.produitid]
  static final produitid =
      obx.QueryIntegerProperty<VarieteObject>(_entities[68].properties[5]);

  /// see [VarieteObject.produitname]
  static final produitname =
      obx.QueryStringProperty<VarieteObject>(_entities[68].properties[6]);

  /// see [VarieteObject.filiereid]
  static final filiereid =
      obx.QueryIntegerProperty<VarieteObject>(_entities[68].properties[7]);

  /// see [VarieteObject.filierename]
  static final filierename =
      obx.QueryStringProperty<VarieteObject>(_entities[68].properties[8]);

  /// see [VarieteObject.familleemplacementid]
  static final familleemplacementid =
      obx.QueryIntegerProperty<VarieteObject>(_entities[68].properties[9]);

  /// see [VarieteObject.familleemplacementname]
  static final familleemplacementname =
      obx.QueryStringProperty<VarieteObject>(_entities[68].properties[10]);
}

/// [MxFournisseurObject] entity fields to define ObjectBox queries.
class MxFournisseurObject_ {
  /// see [MxFournisseurObject.id]
  static final id = obx.QueryIntegerProperty<MxFournisseurObject>(
      _entities[69].properties[0]);

  /// see [MxFournisseurObject.name]
  static final name =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[1]);

  /// see [MxFournisseurObject.sigle]
  static final sigle =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[2]);

  /// see [MxFournisseurObject.email]
  static final email =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[3]);

  /// see [MxFournisseurObject.telephone]
  static final telephone =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[4]);

  /// see [MxFournisseurObject.adresse]
  static final adresse =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[5]);

  /// see [MxFournisseurObject.prenom_contact]
  static final prenom_contact =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[6]);

  /// see [MxFournisseurObject.nom_contact]
  static final nom_contact =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[7]);

  /// see [MxFournisseurObject.email_contact]
  static final email_contact =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[8]);

  /// see [MxFournisseurObject.telephone_contact]
  static final telephone_contact =
      obx.QueryStringProperty<MxFournisseurObject>(_entities[69].properties[9]);

  /// see [MxFournisseurObject.mxSocieteObject]
  static final mxSocieteObject =
      obx.QueryRelationToOne<MxFournisseurObject, MxSocieteObject>(
          _entities[69].properties[10]);
}

/// [MxAgenceObject] entity fields to define ObjectBox queries.
class MxAgenceObject_ {
  /// see [MxAgenceObject.id]
  static final id =
      obx.QueryIntegerProperty<MxAgenceObject>(_entities[70].properties[0]);

  /// see [MxAgenceObject.name]
  static final name =
      obx.QueryStringProperty<MxAgenceObject>(_entities[70].properties[1]);

  /// see [MxAgenceObject.sigle]
  static final sigle =
      obx.QueryStringProperty<MxAgenceObject>(_entities[70].properties[2]);

  /// see [MxAgenceObject.mxtypeRemboursementObject]
  static final mxtypeRemboursementObject =
      obx.QueryRelationToOne<MxAgenceObject, MxTypeRemboursementObject>(
          _entities[70].properties[3]);

  /// see [MxAgenceObject.mxcreditObjects]
  static final mxcreditObjects =
      obx.QueryRelationToMany<MxAgenceObject, MxCreditObject>(
          _entities[70].relations[0]);

  /// see [MxAgenceObject.mxcreditsObjects]
  static final mxcreditsObjects =
      obx.QueryRelationToMany<MxAgenceObject, MxCreditObject>(
          _entities[70].relations[1]);

  /// see [MxAgenceObject.mxexploitationObjects]
  static final mxexploitationObjects =
      obx.QueryRelationToMany<MxAgenceObject, MxExploitationObject>(
          _entities[70].relations[2]);
}

/// [MxPointAgenceObject] entity fields to define ObjectBox queries.
class MxPointAgenceObject_ {
  /// see [MxPointAgenceObject.id]
  static final id = obx.QueryIntegerProperty<MxPointAgenceObject>(
      _entities[71].properties[0]);

  /// see [MxPointAgenceObject.mxPointObjects]
  static final mxPointObjects =
      obx.QueryRelationToMany<MxPointAgenceObject, MxPointObject>(
          _entities[71].relations[0]);

  /// see [MxPointAgenceObject.mxAgenceObjects]
  static final mxAgenceObjects =
      obx.QueryRelationToMany<MxPointAgenceObject, MxAgenceObject>(
          _entities[71].relations[1]);
}

/// [MxPointObject] entity fields to define ObjectBox queries.
class MxPointObject_ {
  /// see [MxPointObject.id]
  static final id =
      obx.QueryIntegerProperty<MxPointObject>(_entities[72].properties[0]);

  /// see [MxPointObject.name]
  static final name =
      obx.QueryStringProperty<MxPointObject>(_entities[72].properties[1]);

  /// see [MxPointObject.isProduit]
  static final isProduit =
      obx.QueryBooleanProperty<MxPointObject>(_entities[72].properties[2]);

  /// see [MxPointObject.isIntrant]
  static final isIntrant =
      obx.QueryBooleanProperty<MxPointObject>(_entities[72].properties[3]);

  /// see [MxPointObject.isVirtuel]
  static final isVirtuel =
      obx.QueryBooleanProperty<MxPointObject>(_entities[72].properties[4]);

  /// see [MxPointObject.mxLocaliteObject]
  static final mxLocaliteObject =
      obx.QueryRelationToOne<MxPointObject, MxLocaliteObject>(
          _entities[72].properties[5]);

  /// see [MxPointObject.mxOpsObjects]
  static final mxOpsObjects =
      obx.QueryRelationToMany<MxPointObject, MxOpObject>(
          _entities[72].relations[0]);

  /// see [MxPointObject.mxUserPointsObjects]
  static final mxUserPointsObjects =
      obx.QueryRelationToMany<MxPointObject, MxUserPointObject>(
          _entities[72].relations[1]);

  /// see [MxPointObject.mxEntrepotsObjects]
  static final mxEntrepotsObjects =
      obx.QueryRelationToMany<MxPointObject, MxEntrepotObject>(
          _entities[72].relations[2]);

  /// see [MxPointObject.mxRemboursementsObjects]
  static final mxRemboursementsObjects =
      obx.QueryRelationToMany<MxPointObject, MxRemboursementObject>(
          _entities[72].relations[3]);

  /// see [MxPointObject.mxPointAgencesObjects]
  static final mxPointAgencesObjects =
      obx.QueryRelationToMany<MxPointObject, MxPointAgenceObject>(
          _entities[72].relations[4]);
}

/// [MxSocieteObject] entity fields to define ObjectBox queries.
class MxSocieteObject_ {
  /// see [MxSocieteObject.id]
  static final id =
      obx.QueryIntegerProperty<MxSocieteObject>(_entities[73].properties[0]);

  /// see [MxSocieteObject.name]
  static final name =
      obx.QueryStringProperty<MxSocieteObject>(_entities[73].properties[1]);

  /// see [MxSocieteObject.sigle]
  static final sigle =
      obx.QueryStringProperty<MxSocieteObject>(_entities[73].properties[2]);

  /// see [MxSocieteObject.email]
  static final email =
      obx.QueryStringProperty<MxSocieteObject>(_entities[73].properties[3]);

  /// see [MxSocieteObject.adresse]
  static final adresse =
      obx.QueryStringProperty<MxSocieteObject>(_entities[73].properties[4]);

  /// see [MxSocieteObject.telephone]
  static final telephone =
      obx.QueryStringProperty<MxSocieteObject>(_entities[73].properties[5]);

  /// see [MxSocieteObject.mxtypeSocieteObject]
  static final mxtypeSocieteObject =
      obx.QueryRelationToOne<MxSocieteObject, MxTypeSocieteObject>(
          _entities[73].properties[6]);
}

/// [MxTypeSocieteObject] entity fields to define ObjectBox queries.
class MxTypeSocieteObject_ {
  /// see [MxTypeSocieteObject.id]
  static final id = obx.QueryIntegerProperty<MxTypeSocieteObject>(
      _entities[74].properties[0]);

  /// see [MxTypeSocieteObject.name]
  static final name =
      obx.QueryStringProperty<MxTypeSocieteObject>(_entities[74].properties[1]);
}

/// [MxUserPointObject] entity fields to define ObjectBox queries.
class MxUserPointObject_ {
  /// see [MxUserPointObject.id]
  static final id =
      obx.QueryIntegerProperty<MxUserPointObject>(_entities[75].properties[0]);

  /// see [MxUserPointObject.userId]
  static final userId =
      obx.QueryIntegerProperty<MxUserPointObject>(_entities[75].properties[1]);

  /// see [MxUserPointObject.mxUserObject]
  static final mxUserObject =
      obx.QueryRelationToOne<MxUserPointObject, MxUserPointObject>(
          _entities[75].properties[2]);

  /// see [MxUserPointObject.mxPointObject]
  static final mxPointObject =
      obx.QueryRelationToOne<MxUserPointObject, MxPointObject>(
          _entities[75].properties[3]);
}

/// [UserPointObject] entity fields to define ObjectBox queries.
class UserPointObject_ {
  /// see [UserPointObject.id]
  static final id =
      obx.QueryIntegerProperty<UserPointObject>(_entities[76].properties[0]);

  /// see [UserPointObject.userid]
  static final userid =
      obx.QueryIntegerProperty<UserPointObject>(_entities[76].properties[1]);

  /// see [UserPointObject.pointid]
  static final pointid =
      obx.QueryIntegerProperty<UserPointObject>(_entities[76].properties[2]);

  /// see [UserPointObject.pointname]
  static final pointname =
      obx.QueryStringProperty<UserPointObject>(_entities[76].properties[3]);
}

/// [MxModeEntreeSortieIntrantObject] entity fields to define ObjectBox queries.
class MxModeEntreeSortieIntrantObject_ {
  /// see [MxModeEntreeSortieIntrantObject.id]
  static final id = obx.QueryIntegerProperty<MxModeEntreeSortieIntrantObject>(
      _entities[77].properties[0]);

  /// see [MxModeEntreeSortieIntrantObject.code]
  static final code = obx.QueryStringProperty<MxModeEntreeSortieIntrantObject>(
      _entities[77].properties[1]);

  /// see [MxModeEntreeSortieIntrantObject.name]
  static final name = obx.QueryStringProperty<MxModeEntreeSortieIntrantObject>(
      _entities[77].properties[2]);

  /// see [MxModeEntreeSortieIntrantObject.mxtypemouvementintrantObject]
  static final mxtypemouvementintrantObject = obx.QueryRelationToOne<
      MxModeEntreeSortieIntrantObject,
      MxTypeMouvementIntrantObject>(_entities[77].properties[3]);

  /// see [MxModeEntreeSortieIntrantObject.mxmouvementintrantsObjects]
  static final mxmouvementintrantsObjects = obx.QueryRelationToMany<
      MxModeEntreeSortieIntrantObject,
      MxMouvementIntrantObject>(_entities[77].relations[0]);
}

/// [MxMouvementIntrantObject] entity fields to define ObjectBox queries.
class MxMouvementIntrantObject_ {
  /// see [MxMouvementIntrantObject.id]
  static final id = obx.QueryIntegerProperty<MxMouvementIntrantObject>(
      _entities[78].properties[0]);

  /// see [MxMouvementIntrantObject.date]
  static final date = obx.QueryDateProperty<MxMouvementIntrantObject>(
      _entities[78].properties[1]);

  /// see [MxMouvementIntrantObject.pu]
  static final pu = obx.QueryDoubleProperty<MxMouvementIntrantObject>(
      _entities[78].properties[2]);

  /// see [MxMouvementIntrantObject.quantiteEntreeEmballage]
  static final quantiteEntreeEmballage =
      obx.QueryDoubleProperty<MxMouvementIntrantObject>(
          _entities[78].properties[3]);

  /// see [MxMouvementIntrantObject.quantiteSortieEmballage]
  static final quantiteSortieEmballage =
      obx.QueryDoubleProperty<MxMouvementIntrantObject>(
          _entities[78].properties[4]);

  /// see [MxMouvementIntrantObject.nombreUnite]
  static final nombreUnite = obx.QueryDoubleProperty<MxMouvementIntrantObject>(
      _entities[78].properties[5]);

  /// see [MxMouvementIntrantObject.valeur]
  static final valeur = obx.QueryDoubleProperty<MxMouvementIntrantObject>(
      _entities[78].properties[6]);

  /// see [MxMouvementIntrantObject.lot]
  static final lot = obx.QueryStringProperty<MxMouvementIntrantObject>(
      _entities[78].properties[7]);

  /// see [MxMouvementIntrantObject.mxanneeObject]
  static final mxanneeObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxAnneeObject>(
          _entities[78].properties[8]);

  /// see [MxMouvementIntrantObject.mxsaisonObject]
  static final mxsaisonObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxSaisonObject>(
          _entities[78].properties[9]);

  /// see [MxMouvementIntrantObject.mxemballageObject]
  static final mxemballageObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxEmballageObject>(
          _entities[78].properties[10]);

  /// see [MxMouvementIntrantObject.mxopObject]
  static final mxopObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxOpObject>(
          _entities[78].properties[11]);

  /// see [MxMouvementIntrantObject.mxfournisseurObject]
  static final mxfournisseurObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxFournisseurObject>(
          _entities[78].properties[12]);

  /// see [MxMouvementIntrantObject.mxunitetransformationObject]
  static final mxunitetransformationObject = obx.QueryRelationToOne<
      MxMouvementIntrantObject,
      MxUniteTransformationObject>(_entities[78].properties[13]);

  /// see [MxMouvementIntrantObject.mxvarieteObject]
  static final mxvarieteObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxVarieteObject>(
          _entities[78].properties[14]);

  /// see [MxMouvementIntrantObject.mxmodeentreesortiestockObject]
  static final mxmodeentreesortiestockObject = obx.QueryRelationToOne<
      MxMouvementIntrantObject,
      MxModeEntreeSortieStockObject>(_entities[78].properties[15]);

  /// see [MxMouvementIntrantObject.mxemplacementObject]
  static final mxemplacementObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxEmplacementObject>(
          _entities[78].properties[16]);

  /// see [MxMouvementIntrantObject.mxemplacementSourceObject]
  static final mxemplacementSourceObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxEmplacementObject>(
          _entities[78].properties[17]);

  /// see [MxMouvementIntrantObject.mxemplacementDestinationObject]
  static final mxemplacementDestinationObject =
      obx.QueryRelationToOne<MxMouvementIntrantObject, MxEmplacementObject>(
          _entities[78].properties[18]);
}

/// [MxTypeMouvementIntrantObject] entity fields to define ObjectBox queries.
class MxTypeMouvementIntrantObject_ {
  /// see [MxTypeMouvementIntrantObject.id]
  static final id = obx.QueryIntegerProperty<MxTypeMouvementIntrantObject>(
      _entities[79].properties[0]);

  /// see [MxTypeMouvementIntrantObject.name]
  static final name = obx.QueryStringProperty<MxTypeMouvementIntrantObject>(
      _entities[79].properties[1]);

  /// see [MxTypeMouvementIntrantObject.mxmodeEntreeSortieIntrantObjects]
  static final mxmodeEntreeSortieIntrantObjects = obx.QueryRelationToMany<
      MxTypeMouvementIntrantObject,
      MxModeEntreeSortieIntrantObject>(_entities[79].relations[0]);
}

/// [MxProduitChargeExploitationObject] entity fields to define ObjectBox queries.
class MxProduitChargeExploitationObject_ {
  /// see [MxProduitChargeExploitationObject.id]
  static final id = obx.QueryIntegerProperty<MxProduitChargeExploitationObject>(
      _entities[80].properties[0]);

  /// see [MxProduitChargeExploitationObject.mxChargeExploitationObject]
  static final mxChargeExploitationObject = obx.QueryRelationToOne<
      MxProduitChargeExploitationObject,
      MxChargeExploitationObject>(_entities[80].properties[1]);

  /// see [MxProduitChargeExploitationObject.mxProduitObject]
  static final mxProduitObject = obx.QueryRelationToOne<
      MxProduitChargeExploitationObject,
      MxProduitObject>(_entities[80].properties[2]);
}
